extends layout

block content
  input(type='image' src='/javascripts/Vult-H.png' onclick='gogo()')
  style(type='text/css' media='screen') #editor_right { position: absolute; width: 42%; left: 45%; height: 90%;}
  style(type='text/css' media='screen') #editor_left { position: absolute; width: 42%; height: 90%;}
  style(type='text/css' media='screen') #editors { position: absolute; width : 100%; height: 500px;}

  div(id='editors')
    div(id='editor_left')
    div(id='editor_right')

  script(src='/javascripts/external/ace/ace.js' type='text/javascript' charset='utf-8')
  script(src='/javascripts/external/midi.js' type='text/javascript' charset='utf-8')
  script(src='/javascripts/vult_node.js' type='text/javascript' charset='utf-8')
  script(type='text/javascript').
    editor_left = ace.edit("editor_left");
    editor_left.setTheme("ace/theme/monokai");
    editor_left.getSession().setMode("ace/mode/vult");
    editor_right = ace.edit("editor_right");
    editor_right.setTheme("ace/theme/monokai");
    editor_right.getSession().setMode("ace/mode/javascript");
    editor_right.setReadOnly(true);
    editor_left.setValue( !{ pagedata.text});


    document.getElementById('editor_left').style.fontSize='14px';
    document.getElementById('editor_right').style.fontSize='14px';

    previous_text = "";
    current_text = "";
    change = true;

    setInterval(function() {
      if(change==true){
      var new_text = jscode(editor_left.getValue());
      current_text = new_text;
      if(new_text.indexOf('Syntax error') == 0){
        editor_right.setValue('(* '+new_text+' *)\n\n'+previous_text);
        editor_right.clearSelection();
        editor_right.gotoLine(0);
      } else {
        editor_right.setValue(new_text);
        editor_right.clearSelection();
        previous_text = new_text;
        editor_right.gotoLine(0);
      }
      change=false;
      }
    },500);

    editor_left.getSession().on('change', function(e){change=true;});

    //editor_left.setValue('' /*!{ pagedata.text}*/ );
    editor_left.clearSelection();
    var new_text = jscode(editor_left.getValue());
    editor_right.setValue(new_text);
    editor_right.clearSelection();

    var audioContext = new AudioContext();
    source = audioContext.createBufferSource();
    var bufferSize = 1024;
    vult_object = null;
    var effect = (function() {
        var node = audioContext.createScriptProcessor(bufferSize, 1, 1);
        node.onaudioprocess = function(e) {
            var input = e.inputBuffer.getChannelData(0);
            var output = e.outputBuffer.getChannelData(0);
            for (var i = 0; i < bufferSize; i++) {
                if(vult_object){
                  output[i] = vult_object.go(input[i]);
                }
                else{
                  output[i] = input[i];
                }
            }
        }
        return node;
    })();

    oscillator = audioContext.createOscillator();
    oscillator.frequency = 440;
    oscillator.connect(effect);
    effect.connect(audioContext.destination);
    oscillator.start(0);

    function gogo(){
      try {
        vult_object = eval(current_text)
        console.log('ready!!!');
      }
      catch(e){
        console.log('Error in the code')
      }
    }


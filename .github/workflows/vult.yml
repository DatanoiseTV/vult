name: Main workflow

on:
  pull_request:
  push:
  schedule:
    # Prime the caches every Monday
    - cron: 0 0 1 * *

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-compiler:
          - 4.12.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
      
      - name: Install requirements ${{ runner.os }}     
        if: runner.os == 'Linux'
        run: |
           sudo apt-get update
           sudo apt-get install luajit nodejs

      - run: opam install ocamlbuild containers ppx_deriving ounit js_of_ocaml js_of_ocaml-ppx pla bisect_ppx result
      
      - run: opam exec make
      
      - name: Run tests ${{ runner.os }}     
        if: runner.os == 'Linux'
        run: opam exec make all
        
      - name: Package the files for Linux
        if: runner.os == 'Linux'
        run: |
          cp ./_build/src/vultc.native ./vultc
          tar -cvzf vult-linux.tar.gz vultc runtime/vultin.h runtime/vultin.cpp
      - name: Package the files for Mac
        if: runner.os == 'macOS'
        run: |
          cp ./_build/src/vultc.native ./vultc
          tar -cvzf vult-osx.tar.gz vultc runtime/vultin.h runtime/vultin.cpp
      - name: Package the files for Windows
        if: runner.os == 'Windows'
        run: |
          cp ./_build/src/vultc.native ./vultc.exe
          7z a vult-win.zip vultc.exe runtime/vultin.h runtime/vultin.cpp


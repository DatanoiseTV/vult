
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "noise.h"

float Noise_pinker(Noise__ctx_type_0 &_ctx, float x){
   float b0;
   b0 = 0.027713f;
   float b1;
   b1 = 0.027713f;
   float a1;
   a1 = -0.944574f;
   float w0;
   w0 = (x + (- (_ctx.w1 * a1)));
   float y0;
   y0 = ((_ctx.w1 * b1) + (b0 * w0));
   _ctx.w1 = w0;
   return y0;
}

void Noise__ctx_type_1_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1 _ctx;
   _ctx.x2 = 0;
   _ctx.x1 = 0;
   Noise__ctx_type_0_init(_ctx._inst1144);
   _output_ = _ctx;
   return ;
}

float Noise_process(Noise__ctx_type_1 &_ctx, float color){
   _ctx.x1 = ((7919 + (17389 * _ctx.x1)) % 32768);
   float y1;
   y1 = (3.06e-05f * int_to_float(_ctx.x1));
   _ctx.x2 = ((12553 + (27449 * _ctx.x2)) % 32768);
   float y2;
   y2 = (3.06e-05f * int_to_float(_ctx.x2));
   float out;
   if(color > 0.5f){
      out = Noise_pinker(_ctx._inst1144,(y1 + (- y2)));
   }
   else
   {
      out = (y1 + (- y2));
   }
   return (2.f * out);
}



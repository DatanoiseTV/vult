
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "saturate_soft.h"

fix16_t Saturate_soft_table(fix16_t x){
   int index;
   index = int_clip(fix_to_int(fix_mul(0x18000 /* 1.500000 */,x)),0,9);
   return fix_add(fix_get(fix_wrap_array(Saturate_soft_table_c0),index),fix_mul(x,fix_add(fix_get(fix_wrap_array(Saturate_soft_table_c1),index),fix_mul(fix_get(fix_wrap_array(Saturate_soft_table_c2),index),x))));
}

fix16_t Saturate_soft_process(fix16_t x){
   uint8_t _cond_9;
   _cond_9 = (x == 0x0 /* 0.000000 */);
   if(_cond_9){
      return 0x0 /* 0.000000 */;
   }
   fix16_t fixed;
   uint8_t sign;
   uint8_t _cond_11;
   _cond_11 = (x > 0x0 /* 0.000000 */);
   if(_cond_11){
      fixed = x;
      sign = 0;
   }
   else
   {
      fixed = (- x);
      sign = 1;
   }
   fix16_t out;
   out = 0x0 /* 0.000000 */;
   uint8_t _cond_10;
   _cond_10 = (fixed > 0x60000 /* 6.000000 */);
   if(_cond_10){
      out = 0x10000 /* 1.000000 */;
   }
   else
   {
      out = Saturate_soft_table(fixed);
   }
   if(sign){ out = (- out); }
   return out;
}

void Saturate_soft_noteOn(int note, int velocity, int channel){
}

void Saturate_soft_noteOff(int note, int channel){
}

void Saturate_soft_controlChange(int control, int value, int channel){
}

void Saturate_soft_default(){
}



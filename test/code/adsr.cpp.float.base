
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "adsr.h"

void Adsr__ctx_type_0_init(Adsr__ctx_type_0 &_output_){
   Adsr__ctx_type_0 _ctx;
   _ctx.target = 0.f;
   _ctx.state = 0;
   _ctx.rate = 0.f;
   _ctx.out = 0.f;
   _output_ = _ctx;
   return ;
}

void Adsr_adsr_init(Adsr__ctx_type_0 &_output_){
   Adsr__ctx_type_0_init(_output_);
   return ;
}

float Adsr_adsr(Adsr__ctx_type_0 &_ctx, uint8_t gate, float a, float d, float s, float r){
   _ctx.out = (_ctx.out + ((_ctx.target + (- _ctx.out)) * _ctx.rate * 0.001f));
   if(_ctx.state == 0){
      if(gate){
         _ctx.state = 1;
      }
      _ctx.rate = r;
      _ctx.target = 0.f;
   }
   if(_ctx.state == 1){
      if(bool_not(gate)){
         _ctx.state = 0;
      }
      if(_ctx.out > 1024.f){
         _ctx.state = 2;
      }
      _ctx.rate = a;
      _ctx.target = (1228.8f);
   }
   if(_ctx.state == 2){
      if(bool_not(gate)){
         _ctx.state = 0;
      }
      _ctx.rate = d;
      _ctx.target = (s * 1024.f);
   }
   return (_ctx.out * 0.0009765625f);
}



#ifndef BLIT_H
#define BLIT_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

uint8_t near_zero(int32_t x);

typedef struct _ctx_type_1 {
   int32_t pre_x;
} _ctx_type_1;

typedef _ctx_type_1 change_type;

_ctx_type_1 _ctx_type_1_init();

_ctx_type_1 change_init();

uint8_t change(_ctx_type_1 &_ctx, int32_t x);

typedef struct _ctx_type_2 {
   int32_t y1;
   int32_t x1;
} _ctx_type_2;

typedef _ctx_type_2 dcblock_type;

_ctx_type_2 _ctx_type_2_init();

_ctx_type_2 dcblock_init();

int32_t dcblock(_ctx_type_2 &_ctx, int32_t x0);

int32_t pitchToRate(int32_t d);

int32_t pulse_train(int32_t m, int32_t phase);

typedef struct _ctx_type_5 {
   int32_t state_triang;
   int32_t state_saw;
   int32_t state_pulse;
   int32_t rate;
   int32_t phase;
   int32_t output;
   int32_t m;
   _ctx_type_2 _inst1;
   _ctx_type_1 _inst0;
} _ctx_type_5;

typedef _ctx_type_5 osc_type;

_ctx_type_5 _ctx_type_5_init();

_ctx_type_5 osc_init();

int32_t osc(_ctx_type_5 &_ctx, int32_t pitch, int32_t pw, int32_t wave);



#endif // BLIT_H


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef KICK_H
#define KICK_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct _tuple___real_real__ {
   float field_0;
   float field_1;
} _tuple___real_real__;

typedef struct Noise__ctx_type_0 {
   float w1;
} Noise__ctx_type_0;

typedef Noise__ctx_type_0 Noise_pinker_type;

void Noise__ctx_type_0_init(Noise__ctx_type_0 &_output_);

void Noise_pinker_init(Noise__ctx_type_0 &_output_);

float Noise_pinker(Noise__ctx_type_0 &_ctx, float x);

typedef struct Noise__ctx_type_1 {
   int x2;
   int x1;
   Noise__ctx_type_0 _inst2;
} Noise__ctx_type_1;

typedef Noise__ctx_type_1 Noise_process_type;

void Noise__ctx_type_1_init(Noise__ctx_type_1 &_output_);

void Noise_process_init(Noise__ctx_type_1 &_output_);

float Noise_process(Noise__ctx_type_1 &_ctx, float color);

typedef Noise__ctx_type_1 Noise_noteOn_type;

void Noise_noteOn_init(Noise__ctx_type_1 &_output_);

void Noise_noteOn(Noise__ctx_type_1 &_ctx, int note, int velocity, int channel);

typedef Noise__ctx_type_1 Noise_noteOff_type;

void Noise_noteOff_init(Noise__ctx_type_1 &_output_);

void Noise_noteOff(Noise__ctx_type_1 &_ctx, int note, int channel);

typedef Noise__ctx_type_1 Noise_controlChange_type;

void Noise_controlChange_init(Noise__ctx_type_1 &_output_);

void Noise_controlChange(Noise__ctx_type_1 &_ctx, int control, int value, int channel);

typedef Noise__ctx_type_1 Noise_default_type;

void Noise_default_init(Noise__ctx_type_1 &_output_);

void Noise_default(Noise__ctx_type_1 &_ctx);

typedef struct Util__ctx_type_0 {
   uint8_t pre;
} Util__ctx_type_0;

typedef Util__ctx_type_0 Util_edge_type;

void Util__ctx_type_0_init(Util__ctx_type_0 &_output_);

void Util_edge_init(Util__ctx_type_0 &_output_);

uint8_t Util_edge(Util__ctx_type_0 &_ctx, uint8_t x);

typedef struct Util__ctx_type_1 {
   float pre_x;
} Util__ctx_type_1;

typedef Util__ctx_type_1 Util_change_type;

void Util__ctx_type_1_init(Util__ctx_type_1 &_output_);

void Util_change_init(Util__ctx_type_1 &_output_);

uint8_t Util_change(Util__ctx_type_1 &_ctx, float x);

float Util_map(float x, float x0, float x1, float y0, float y1);

typedef struct Util__ctx_type_3 {
   float y1;
   float x1;
} Util__ctx_type_3;

typedef Util__ctx_type_3 Util_dcblock_type;

void Util__ctx_type_3_init(Util__ctx_type_3 &_output_);

void Util_dcblock_init(Util__ctx_type_3 &_output_);

float Util_dcblock(Util__ctx_type_3 &_ctx, float x0);

typedef struct Util__ctx_type_4 {
   float x;
} Util__ctx_type_4;

typedef Util__ctx_type_4 Util_smooth_type;

void Util__ctx_type_4_init(Util__ctx_type_4 &_output_);

void Util_smooth_init(Util__ctx_type_4 &_output_);

float Util_smooth(Util__ctx_type_4 &_ctx, float input);

typedef struct Util__ctx_type_5 {
   float x0;
} Util__ctx_type_5;

typedef Util__ctx_type_5 Util_average2_type;

void Util__ctx_type_5_init(Util__ctx_type_5 &_output_);

void Util_average2_init(Util__ctx_type_5 &_output_);

float Util_average2(Util__ctx_type_5 &_ctx, float x1);

float Util_cubic_clipper(float x);

static const float Util_pitchToRate_1024_c0[33] = {0.189841680037f,0.191325897588f,0.198688508155f,0.219424569866f,0.26567713111f,0.35643778531f,0.520650689743f,0.801559648679f,1.26275806017f,1.99656217812f,3.13554377292f,4.8683467577f,7.46128055978f,11.2877154635f,16.867996304f,24.9233048692f,36.4485211631f,52.8099028605f,75.8766156939f,108.197224933f,153.232414338f,215.672343711f,301.846625705f,420.29803823f,582.505177958f,803.812128967f,1104.88016479f,1513.1241264f,2065.37395202f,2810.23054964f,3812.90288799f,5159.52558025f,6963.76146927f};
static const float Util_pitchToRate_1024_c1[33] = {0.010913303747f,0.0101757584611f,0.00833370067546f,0.00486693804793f,(-0.000939454894394f),(-0.0100609504806f),(-0.0238203681558f),(-0.0440021062837f),(-0.0730021843736f),(-0.114024950054f),(-0.171340524952f),(-0.250621463768f),(-0.359381478667f),(-0.507547848549f),(-0.708208140825f),(-0.978574790425f),(-1.34124969555f),(-1.82584797191f),(-2.47112251767f),(-3.32772084379f),(-4.46165827276f),(-5.95900581344f),(-7.93162553989f),(-10.5253117054f),(-13.9292124557f),(-18.3875875205f),(-24.2197854202f),(-31.8351508101f),(-41.769556586f),(-54.7064548238f),(-71.5412264293f),(-93.4225916399f),(-121.823163138f)};
static const float Util_pitchToRate_1024_c2[33] = {0.000355553647318f,0.000447161637289f,0.000562372320943f,0.000707266905239f,0.000889493413582f,0.00111867037219f,0.0014068945122f,0.00176937926494f,0.00222525787535f,0.00279859310527f,0.00351964697344f,0.00442648109138f,0.00556695817836f,0.00700127157795f,0.00880514558145f,0.0110737757198f,0.013926935271f,0.01751519419f,0.0220279639143f,0.0277036097479f,0.034841413067f,0.0438182632294f,0.055107155696f,0.0693054512451f,0.0871633154559f,0.109617337367f,0.13786232365f,0.173376847616f,0.218054168649f,0.274226803392f,0.344892057084f,0.433780087926f,0.54554303051f};
float Util_pitchToRate_1024(float pitch);

static const float Util_pitchToRate_c0[33] = {0.000185392265661f,0.000186841696863f,0.000194031746245f,0.000214281806509f,0.000259450323349f,0.000348083774717f,0.000508447939203f,0.000782773094413f,0.00123316216813f,0.00194976775207f,0.00306205446575f,0.00475424488057f,0.00728640679666f,0.0110231596324f,0.0164726526406f,0.0243391649114f,0.0355942589483f,0.0515721707622f,0.0740982575135f,0.105661352474f,0.149641029627f,0.210617523155f,0.294772095415f,0.410447302959f,0.56885271285f,0.784972782194f,1.07898453592f,1.47766027968f,2.01696675002f,2.74436577113f,3.72353797656f,5.03859919947f,6.80054830983f};
static const float Util_pitchToRate_c1[33] = {1.06575231905e-05f,9.93726412215e-06f,8.13837956588e-06f,4.75286918743e-06f,(-9.17436420307e-07f),(-9.82514695372e-06f),(-2.32620782771e-05f),(-4.29708069177e-05f),(-7.12911956773e-05f),(-0.000111352490288f),(-0.000167324731399f),(-0.000244747523211f),(-0.00035095847526f),(-0.000495652195849f),(-0.000691609512524f),(-0.000955639443775f),(-0.00130981415581f),(-0.00178305466006f),(-0.00241320558366f),(-0.00324972738652f),(-0.00435708815699f),(-0.00581934161469f),(-0.0077457280663f),(-0.0102786247123f),(-0.0136027465387f),(-0.017956628438f),(-0.0236521341994f),(-0.031089014463f),(-0.0407905826035f),(-0.0534242722888f),(-0.0698644789349f),(-0.0912329996483f),(-0.118967932752f)};
static const float Util_pitchToRate_c2[33] = {3.47220358709e-07f,4.36681286415e-07f,5.49191719671e-07f,6.90690337148e-07f,8.68645911701e-07f,1.09245153534e-06f,1.37392042207e-06f,1.72790943841e-06f,2.1731033939e-06f,2.73300107936e-06f,3.4371552475e-06f,4.3227354408e-06f,5.43648259606e-06f,6.83717927534e-06f,8.59877498188e-06f,1.08142341013e-05f,1.36005227256e-05f,1.71046818262e-05f,2.15116835101e-05f,2.70543063944e-05f,3.40248174482e-05f,4.2791272685e-05f,5.38155817344e-05f,6.76811047315e-05f,8.51204252499e-05f,0.000107048181023f,0.000134631175439f,0.00016931332775f,0.000212943524071f,0.000267799612688f,0.000336808649496f,0.000423613367115f,0.000532756865732f};
float Util_pitchToRate(float pitch);

float Util_cvToPitch(float cv);

static const float Util_cvToRate_1024_c0[33] = {0.759366720147f,0.76287682088f,0.779736591571f,0.825651541171f,0.924648365923f,1.11239844184f,1.44068747342f,1.98339240754f,2.84443407951f,4.16831030008f,6.15399365185f,9.07319481283f,13.2943014604f,19.3136163473f,27.7961015161f,39.62829044f,55.9866571462f,78.4267499503f,108.998215386f,150.387463988f,206.118533087f,280.781675017f,380.357513386f,512.612775405f,687.616763647f,918.3490275f,1221.607949f,1619.05223539f,2138.6293218f,2815.43667105f,3696.1624076f,4838.69411678f,6318.21152f};
static const float Util_cvToRate_1024_c1[33] = {5.24558308188f,4.99894254853f,4.40308922371f,3.31911604895f,1.56449675194f,(-1.09925629984f),(-4.98222642392f),(-10.4858640391f),(-18.1279555878f),(-28.5740997639f),(-42.677360032f),(-61.5281235454f),(-86.516770266f),(-119.412133355f),(-162.460317551f),(-218.508269191f),(-291.15678595f),(-384.956977646f),(-505.652296862f),(-660.458538559f),(-858.49494987f),(-1111.17337632f),(-1432.85844521f),(-1841.54445918f),(-2359.81604563f),(-3015.79546669f),(-3844.83813828f),(-4891.10191925f),(-6210.19727359f),(-7868.99386779f),(-9955.77800805f),(-12575.7478745f),(-15862.2346213f)};
static const float Util_cvToRate_1024_c2[33] = {20.1255918184f,24.4575723246f,29.7220001999f,36.1195822692f,43.8942270126f,53.3423434917f,64.8241428839f,78.7773664092f,95.7339869863f,116.340471033f,141.382450964f,171.814646006f,208.797362823f,253.740413251f,308.357210756f,374.730622127f,455.389632248f,553.410815849f,672.536916058f,817.290610669f,993.216832855f,1207.00062225f,1466.80387492f,1782.52927112f,2166.24499736f,2632.4875896f,3199.07261962f,3887.67302403f,4724.8591793f,5741.24530174f,6977.44175505f,8479.29002777f,10304.4554863f};
float Util_cvToRate_1024(float cv);

static const float Util_cvToRate_c0[129] = {0.000741569062643f,0.000741614411242f,0.000741804288603f,0.000742252395803f,0.000743088394956f,0.000744459465973f,0.000746531994555f,0.000749493376759f,0.000753554075716f,0.000758949578451f,0.000765943041551f,0.000774827118637f,0.000785927670855f,0.000799605266108f,0.000816260506974f,0.000836333691745f,0.000860311194842f,0.00088872896745f,0.000922189292884f,0.0009613246255f,0.00100684713314f,0.00105956789213f,0.00112027587704f,0.00118999058362f,0.00126968375945f,0.00136042036651f,0.00146341605724f,0.0015802758572f,0.00171200068897f,0.00186017347323f,0.00202732748819f,0.00221387469471f,0.00242324163549f,0.00265613706453f,0.00291683889779f,0.00320704837861f,0.00352951656407f,0.00388492780502f,0.00427938700976f,0.00471688443112f,0.00519800950077f,0.00573047548368f,0.00631852127535f,0.00695966784397f,0.0076816476356f,0.00845635103957f,0.00930848563805f,0.0102575900236f,0.0112717725968f,0.0124037615467f,0.0136297909309f,0.0149481690268f,0.0163702610067f,0.0180283364133f,0.019750213838f,0.0216328135458f,0.0237925004771f,0.0258545448202f,0.028413603456f,0.0309513124977f,0.0338346288384f,0.0370438278413f,0.0404711540004f,0.0442617797954f,0.0479023445663f,0.0517929941703f,0.0566318569596f,0.0616369368589f,0.0679441687149f,0.0728861199979f,0.0794312603466f,0.0863661579071f,0.0931088254731f,0.103538643071f,0.110999516075f,0.12077442553f,0.132006921696f,0.14361952086f,0.152556099596f,0.165987675768f,0.176305713071f,0.191720858873f,0.209984838027f,0.226697757209f,0.251486748714f,0.271212022485f,0.275739365679f,0.29951049868f,0.342669114215f,0.360211555691f,0.375617535537f,0.415542785923f,0.477028848985f,0.480246251843f,0.518324887509f,0.524654771317f,0.636617964867f,0.608643817054f,0.698808713362f,0.905254906283f,0.753959541703f,0.968786334953f,0.93460949692f,0.942714402404f,0.900805444734f,1.0839642753f,1.51146188926f,1.37638374315f,1.35092276314f,1.45219475207f,1.39667077792f,2.12943149811f,2.01822114958f,2.1320711487f,2.64194234605f,2.16108872692f,2.09976398288f,2.27870401118f,3.05023461051f,3.26907619338f,3.39656237972f,2.97005654385f,3.89995571677f,3.49384079761f,4.4359293311f,4.96546776832f,6.75526326355f,7.32738947903f,3.89917391812f};
static const float Util_cvToRate_c1[129] = {0.00513912879403f,0.00512626868893f,0.00509930490895f,0.00505686073417f,0.00499745713935f,0.00491950588873f,0.00482130247354f,0.00470101855143f,0.00455669336578f,0.00438622578291f,0.00418736558485f,0.00395769841086f,0.00369464466104f,0.00339545190928f,0.00305714271489f,0.0026765705095f,0.00225035997924f,0.00177487687876f,0.001246345441f,0.000660558246906f,1.31075933396e-05f,(-0.000700558430086f),(-0.00148563983064f),(-0.00234732718301f),(-0.00329152632479f),(-0.00432393367047f),(-0.00545174257822f),(-0.00668042955662f),(-0.00802029170769f),(-0.00947432754938f),(-0.011054647423f),(-0.0127719043168f),(-0.0146297273048f),(-0.0166408852741f),(-0.018821816977f),(-0.0211674979865f),(-0.0237176776141f),(-0.0264617379495f),(-0.0294116929601f),(-0.0325962291901f),(-0.0360266356988f),(-0.0397066228021f),(-0.0437127432142f),(-0.0479579816919f),(-0.0525753360976f),(-0.0574648720916f),(-0.0627984060055f),(-0.0685448972251f),(-0.0745527528505f),(-0.0810901180697f),(-0.0880415714529f),(-0.0954497093324f),(-0.103169488725f),(-0.112078901198f),(-0.121354872554f),(-0.130772871758f),(-0.142182492243f),(-0.152165724188f),(-0.164777215576f),(-0.17689661749f),(-0.191333885881f),(-0.205553106055f),(-0.221280015042f),(-0.238829666269f),(-0.254758885232f),(-0.270439000783f),(-0.292231524466f),(-0.313960050568f),(-0.341895055523f),(-0.360715576548f),(-0.385922376159f),(-0.413282538938f),(-0.43934035008f),(-0.485224424381f),(-0.510420009663f),(-0.546029185741f),(-0.59336468076f),(-0.632486062631f),(-0.667213609495f),(-0.7127637426f),(-0.749138439478f),(-0.798818741195f),(-0.863736589849f),(-0.923015074505f),(-1.01677917846f),(-1.08188457982f),(-1.08862743987f),(-1.15711277682f),(-1.31072991491f),(-1.35597607556f),(-1.39850067183f),(-1.53500288984f),(-1.7426231996f),(-1.74441434686f),(-1.85673040319f),(-1.86335662855f),(-2.23740606494f),(-2.11120870709f),(-2.37491896732f),(-3.07803488977f),(-2.53501341753f),(-3.24651230846f),(-3.03060292674f),(-3.04549148361f),(-2.91948671735f),(-3.42608988484f),(-4.69606678427f),(-4.40456387752f),(-4.13014684174f),(-4.38263925111f),(-4.1800477419f),(-6.37128628061f),(-5.87432859131f),(-6.2576549978f),(-7.60800503674f),(-6.25242140205f),(-5.99534604169f),(-6.31906690143f),(-8.40797235072f),(-8.87096505492f),(-9.56451102074f),(-8.08733454442f),(-10.7473176082f),(-8.92996444244f),(-11.9205552706f),(-12.6731487667f),(-18.0985788685f),(-19.0957467048f),(-10.0276980998f)};
static const float Util_cvToRate_c2[129] = {0.0182548011488f,0.0191665204942f,0.0201237748553f,0.021128838317f,0.022184099004f,0.0232920630713f,0.024455365988f,0.0256767667605f,0.026959165693f,0.0283056250765f,0.0297193260899f,0.0312036180529f,0.0327620592944f,0.0343983795071f,0.0361163247224f,0.0379201548045f,0.0398140402491f,0.0418022367704f,0.0438902469547f,0.0460824389151f,0.0483839036816f,0.0508007579842f,0.0533376983183f,0.0560014706765f,0.0587992168668f,0.0617357059521f,0.0648164679712f,0.0680560343057f,0.0714534271734f,0.0750201702913f,0.0787729291932f,0.0827028622062f,0.0868361775664f,0.0911652197147f,0.0957232686162f,0.100507085311f,0.105540711407f,0.110800050992f,0.116325261617f,0.122126055794f,0.128195657116f,0.134568214299f,0.141399728151f,0.148411390903f,0.155909754848f,0.163637717471f,0.171857430749f,0.180599528232f,0.189439624235f,0.198925586971f,0.208870214381f,0.219116718382f,0.229507005367f,0.241660033535f,0.253651122828f,0.266141339677f,0.280625820927f,0.293001798121f,0.308347910773f,0.32265455507f,0.339777373778f,0.357068726351f,0.374907420566f,0.394593407824f,0.411669961097f,0.427938403014f,0.452631959007f,0.475006349312f,0.504551118404f,0.523231560664f,0.550196849878f,0.57689535165f,0.602279186745f,0.648929741879f,0.673693662157f,0.707793997271f,0.752358931538f,0.789921751441f,0.816901835344f,0.856121380993f,0.88813548803f,0.934686180435f,0.994476093082f,1.04419934514f,1.12744572441f,1.18665154172f,1.17216442899f,1.2347382924f,1.37149372463f,1.39711367347f,1.42577899321f,1.53760691842f,1.71357866805f,1.69639823421f,1.77961242369f,1.774088233f,2.08137270987f,1.94673230573f,2.17791493218f,2.73877837267f,2.26714427219f,2.83332928026f,2.63302125542f,2.62432486851f,2.4689071097f,2.90022674255f,3.8673706272f,3.54060178376f,3.34757757167f,3.52217170052f,3.31252088226f,4.91238070538f,4.56967048893f,4.76229623232f,5.72050436572f,4.69421189282f,4.42267646505f,4.69332933902f,6.03451219251f,6.34953066048f,6.65352247026f,5.6266063064f,7.35717991764f,6.2544174182f,8.21209396414f,8.68817145202f,11.9813756716f,12.4840062974f,6.60838756876f};
float Util_cvToRate(float cv);

float Util_pitchToCv(float pitch);

static const float Util_cvToperiod_c0[33] = {674.246034776f,671.553837727f,662.76178188f,646.759521901f,623.799427712f,594.871801992f,561.298276875f,524.476942143f,485.731369226f,446.229382316f,406.94744034f,368.66377436f,331.968683025f,297.284155733f,264.887666444f,234.936856737f,207.493124397f,182.543015866f,160.016906779f,139.804831794f,121.769556579f,105.757116937f,91.6051155071f,79.149088394f,68.2272489259f,58.6838945702f,50.371733558f,43.1533549488f,36.902032908f,31.5020247862f,26.8484942477f,22.8471656705f,19.4137944411f};
static const float Util_cvToperiod_c1[33] = {(-4656.65631086f),(-4481.96057904f),(-4198.68613255f),(-3855.75154272f),(-3487.13945482f),(-3115.8588214f),(-2756.93031878f),(-2419.62514111f),(-2109.13475329f),(-1827.80833374f),(-1576.06296307f),(-1353.04709181f),(-1157.11886446f),(-986.186250154f),(-837.94466494f),(-710.039112868f),(-600.171233528f),(-506.166565653f),(-426.013462738f),(-357.88215123f),(-300.130189887f),(-251.29890433f),(-210.104104957f),(-175.423450149f),(-146.28211351f),(-121.837895062f),(-101.366536594f),(-84.2477263813f),(-69.9520817395f),(-58.0292593608f),(-48.0972479058f),(-39.8328333125f),(-32.9631861669f)};
static const float Util_cvToperiod_c2[33] = {14548.823162f,11715.3695219f,9433.74467508f,7596.47729664f,6117.02662156f,4925.70611715f,3966.40103985f,3193.92526365f,2571.89287904f,2071.00430825f,1667.66620793f,1342.8801524f,1081.3477512f,870.750049392f,701.167268045f,564.611553133f,454.650723814f,366.105297558f,294.804521096f,237.38991552f,191.157081924f,153.928316161f,123.950032495f,99.8101644891f,80.37165247f,64.7188846329f,52.1145689979f,41.9650047624f,33.792117225f,27.2109390435f,21.9114771264f,17.6441110354f,14.2078351192f};
float Util_cvToperiod(float cv);

static const float Util_cvTokHz_c0[33] = {0.0327031956626f,0.0329157760149f,0.0339578485366f,0.0368566350801f,0.0432421259378f,0.0556159052222f,0.0777237842587f,0.115068916026f,0.175614259054f,0.270739336253f,0.416537388042f,0.635566803598f,0.959207146572f,1.43081778941f,2.109959525f,3.07802092665f,4.44569735701f,6.36290872359f,9.03192182114f,12.7246766192f,17.8056189134f,24.7617346776f,34.2419903781f,47.1090421017f,64.5069278521f,87.9495573939f,119.436233946f,161.602273483f,217.915147899f,292.929618558f,392.619239761f,524.806644821f,699.721497115f};
static const float Util_cvTokHz_c1[33] = {0.225719191888f,0.212293210117f,0.179169381636f,0.117604905736f,0.0157801819103f,(-0.142178074384f),(-0.377466272128f),(-0.718250312221f),(-1.20179695141f),(-1.87722845841f),(-2.80907738384f),(-4.08186733736f),(-5.80600813072f),(-8.12537311265f),(-11.2270275603f),(-15.3537053894f),(-20.8197945237f),(-28.0317982882f),(-37.5145028842f),(-49.9444141699f),(-66.1924493548f),(-87.3784044617f),(-114.940396419f),(-150.723337164f),(-197.091583804f),(-257.072283866f),(-334.537673834f),(-434.436788276f),(-563.089816651f),(-728.561857581f),(-941.137257915f),(-1213.92132821f),(-1563.60330201f)};
static const float Util_cvTokHz_c2[33] = {0.876337770753f,1.08828690662f,1.35149759677f,1.67836784855f,2.08429422425f,2.58839706504f,3.21442111597f,3.99185397416f,4.95731504247f,6.1562804124f,7.64522492346f,9.49428229626f,11.7905486396f,14.6421849368f,18.1835117495f,22.5813361171f,28.0428086641f,34.825181012f,43.2479230966f,53.7077711535f,66.697415176f,82.8287060814f,102.861475711f,127.739327173f,158.634081359f,197.000973197f,244.647197551f,303.81703348f,377.297556468f,468.549917976f,581.872375985f,722.602755747f,897.369877251f};
float Util_cvTokHz(float cv);

typedef struct Tricore__ctx_type_0 {
   uint8_t reset_state;
   float reset_phase;
   float rate;
   float phase;
   uint8_t direction;
   Util__ctx_type_0 _inst34;
   Util__ctx_type_0 _inst33;
   Util__ctx_type_1 _inst31;
} Tricore__ctx_type_0;

typedef Tricore__ctx_type_0 Tricore_process_type;

void Tricore__ctx_type_0_init(Tricore__ctx_type_0 &_output_);

void Tricore_process_init(Tricore__ctx_type_0 &_output_);

float Tricore_process(Tricore__ctx_type_0 &_ctx, float cv, float reset, float disable);

typedef Tricore__ctx_type_0 Tricore_noteOn_type;

void Tricore_noteOn_init(Tricore__ctx_type_0 &_output_);

void Tricore_noteOn(Tricore__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Tricore__ctx_type_0 Tricore_noteOff_type;

void Tricore_noteOff_init(Tricore__ctx_type_0 &_output_);

void Tricore_noteOff(Tricore__ctx_type_0 &_ctx, int note, int channel);

typedef Tricore__ctx_type_0 Tricore_controlChange_type;

void Tricore_controlChange_init(Tricore__ctx_type_0 &_output_);

void Tricore_controlChange(Tricore__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Tricore__ctx_type_0 Tricore_default_type;

void Tricore_default_init(Tricore__ctx_type_0 &_output_);

void Tricore_default(Tricore__ctx_type_0 &_ctx);

typedef struct Swept__ctx_type_0 {
   float out;
   Util__ctx_type_0 _inst54;
} Swept__ctx_type_0;

typedef Swept__ctx_type_0 Swept_process_type;

void Swept__ctx_type_0_init(Swept__ctx_type_0 &_output_);

void Swept_process_init(Swept__ctx_type_0 &_output_);

float Swept_process(Swept__ctx_type_0 &_ctx, float gate, float start, float end, float rate);

typedef Swept__ctx_type_0 Swept_noteOn_type;

void Swept_noteOn_init(Swept__ctx_type_0 &_output_);

void Swept_noteOn(Swept__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Swept__ctx_type_0 Swept_noteOff_type;

void Swept_noteOff_init(Swept__ctx_type_0 &_output_);

void Swept_noteOff(Swept__ctx_type_0 &_ctx, int note, int channel);

typedef Swept__ctx_type_0 Swept_controlChange_type;

void Swept_controlChange_init(Swept__ctx_type_0 &_output_);

void Swept_controlChange(Swept__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Swept__ctx_type_0 Swept_default_type;

void Swept_default_init(Swept__ctx_type_0 &_output_);

void Swept_default(Swept__ctx_type_0 &_ctx);

static const float Saturate_table_c0[242] = {(-1.10577106476f),(-0.815258026123f),(-0.630082130432f),(-1.48389148712f),(-1.07077503204f),(-1.0193772316f),(-0.936174869537f),(-0.810448169708f),(-0.959206581116f),(-0.910904884338f),(-1.0822520256f),(-0.898240566254f),(-1.07395029068f),(-0.780700683594f),(-1.19838666916f),(-1.03335189819f),(-1.03420305252f),(-0.933932781219f),(-1.06662511826f),(-0.975377559662f),(-1.07643890381f),(-0.929947853088f),(-1.15321016312f),(-0.897446632385f),(-1.04687905311f),(-1.06961798668f),(-1.02244091034f),(-1.03174114227f),(-1.00522279739f),(-0.990733623505f),(-0.970107555389f),(-0.946643590927f),(-0.978151798248f),(-0.98970079422f),(-0.970354080197f),(-1.03865623474f),(-1.01384615898f),(-1.00151729583f),(-1.00034689902f),(-0.975999355307f),(-0.983445763573f),(-0.996186256383f),(-1.03371119496f),(-0.997049212408f),(-1.00128126137f),(-0.999516606229f),(-0.986681699607f),(-0.983708977488f),(-0.997409939457f),(-0.998217224625f),(-1.00187146598f),(-0.99975728895f),(-0.998635767526f),(-0.998777089528f),(-0.990494546417f),(-1.0048036534f),(-1.00023203488f),(-0.998589209031f),(-1.00924460823f),(-1.0014419971f),(-1.0081945396f),(-1.00002529452f),(-0.999881243357f),(-0.995475303978f),(-1.00063688284f),(-1.00368659412f),(-1.00071538116f),(-0.999318922262f),(-1.00075405587f),(-1.0003815877f),(-0.999212770203f),(-1.00138168023f),(-0.999309021016f),(-0.998013377246f),(-1.00002318913f),(-1.00173600789f),(-0.999777263545f),(-0.999124829797f),(-1.00060558465f),(-1.0000707209f),(-0.999909887782f),(-0.999794734981f),(-0.999824757321f),(-0.999952100131f),(-0.999874569046f),(-0.999763752722f),(-0.999711224224f),(-0.999651363321f),(-0.999309947706f),(-0.999147833714f),(-0.99891237009f),(-0.998481489395f),(-0.997853821865f),(-0.997005867309f),(-0.995880387388f),(-0.994259103758f),(-0.992035708149f),(-0.989011006445f),(-0.984877264018f),(-0.979276339037f),(-0.971697674018f),(-0.961487378928f),(-0.947820996866f),(-0.929662084207f),(-0.905713478612f),(-0.87442195626f),(-0.833985148345f),(-0.782442396873f),(-0.717865969441f),(-0.638728127539f),(-0.544526846462f),(-0.436707854302f),(-0.319822441986f),(-0.20255157126f),(-0.0977039494215f),(-0.0197582298823f),0.0211020338112f,0.026670634145f,0.0132847925237f,0.00178842066127f,0.f,(-0.00178842066127f),(-0.0132847925225f),(-0.026670634145f),(-0.0211020336482f),0.0197582298823f,0.0977039489688f,0.202551577999f,0.319822455677f,0.436707854302f,0.54452694214f,0.638728129487f,0.717865776057f,0.782442396873f,0.833985148345f,0.874421411595f,0.905713680387f,0.929660741169f,0.947823093156f,0.961487378928f,0.971692107678f,0.979276339037f,0.98488173573f,0.989020249466f,0.992033530092f,0.994251999765f,0.995880387388f,0.997005867309f,0.997853821865f,0.99850554459f,0.9988527562f,0.999219323817f,0.999543472121f,0.999756241006f,0.999726758645f,0.999876725676f,0.999874569046f,0.999952100131f,0.999824757321f,0.999735112242f,0.999911377897f,1.00019769946f,1.00022949428f,0.999506016373f,1.00010111046f,1.00041584518f,0.998845507646f,1.00075801659f,0.999309006115f,0.997563322682f,0.999212770203f,1.0021056514f,0.998844055744f,1.00113096243f,0.998686052506f,1.00284336752f,0.999355621613f,0.998352300971f,0.996552920197f,0.998541973468f,1.00357774273f,1.0014419971f,1.00187765305f,1.00087522597f,0.99757879375f,1.00370728556f,0.998593685154f,0.997192202023f,0.998635767526f,1.00662565136f,1.00144493515f,0.985527634179f,1.0004185435f,0.993092655925f,1.02830982193f,1.02044820775f,0.986689805915f,1.01565921302f,1.00289988514f,0.988349199271f,0.98372662066f,1.0234696865f,0.999861001959f,0.996964216227f,0.982973098753f,0.954218864443f,0.997253417967f,0.951947927475f,0.985074520111f,0.946643590927f,0.93413734436f,0.990733623506f,1.00522279739f,0.983894586563f,0.995139122009f,0.989118814468f,1.00418543815f,1.0662279129f,1.15321016312f,0.955039024353f,0.978420734406f,1.00814437866f,0.951477527618f,1.04804372787f,1.14867544174f,0.794210910797f,0.858288764954f,1.24589538574f,0.784815311432f,0.898240566254f,1.05349111557f,1.0278801918f,0.959206581116f,0.929448604584f,1.07051181793f,0.966084957123f,0.702958106995f,0.925413131714f,0.523180484772f,0.815258026123f,1.10577106476f,1.28795719147f};
static const float Saturate_table_c1[242] = {(-0.0100769996643f),(-0.00159281492233f),0.00243684649467f,(-0.00595062971115f),0.00546038150787f,0.00528347492218f,0.00303047895432f,(-0.000875234603882f),0.00317186117172f,0.00100368261337f,(-0.000502467155457f),0.00128662586212f,(-0.00791084766388f),(-0.0029608309269f),(-9.88841056824e-05f),0.00322100520134f,0.000847488641739f,0.00371709465981f,(-0.00555008649826f),0.00296711921692f,0.000331342220306f,(-0.00118160247803f),5.90085983276e-06f,(-0.00173324346542f),0.000412106514204f,0.00123479962349f,(-0.00305420160294f),(-0.00215065479256f),0.00163555145286f,(-0.000953108072054f),0.000614762306213f,0.000908225774992f,0.00048494339012f,(-0.000483691692352f),(-0.000554740428697f),7.38501548767e-05f,0.00081250071571f,(-0.000901550054095f),0.000310897828285f,(-0.000621259211584f),(-0.000185772775012f),(-0.00190280377547f),(-0.00136347114608f),(-0.00011076032547f),(-0.000981390467359f),(-0.000211283551607f),(-0.000209435801253f),(-0.000192612381625f),0.000688269776219f,0.000475272597441f,7.86782218256e-05f,0.000946849715547f,0.000260502293941f,(-0.000146910263084f),(-0.000299393712567f),(-0.000187910479326f),(-7.60844247907e-05f),0.00028759373231f,(-3.86591100323e-05f),3.68534238078e-05f,0.000336129690368f,(-3.89902345432e-05f),(-1.43036213558e-05f),(-5.97480318447e-05f),5.88862203585e-05f,1.93624466647e-05f,(-0.000176798354687f),6.76964953072e-05f,(-8.52955515711e-05f),0.000163251573667f,9.59315818818e-05f,(-4.75127202435e-05f),(-8.68375510663e-05f),(-9.07495416413e-06f),3.13012907327e-05f,(-6.84370795625e-05f),1.07318968503e-05f,1.32530183237e-05f,3.6496821167e-05f,(-2.51783774274e-05f),(-9.4404582569e-06f),8.39972949507e-06f,5.65299922073e-06f,8.16137651327e-06f,3.55001900516e-05f,3.61079578397e-05f,6.93046778224e-05f,0.00010193158289f,0.000174094746967f,0.000226781082461f,0.000340301193205f,0.000481000262539f,0.00069745455005f,0.00101223143974f,0.00144869245139f,0.00208313152592f,0.00298576586056f,0.00428098178458f,0.00612486085572f,0.00874775683934f,0.0124680287038f,0.0177336640594f,0.0251594860152f,0.035593666077f,0.0501903718677f,0.0704954991007f,0.0985454087603f,0.136951956587f,0.188925753488f,0.258164958415f,0.348441158295f,0.462649957986f,0.601023396794f,0.758326593995f,0.920489408539f,1.06269069038f,1.15321373684f,1.16781524603f,1.11212351167f,1.03336916564f,0.996707332772f,1.03336916564f,1.11212351166f,1.16781524603f,1.15321373688f,1.06269069038f,0.920489408974f,0.758326598813f,0.601023387906f,0.462649957986f,0.348441219058f,0.258164975096f,0.188925673051f,0.136951956587f,0.0985454087603f,0.0704954748462f,0.0501901165008f,0.0355934482345f,0.0251589612519f,0.0177336640594f,0.0124680231231f,0.00874775683934f,0.00612653857053f,0.00428118876874f,0.0029863115389f,0.00208094018933f,0.00144869245139f,0.00101223143974f,0.00069745455005f,0.000488195080834f,0.000331923578869f,0.000215606136976f,0.000144180734651f,9.8005142263e-05f,6.87738254328e-05f,4.14984431245e-05f,3.55001900516e-05f,8.16137651327e-06f,5.65299922073e-06f,7.13774466021e-06f,(-9.62672277183e-06f),(-2.42465345082e-05f),3.03649940179e-05f,5.16756597335e-05f,6.40109958567e-05f,7.73621352437e-05f,(-4.52054021025e-05f),9.830020349e-05f,(-8.68487269372e-05f),(-4.73312308031e-05f),9.59315818818e-05f,9.80144126288e-05f,(-8.51504332786e-05f),1.54009851485e-05f,0.00016378987857f,(-2.59743903825e-05f),(-4.43490609996e-05f),0.000120071730862f,0.000191540984815f,0.000208912910466f,0.000311758824864f,3.68534238078e-05f,4.33270638496e-05f,0.000205257366133f,(-0.000148526423345f),0.000195943433027f,(-0.000506743370579f),(-0.000166639400504f),(-0.000252321168546f),(-0.000190079079175f),0.000250339598097f,0.000709608257694f,(-0.000248387413649f),(-0.000779107185053f),0.000463217516653f,0.000991627586927f,0.000379383572636f,0.000522702938042f,1.7285351305e-05f,(-0.000424727794552f),(-0.000185728071529f),(-0.000663563607759f),(-0.00115394592171f),0.000593274832227f,0.000725835562207f,0.00169306993484f,(-0.000572204589844f),(-0.000974833965302f),0.000472038984526f,0.000908225774992f,0.000966548919678f,(-0.000953108072054f),0.00163555145286f,(-0.00304415822006f),0.00320902466774f,0.00175756216049f,0.000387668609847f,0.00378301739693f,5.90085983276e-06f,(-0.00343054533005f),0.00288432836533f,0.000209718942642f,(-0.00385281443596f),(-0.00203746557236f),(-0.00458288192749f),(-0.000941962003708f),0.000919014215469f,(-0.00495398044586f),(-0.000849992036819f),0.00128662586212f,(-0.000868737697601f),0.000655770301819f,0.00317186117172f,0.00731235742569f,(-0.000495076179504f),0.00275492668152f,(-0.00704824924469f),0.00796586275101f,(-0.00413551926613f),(-0.00159281492233f),(-0.0100769996643f),0.00925195217133f};
static const float Saturate_table_c2[242] = {0.000801004469395f,0.000108684413135f,(-0.000353774055839f),0.00024532340467f,(-5.9531070292e-05f),1.59563496709e-05f,(-5.52888959646e-05f),2.53049656749e-05f,2.42041423917e-05f,1.90082937479e-05f,3.79756093025e-05f,(-0.000341020524502f),(-4.42750751972e-06f),(-8.63075256348e-05f),0.000247326679528f,(-2.68677249551e-05f),(-8.05463641882e-05f),(-4.12920489907e-05f),0.000247649848461f,(-0.000148752704263f),0.000148244202137f,6.32274895906e-05f,6.35264441371e-05f,(-8.18455591798e-05f),9.82740894031e-05f,1.5308149159e-05f,0.000124632380903f,5.94947487187e-05f,(-5.56241720915e-05f),(-6.70598819781e-05f),(-0.000110040418804f),(-5.14592975236e-05f),(-7.18263909292e-05f),(-1.11004337668e-05f),2.35745683383e-05f,0.000124004669487f,(-4.60352748419e-05f),(-2.37859784846e-06f),9.89004038559e-05f,2.73324549482e-05f,(-6.29341225533e-06f),7.91805797178e-05f,0.000101404264704f,(-2.69226728093e-05f),5.86826357107e-05f,1.01234768195e-05f,1.55679887897e-05f,8.06060619141e-07f,(-1.41342156539e-05f),(-8.36001500204e-06f),3.12365906296e-06f,(-1.12578226776e-05f),(-1.49584306115e-05f),1.8947302415e-05f,7.92603609057e-06f,(-5.52784231189e-06f),8.10905977744e-06f,(-4.98019684159e-06f),5.2960418131e-06f,1.37771675668e-05f,3.39519986596e-05f,(-1.86017551584e-05f),4.45442121588e-06f,(-1.42728982837e-05f),(-2.12957745305e-06f),6.48928907054e-06f,3.03111761468e-07f,(-6.16845751011e-06f),6.86138493222e-06f,(-5.2401095374e-06f),(-6.26650277979e-06f),2.12212597432e-05f,(-3.26180634858e-06f),(-1.62243054547e-08f),(-3.33253021267e-06f),6.13793256576e-06f,(-5.37321630389e-06f),(-1.83463313874e-07f),5.08240391639e-06f,5.03752745828e-06f,2.76811333322e-06f,2.49300127564e-06f,(-1.38122860704e-06f),1.75968104088e-06f,2.45123445097e-06f,3.95883575521e-06f,6.76664856769e-06f,1.02331492045e-05f,1.10807810358e-05f,1.64651018508e-05f,2.69199497396e-05f,3.80055661466e-05f,5.71398160432e-05f,8.43089872475e-05f,0.00012733353509f,0.000189932799636f,0.000283092479229f,0.000421081060672f,0.000626659350395f,0.000933251555708f,0.00138988817124f,0.00206834846855f,0.00307739414243f,0.00457655049695f,0.0068005879114f,0.0100945268542f,0.0149591212842f,0.0221136334332f,0.0325713074114f,0.0477159733735f,0.0693445009869f,0.099588708723f,0.140541484206f,0.19329160765f,0.255993897768f,0.320850540636f,0.370984774052f,0.3804715946f,0.322614518938f,0.187810383488f,0.f,(-0.187810383488f),(-0.322614518929f),(-0.3804715946f),(-0.370984773761f),(-0.320850540636f),(-0.255993897768f),(-0.19329160765f),(-0.14054148855f),(-0.099588708723f),(-0.0693445339939f),(-0.0477159402051f),(-0.0325712749887f),(-0.0221136334332f),(-0.0149591212842f),(-0.0100944745281f),(-0.00680077478849f),(-0.00457651513373f),(-0.00307763253646f),(-0.00206834846855f),(-0.00138988817124f),(-0.000933251555708f),(-0.000626626240368f),(-0.000421244065187f),(-0.000283092479229f),(-0.000190107037952f),(-0.00012733353509f),(-8.43089872475e-05f),(-5.71398160432e-05f),(-3.81631768249e-05f),(-2.69185195094e-05f),(-1.78645088909e-05f),(-1.50874199605e-05f),(-9.73407871641e-06f),(-7.54895750532e-06f),(-3.59911306447e-06f),(-2.45123445097e-06f),(-1.75968104088e-06f),1.38122860704e-06f,2.93899082493e-06f,(-2.76811333322e-06f),(-5.27132839778e-06f),2.08342403596e-06f,7.40819766065e-06f,5.37368196518e-06f,1.56766031978e-06f,7.17937911077e-06f,5.44996915153e-06f,(-1.27227156668e-05f),(-4.51537719215e-06f),6.26650277979e-06f,7.41707029306e-06f,2.52239622256e-06f,(-1.43131937165e-05f),5.69088729918e-06f,1.9897068384e-06f,1.01405829724e-05f,7.47890010189e-06f,3.4876031016e-05f,2.44481335798e-05f,(-5.69101448633e-06f),(-1.37771675668e-05f),8.54946582507e-06f,1.97756529232e-05f,(-8.07739468911e-06f),1.0827999084e-05f,(-1.47861581752e-05f),(-1.15246614953e-05f),(-2.29021603531e-05f),(-5.84777912138e-06f),2.65240356612e-06f,1.34534181768e-05f,(-2.56681829001e-05f),3.24891787074e-06f,(-1.27321115642e-05f),7.2303223746e-06f,1.92755830568e-05f,5.94737937689e-05f,(-5.58318571464e-05f),(-7.67819584269e-05f),5.19165764956e-06f,(-0.000126290135121f),(-9.89004038559e-05f),(-9.6787698709e-06f),0.00014694454147f,0.000167402904474f,(-1.0938383646e-05f),1.17151066661e-05f,4.559382797e-05f,5.14592975236e-05f,0.000142393633723f,6.70598819781e-05f,5.56241720915e-05f,(-0.000168143771596f),8.74008983374e-05f,1.70571729541e-05f,(-4.32124361467e-05f),4.46755439043e-06f,(-6.35264441371e-05f),(-6.32274895906e-05f),3.81488353014e-05f,0.000148752704263f,(-0.000167308375239f),(-0.000148515217006f),(-0.000173106789589f),2.93776392937e-05f,0.000109757296741f,(-3.92682850361e-05f),0.000121377408504f,0.000341020524502f,2.964399755e-05f,0.000207996927202f,(-2.42041423917e-05f),0.000107062980533f,1.0714866221e-05f,(-1.59563496709e-05f),(-0.0001285020262f),(-3.90335917473e-05f),0.000264163129032f,(-0.000108684413135f),(-0.000801004469395f),3.44216823578e-05f};
float Saturate_table(float x);

float Saturate_process(float x);

void Saturate_noteOn(int note, int velocity, int channel);

void Saturate_noteOff(int note, int channel);

void Saturate_controlChange(int control, int value, int channel);

void Saturate_default();

typedef struct Ahr__ctx_type_0 {
   float target;
   int state;
   float rate;
   float out;
   float hold_phase;
   Util__ctx_type_0 _inst70;
   Util__ctx_type_0 _inst68;
} Ahr__ctx_type_0;

typedef Ahr__ctx_type_0 Ahr_do_type;

void Ahr__ctx_type_0_init(Ahr__ctx_type_0 &_output_);

void Ahr_do_init(Ahr__ctx_type_0 &_output_);

void Ahr_do(Ahr__ctx_type_0 &_ctx, float gate, float a, float h, float r, _tuple___real_real__ &_output_);

typedef struct Ahr__ctx_type_1 {
   float knob3;
   float knob2;
   float knob1;
   Ahr__ctx_type_0 _inst79;
} Ahr__ctx_type_1;

typedef Ahr__ctx_type_1 Ahr_process_type;

void Ahr__ctx_type_1_init(Ahr__ctx_type_1 &_output_);

void Ahr_process_init(Ahr__ctx_type_1 &_output_);

void Ahr_process(Ahr__ctx_type_1 &_ctx, float gate, _tuple___real_real__ &_output_);

typedef Ahr__ctx_type_1 Ahr_noteOn_type;

void Ahr_noteOn_init(Ahr__ctx_type_1 &_output_);

void Ahr_noteOn(Ahr__ctx_type_1 &_ctx, int note, int velocity, int channel);

typedef Ahr__ctx_type_1 Ahr_noteOff_type;

void Ahr_noteOff_init(Ahr__ctx_type_1 &_output_);

void Ahr_noteOff(Ahr__ctx_type_1 &_ctx, int note, int channel);

typedef Ahr__ctx_type_1 Ahr_controlChange_type;

void Ahr_controlChange_init(Ahr__ctx_type_1 &_output_);

void Ahr_controlChange(Ahr__ctx_type_1 &_ctx, int control, int value, int channel);

typedef Ahr__ctx_type_1 Ahr_default_type;

void Ahr_default_init(Ahr__ctx_type_1 &_output_);

void Ahr_default(Ahr__ctx_type_1 &_ctx);

typedef struct Kick__ctx_type_0 {
   Noise__ctx_type_1 _inst116;
   Ahr__ctx_type_0 _inst115;
   Tricore__ctx_type_0 _inst114;
   Swept__ctx_type_0 _inst113;
   Ahr__ctx_type_0 _inst112;
} Kick__ctx_type_0;

typedef Kick__ctx_type_0 Kick_do_type;

void Kick__ctx_type_0_init(Kick__ctx_type_0 &_output_);

void Kick_do_init(Kick__ctx_type_0 &_output_);

float Kick_do(Kick__ctx_type_0 &_ctx, float gate, float odecay, float pitch, float swept, float noise);

typedef struct Kick__ctx_type_1 {
   float swept;
   float pitch;
   float odecay;
   float noise;
   Kick__ctx_type_0 _inst118;
} Kick__ctx_type_1;

typedef Kick__ctx_type_1 Kick_process_type;

void Kick__ctx_type_1_init(Kick__ctx_type_1 &_output_);

void Kick_process_init(Kick__ctx_type_1 &_output_);

float Kick_process(Kick__ctx_type_1 &_ctx, float gate);

typedef Kick__ctx_type_1 Kick_noteOn_type;

void Kick_noteOn_init(Kick__ctx_type_1 &_output_);

void Kick_noteOn(Kick__ctx_type_1 &_ctx, int note, int velocity, int channel);

typedef Kick__ctx_type_1 Kick_noteOff_type;

void Kick_noteOff_init(Kick__ctx_type_1 &_output_);

void Kick_noteOff(Kick__ctx_type_1 &_ctx, int note, int channel);

typedef Kick__ctx_type_1 Kick_controlChange_type;

void Kick_controlChange_init(Kick__ctx_type_1 &_output_);

void Kick_controlChange(Kick__ctx_type_1 &_ctx, int control, int value, int channel);

typedef Kick__ctx_type_1 Kick_default_type;

void Kick_default_init(Kick__ctx_type_1 &_output_);

void Kick_default(Kick__ctx_type_1 &_ctx);



#endif // KICK_H

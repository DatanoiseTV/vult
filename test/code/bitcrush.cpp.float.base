
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "bitcrush.h"

float Bitcrush_process(float i, float cv){
   float out;
   out = i;
   uint8_t _cond_7;
   _cond_7 = (cv == 0.000000f);
   if(_cond_7){
      out = i;
   }
   else
   {
      float crush;
      crush = (cv * 10.000000f);
      float factor;
      factor = (100.000000f / crush);
      int x;
      x = float_to_int((i * factor));
      out = (int_to_float(x) / factor);
   }
   return out;
}

void Bitcrush_noteOn(int note, int velocity, int channel){
}

void Bitcrush_noteOff(int note, int channel){
}

void Bitcrush_controlChange(int control, int value, int channel){
}

void Bitcrush_default(){
}




/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "bitcrush.h"

float Bitcrush_factor(float cv){
   int index;
   index = int_clip(float_to_int((127.00000f * cv)),0,127);
   return (float_wrap_array(Bitcrush_factor_c0)[index] + (cv * (float_wrap_array(Bitcrush_factor_c1)[index] + (float_wrap_array(Bitcrush_factor_c2)[index] * cv))));
}

float Bitcrush_process(float i, float cv){
   float out;
   out = i;
   uint8_t _cond_8;
   _cond_8 = (cv == 0.00000f);
   if(_cond_8){
      out = i;
   }
   else
   {
      float b;
      b = Bitcrush_factor(cv);
      int x;
      x = float_to_int((i * b));
      out = (int_to_float(x) / b);
   }
   return out;
}

void Bitcrush_noteOn(int note, int velocity, int channel){
}

void Bitcrush_noteOff(int note, int channel){
}

void Bitcrush_controlChange(int control, int value, int channel){
}

void Bitcrush_default(){
}



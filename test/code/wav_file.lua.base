
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.pi()              return 3.1415926535897932384; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Wav_file_ext_wave_chan_0 = {0.00760,0.05120,0.09640,0.14410,0.19430,0.24680,0.30070,0.35510,0.40850,0.45900,0.50390,0.53650,0.56290,0.63180,0.68670,0.73490,0.78080,0.82470,0.86540,0.90160,0.93240,0.95720,0.97620,0.98940,0.99720,0.99990,0.99800,0.99160,0.98130,0.96740,0.95040,0.93080,0.90880,0.88470,0.85830,0.83020,0.80130,0.77090,0.73880,0.70480,0.66860,0.62980,0.58830,0.54370,0.49610,0.44550,0.39200,0.33590,0.27720,0.21670,0.15460,0.09160,0.02870,(-0.03350),(-0.09420),(-0.15260),(-0.20800),(-0.25910),(-0.30510),(-0.34390),(-0.36760),(-0.40590),(-0.45440),(-0.49250),(-0.52590),(-0.55710),(-0.58620),(-0.61270),(-0.63590),(-0.65570),(-0.67190),(-0.68460),(-0.69410),(-0.70050),(-0.70400),(-0.70450),(-0.70220),(-0.69710),(-0.68930),(-0.67910),(-0.66660),(-0.65200),(-0.63540),(-0.61710),(-0.59710),(-0.57570),(-0.55290),(-0.52890),(-0.50370),(-0.47750),(-0.45040),(-0.42250),(-0.39400),(-0.36480),(-0.33530),(-0.30550),(-0.27540),(-0.24520),(-0.21510),(-0.18500),(-0.15530),(-0.12570),(-0.09670),(-0.06810),(-0.04010),(-0.01290),0.01360,0.03930,0.06410,0.08810,0.11090,0.13270,0.15350,0.17300,0.19130,0.20840,0.22420,0.23870,0.25170,0.26320,0.27310,0.28070,0.28570,0.29650,0.30490,0.31190,0.31820,0.32400,0.32950,0.33430,0.33840,0.34190,0.34480,0.34710,0.34880,0.35000,0.35070,0.35080,0.35050,0.34970,0.34850,0.34680,0.34480,0.34240,0.33970,0.33670,0.33340,0.32990,0.32610,0.32200,0.31780,0.31330,0.30860,0.30370,0.29850,0.29310,0.28750,0.28170,0.27560,0.26930,0.26270,0.25590,0.24880,0.24140,0.23370,0.22580,0.21750,0.20890,0.20000,0.19070,0.18110,0.17120,0.16090,0.15030,0.13940,0.12810,0.11650,0.10460,0.09240,0.07990,0.06710,0.05420,0.04100,0.02760,0.01400,0.00030,(-0.01340),(-0.02740),(-0.04130),(-0.05530),(-0.06940),(-0.08340),(-0.09740),(-0.11140),(-0.12520),(-0.13890),(-0.15240),(-0.16590),(-0.17910),(-0.19210),(-0.20500),(-0.21760),(-0.22990),(-0.24200),(-0.25390),(-0.26540),(-0.27670),(-0.28760),(-0.29830),(-0.30860),(-0.31860),(-0.32830),(-0.33760),(-0.34650),(-0.35510),(-0.36320),(-0.37100),(-0.37830),(-0.38520),(-0.39160),(-0.39740),(-0.40280),(-0.40770),(-0.41190),(-0.41570),(-0.41870),(-0.42120),(-0.42300),(-0.42410),(-0.42440),(-0.42410),(-0.42310),(-0.42140),(-0.41890),(-0.41570),(-0.41170),(-0.40700),(-0.40160),(-0.39550),(-0.38880),(-0.38130),(-0.37330),(-0.36470),(-0.35550),(-0.34570),(-0.33560),(-0.32500),(-0.31400),(-0.30270),(-0.29110),(-0.27930),(-0.26740),(-0.25540),(-0.24340),(-0.23150),(-0.21960),(-0.20790),(-0.19640),(-0.18520),(-0.17430),(-0.16380),(-0.15360),(-0.14390),(-0.13460),(-0.12570),(-0.11710),(-0.10890),(-0.10080),(-0.09280),(-0.08470),(-0.07560),(-0.06540),(-0.06120),(-0.05640),(-0.05150),(-0.04710),(-0.04330),(-0.04000),(-0.03690),(-0.03390),(-0.03090),(-0.02760),(-0.02390),(-0.01980),(-0.01500),(-0.00940),(-0.00280),0.00470,0.01360,0.02390,0.03570,0.04900,0.06400,0.08080,0.09940,0.12010,0.14300,0.16840,0.19930,0.23520,0.26820,0.29570,0.32120,0.34320,0.36110,0.40310,0.44160,0.47940,0.51860,0.55920,0.60000,0.64040,0.67910,0.71550,0.74890,0.77880,0.80490,0.82680,0.84430,0.85740,0.86600,0.87020,0.87030,0.86640,0.85910,0.84870,0.83570,0.82040,0.80310,0.78440,0.76430,0.74310,0.72110,0.69820,0.67450,0.64990,0.62440,0.59780,0.57000,0.54060,0.50960,0.47660,0.44140,0.40400,0.36400,0.32150,0.27640,0.22880,0.17890,0.12690,0.07320,0.01820,(-0.03750),(-0.09350),(-0.14910),(-0.20370),(-0.25660),(-0.30720),(-0.35460),(-0.39810),(-0.43690),(-0.46920),(-0.48900),(-0.51660),(-0.55900),(-0.59110),(-0.61870),(-0.64450),(-0.66870),(-0.69090),(-0.71040),(-0.72700),(-0.74060),(-0.75120),(-0.75910),(-0.76440),(-0.76710),(-0.76740),(-0.76520),(-0.76060),(-0.75380),(-0.74490),(-0.73390),(-0.72120),(-0.70690),(-0.69100),(-0.67380),(-0.65540),(-0.63580),(-0.61520),(-0.59360),(-0.57120),(-0.54800),(-0.52420),(-0.49970),(-0.47470),(-0.44920),(-0.42340),(-0.39730),(-0.37100),(-0.34440),(-0.31790),(-0.29120),(-0.26460),(-0.23800),(-0.21160),(-0.18530),(-0.15930),(-0.13350),(-0.10800),(-0.08280),(-0.05800),(-0.03360),(-0.00970),0.01360,0.03650,0.05890,0.08070,0.10190,0.12250,0.14250,0.16180,0.18040,0.19840,0.21560,0.23220,0.24800,0.26320,0.27760,0.29140,0.30440,0.31670,0.32840,0.33940,0.34970,0.35940,0.36840,0.37690,0.38480,0.39210,0.39890,0.40510,0.41080,0.41600,0.42070,0.42500,0.42880,0.43210,0.43490,0.43740,0.43930,0.44090,0.44200,0.44260,0.44290,0.44260,0.44190,0.44070,0.43900,0.43680,0.43420,0.43090,0.42720,0.42290,0.41810,0.41260,0.40670,0.40010,0.39290,0.38520,0.37690,0.36810,0.35870,0.34880,0.33830,0.32730,0.31590,0.30400,0.29170,0.27890,0.26580,0.25230,0.23850,0.22450,0.21010,0.19550,0.18070,0.16570,0.15060,0.13530,0.11990,0.10440,0.08880,0.07320,0.05750,0.04190,0.02620,0.01050,(-0.00500),(-0.02060),(-0.03610),(-0.05160),(-0.06690),(-0.08210),(-0.09730),(-0.11220),(-0.12710),(-0.14190),(-0.15640),(-0.17080),(-0.18500),(-0.19910),(-0.21290),(-0.22650),(-0.24000),(-0.25320),(-0.26610),(-0.27870),(-0.29110),(-0.30310),(-0.31480),(-0.32610),(-0.33700),(-0.34750),(-0.35760),(-0.36710),(-0.37610),(-0.38460),(-0.39240),(-0.39970),(-0.40630),(-0.41220),(-0.41750),(-0.42190),(-0.42570),(-0.42870),(-0.43090),(-0.43240),(-0.43300),(-0.43290),(-0.43210),(-0.43050),(-0.42820),(-0.42520),(-0.42160),(-0.41730),(-0.41250),(-0.40720),(-0.40150),(-0.39540),(-0.38900),(-0.38230),(-0.37550),(-0.36870),(-0.36180),(-0.35510),(-0.34850),(-0.34230),(-0.33650),(-0.33120),(-0.32660),(-0.32300),(-0.32080),(-0.32340),(-0.32960),(-0.33230),(-0.33260),(-0.33340),(-0.33500),(-0.33750),(-0.34100),(-0.34500),(-0.34960),(-0.35440),(-0.35900),(-0.36340),(-0.36730),(-0.37060),(-0.37290),(-0.37420),(-0.37430),(-0.37300),(-0.37030),(-0.36600),(-0.36010),(-0.35250),(-0.34330),(-0.33230),(-0.31950),(-0.30500),(-0.28870),(-0.27060),(-0.25060),(-0.22860),(-0.20460),(-0.17830),(-0.14950),(-0.11770),(-0.08040),(-0.03690)};
function this.Wav_file_ext_wave_samples()
   return 600;
end

function this.Wav_file_ext_wave(channel,index)
   if (channel == 0) then
      return Wav_file_ext_wave_chan_0[(index % 600)+1];
   end
   return 0.00000;

end

function this.Wav_file__ctx_type_2_init()
   local _ctx = {};
   _ctx.i = 0;
   return _ctx;

end

function this.Wav_file_index_init()
   return this.Wav_file__ctx_type_2_init();
end

function this.Wav_file_index(_ctx)
   _ctx.i = ((_ctx.i + 1) % this.Wav_file_ext_wave_samples());
   return _ctx.i;

end

function this.Wav_file__ctx_type_3_init()
   local _ctx = {};
   _ctx._inst2 = this.Wav_file__ctx_type_2_init();
   return _ctx;

end

function this.Wav_file_osc_wave_init()
   return this.Wav_file__ctx_type_3_init();
end

function this.Wav_file_osc_wave(_ctx,cv)
   return this.Wav_file_ext_wave(0,this.Wav_file_index(_ctx._inst2));

end

function this.Wav_file__ctx_type_4_init()
   local _ctx = {};
   _ctx._inst4 = this.Wav_file__ctx_type_3_init();
   return _ctx;

end

function this.Wav_file_process_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_process(_ctx,cv)
   return this.Wav_file_osc_wave(_ctx._inst4,cv);

end

function this.Wav_file_noteOn_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_noteOn(_ctx,note,velocity,channel)

end

function this.Wav_file_noteOff_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_noteOff(_ctx,note,channel)

end

function this.Wav_file_controlChange_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_controlChange(_ctx,control,value,channel)

end

function this.Wav_file_default_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_default(_ctx)

end


function this.process(ctx,cv) return this.Wav_file_process(ctx,cv) end
function this.noteOn(ctx,note,velocity,channel) return this.Wav_file_noteOn(ctx,note,velocity,channel) end
function this.noteOff(ctx,note,channel) return this.Wav_file_noteOff(ctx,note,channel) end
function this.controlChange(ctx,control,value,channel) return this.Wav_file_controlChange(ctx,control,value,channel) end
function this.init() return this.Wav_file_process_init() end
function this.default(ctx) return this.Wav_file_default(ctx) end
this.config = { inputs = 2, outputs = 1, noteon_inputs = 4, noteoff_inputs = 3, controlchange_inputs = 4, is_active = true }
return this


local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Wav_file_ext_wave_chan_0 = {0.007660,0.051208,0.096405,0.144196,0.194366,0.246826,0.300781,0.355194,0.408539,0.459076,0.503967,0.536530,0.562958,0.631897,0.686768,0.734955,0.780823,0.824707,0.865417,0.901642,0.932404,0.957275,0.976227,0.989410,0.997253,0.999969,0.998047,0.991699,0.981354,0.967468,0.950470,0.930817,0.908844,0.884766,0.858368,0.830292,0.801300,0.770996,0.738861,0.704865,0.668671,0.629883,0.588318,0.543732,0.496155,0.445526,0.392059,0.335907,0.277283,0.216705,0.154602,0.091675,0.028717,(-0.033508),(-0.094269),(-0.152679),(-0.208008),(-0.259186),(-0.305145),(-0.343964),(-0.367645),(-0.405975),(-0.454437),(-0.492554),(-0.525970),(-0.557129),(-0.586273),(-0.612732),(-0.635956),(-0.655701),(-0.671906),(-0.684631),(-0.694153),(-0.700592),(-0.704041),(-0.704559),(-0.702240),(-0.697144),(-0.689392),(-0.679169),(-0.666687),(-0.652039),(-0.635468),(-0.617126),(-0.597168),(-0.575745),(-0.552948),(-0.528900),(-0.503754),(-0.477539),(-0.450439),(-0.422577),(-0.394012),(-0.364899),(-0.335358),(-0.305511),(-0.275421),(-0.245239),(-0.215118),(-0.185089),(-0.155304),(-0.125793),(-0.096741),(-0.068146),(-0.040192),(-0.012909),0.013611,0.039368,0.064178,0.088104,0.110992,0.132782,0.153503,0.173035,0.191376,0.208435,0.224243,0.238708,0.251709,0.263275,0.273163,0.280731,0.285797,0.296539,0.304993,0.311981,0.318268,0.324097,0.329529,0.334320,0.338470,0.341949,0.344849,0.347107,0.348877,0.350037,0.350708,0.350861,0.350555,0.349792,0.348572,0.346893,0.344879,0.342499,0.339783,0.336761,0.333496,0.329956,0.326172,0.322083,0.317871,0.313354,0.308655,0.303711,0.298523,0.293152,0.287567,0.281708,0.275635,0.269348,0.262756,0.255951,0.248871,0.241486,0.233795,0.225861,0.217560,0.208954,0.200043,0.190796,0.181183,0.171265,0.160980,0.150360,0.139404,0.128143,0.116516,0.104614,0.092407,0.079926,0.067169,0.054230,0.041016,0.027618,0.014038,0.000336,(-0.013489),(-0.027405),(-0.041382),(-0.055389),(-0.069458),(-0.083466),(-0.097473),(-0.111420),(-0.125214),(-0.138916),(-0.152496),(-0.165924),(-0.179138),(-0.192200),(-0.205048),(-0.217621),(-0.229950),(-0.242065),(-0.253906),(-0.265472),(-0.276733),(-0.287689),(-0.298309),(-0.308655),(-0.318634),(-0.328308),(-0.337646),(-0.346558),(-0.355103),(-0.363281),(-0.371033),(-0.378326),(-0.385223),(-0.391602),(-0.397491),(-0.402863),(-0.407715),(-0.411987),(-0.415710),(-0.418762),(-0.421204),(-0.423004),(-0.424103),(-0.424500),(-0.424194),(-0.423187),(-0.421448),(-0.418945),(-0.415710),(-0.411743),(-0.407074),(-0.401642),(-0.395569),(-0.388824),(-0.381378),(-0.373352),(-0.364716),(-0.355530),(-0.345795),(-0.335632),(-0.325012),(-0.314056),(-0.302765),(-0.291168),(-0.279388),(-0.267487),(-0.255463),(-0.243469),(-0.231506),(-0.219604),(-0.207916),(-0.196442),(-0.185242),(-0.174347),(-0.163818),(-0.153687),(-0.143982),(-0.134644),(-0.125732),(-0.117188),(-0.108917),(-0.100891),(-0.092896),(-0.084747),(-0.075684),(-0.065430),(-0.061279),(-0.056458),(-0.051544),(-0.047150),(-0.043335),(-0.040039),(-0.036957),(-0.033997),(-0.030945),(-0.027679),(-0.023987),(-0.019867),(-0.015045),(-0.009430),(-0.002869),0.004730,0.013641,0.023956,0.035706,0.049011,0.064026,0.080841,0.099487,0.120178,0.143066,0.168488,0.199341,0.235260,0.268219,0.295715,0.321259,0.343262,0.361176,0.403168,0.441650,0.479431,0.518616,0.559204,0.600098,0.640442,0.679138,0.715515,0.748901,0.778839,0.804901,0.826813,0.844360,0.857422,0.866028,0.870209,0.870300,0.866455,0.859161,0.848785,0.835724,0.820404,0.803192,0.784424,0.764343,0.743195,0.721130,0.698273,0.674561,0.649963,0.624481,0.597870,0.570007,0.540680,0.509644,0.476624,0.441467,0.404022,0.364044,0.321533,0.276459,0.228882,0.178955,0.126953,0.073242,0.018250,(-0.037506),(-0.093506),(-0.149139),(-0.203766),(-0.256683),(-0.307220),(-0.354614),(-0.398193),(-0.436920),(-0.469238),(-0.489014),(-0.516663),(-0.559052),(-0.591125),(-0.618744),(-0.644562),(-0.668793),(-0.690918),(-0.710480),(-0.727051),(-0.740631),(-0.751282),(-0.759186),(-0.764465),(-0.767181),(-0.767426),(-0.765259),(-0.760651),(-0.753845),(-0.744904),(-0.733948),(-0.721222),(-0.706909),(-0.691071),(-0.673859),(-0.655426),(-0.635864),(-0.615265),(-0.593689),(-0.571289),(-0.548096),(-0.524261),(-0.499756),(-0.474762),(-0.449280),(-0.423492),(-0.397369),(-0.371002),(-0.344482),(-0.317902),(-0.291260),(-0.264648),(-0.238098),(-0.211639),(-0.185333),(-0.159302),(-0.133514),(-0.108002),(-0.082825),(-0.058044),(-0.033691),(-0.009766),0.013641,0.036591,0.058990,0.080750,0.101990,0.122589,0.142548,0.161835,0.180481,0.198425,0.215698,0.232239,0.248077,0.263245,0.277649,0.291412,0.304413,0.316772,0.328430,0.339417,0.349731,0.359436,0.368500,0.376984,0.384888,0.392181,0.398956,0.405182,0.410858,0.416077,0.420776,0.425018,0.428802,0.432129,0.434967,0.437408,0.439392,0.440948,0.442047,0.442688,0.442902,0.442657,0.441956,0.440765,0.439087,0.436890,0.434235,0.431000,0.427246,0.422974,0.418121,0.412689,0.406708,0.400116,0.392975,0.385284,0.376984,0.368164,0.358734,0.348816,0.338348,0.327393,0.315948,0.304016,0.291718,0.278961,0.265808,0.252350,0.238556,0.224518,0.210144,0.195557,0.180756,0.165771,0.150635,0.135345,0.119934,0.104431,0.088898,0.073242,0.057587,0.041901,0.026215,0.010559,(-0.005035),(-0.020630),(-0.036133),(-0.051605),(-0.066925),(-0.082153),(-0.097321),(-0.112274),(-0.127167),(-0.141907),(-0.156464),(-0.170837),(-0.185089),(-0.199127),(-0.212982),(-0.226593),(-0.240021),(-0.253204),(-0.266113),(-0.278748),(-0.291107),(-0.303101),(-0.314819),(-0.326111),(-0.337067),(-0.347565),(-0.357605),(-0.367126),(-0.376160),(-0.384613),(-0.392487),(-0.399719),(-0.406372),(-0.412262),(-0.417511),(-0.421997),(-0.425751),(-0.428711),(-0.430939),(-0.432404),(-0.433044),(-0.432953),(-0.432129),(-0.430511),(-0.428253),(-0.425232),(-0.421600),(-0.417358),(-0.412567),(-0.407288),(-0.401550),(-0.395447),(-0.389038),(-0.382385),(-0.375580),(-0.368744),(-0.361877),(-0.355103),(-0.348572),(-0.342316),(-0.336517),(-0.331207),(-0.326630),(-0.323059),(-0.320862),(-0.323486),(-0.329651),(-0.332367),(-0.332611),(-0.333496),(-0.335022),(-0.337585),(-0.341003),(-0.345093),(-0.349640),(-0.354401),(-0.359070),(-0.363495),(-0.367371),(-0.370605),(-0.372925),(-0.374237),(-0.374329),(-0.373047),(-0.370300),(-0.366028),(-0.360138),(-0.352570),(-0.343323),(-0.332306),(-0.319550),(-0.305023),(-0.288727),(-0.270630),(-0.250610),(-0.228668),(-0.204651),(-0.178345),(-0.149536),(-0.117737),(-0.080444),(-0.036957)};
function this.Wav_file_ext_wave_samples()
   return 600;
end

function this.Wav_file_ext_wave(channel,index)
   if (channel == 0) then
      return Wav_file_ext_wave_chan_0[(index % 600)+1];
   end
   return 0.000000;

end

function this.Wav_file__ctx_type_2_init()
   local _ctx = {};
   _ctx.i = 0;
   return _ctx;

end

function this.Wav_file_index_init()
   return this.Wav_file__ctx_type_2_init();
end

function this.Wav_file_index(_ctx)
   _ctx.i = ((_ctx.i + 1) % this.Wav_file_ext_wave_samples());
   return _ctx.i;

end

function this.Wav_file__ctx_type_3_init()
   local _ctx = {};
   _ctx._inst2 = this.Wav_file__ctx_type_2_init();
   return _ctx;

end

function this.Wav_file_osc_wave_init()
   return this.Wav_file__ctx_type_3_init();
end

function this.Wav_file_osc_wave(_ctx,cv)
   return this.Wav_file_ext_wave(0,this.Wav_file_index(_ctx._inst2));

end

function this.Wav_file__ctx_type_4_init()
   local _ctx = {};
   _ctx._inst4 = this.Wav_file__ctx_type_3_init();
   return _ctx;

end

function this.Wav_file_process_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_process(_ctx,cv)
   return this.Wav_file_osc_wave(_ctx._inst4,cv);

end

function this.Wav_file_noteOn_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_noteOn(_ctx,note,velocity,channel)

end

function this.Wav_file_noteOff_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_noteOff(_ctx,note,channel)

end

function this.Wav_file_controlChange_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_controlChange(_ctx,control,value,channel)

end

function this.Wav_file_default_init()
   return this.Wav_file__ctx_type_4_init();
end

function this.Wav_file_default(_ctx)

end


function this.process(ctx,in0) return this.Wav_file_process(ctx,in0) end
function this.noteOn(ctx,in0,in1,in2) return this.Wav_file_noteOn(ctx,in0,in1,in2) end
function this.noteOff(ctx,in0,in1) return this.Wav_file_noteOff(ctx,in0,in1) end
function this.controlChange(ctx,in0,in1,in2) return this.Wav_file_controlChange(ctx,in0,in1,in2) end
function this.init() return this.Wav_file_process_init() end
function this.default(ctx) return this.Wav_file_default(ctx) end
this.config = { inputs = 2, outputs = 1, noteon_inputs = 4, noteoff_inputs = 3, controlchange_inputs = 4, is_active = true }
return this

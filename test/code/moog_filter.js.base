function vultProcess(){
    this.clip = function(x,low,high) { return x<low?low:(x>high?high:x); };
    this.not  = function(x)          { return x==0?1:0; };
    this.real = function(x)          { return x; };
    this.int  = function(x)          { return x|0; };
    this.sin  = function(x)          { return Math.sin(x); };
    this.cos  = function(x)          { return Math.cos(x); };
    this.abs  = function(x)          { return Math.abs(x); };
    this.exp  = function(x)          { return Math.exp(x); };
    this.floor= function(x)          { return Math.floor(x); };
    this.tan  = function(x)          { return Math.tan(x); };
    this.tanh = function(x)          { return Math.tanh(x); };
    this.sqrt = function(x)          { return x; };
    this.set  = function(a,i,v)      { a[i]=v; };
    this.get  = function(a,i)        { return a[i]; };
    this.makeArray = function(size,v){ var a = new Array(size); for(var i=0;i<size;i++) a[i]=v; return a; };
    this.Live_process_init = null;
    this.Live_default_ = null;


this.Moog_filter__ctx_type_0_init = function(){
   var _ctx = {};
   _ctx.pre_x = 0.;
   return _ctx;
}
this. Moog_filter_change_init = function() { return this.Moog_filter__ctx_type_0_init();}
this.Moog_filter_change = function(_ctx,x){
   var v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}
this.Moog_filter_min = function(a,b){
   return ((a < b)?a:b);
}
this.Moog_filter_max = function(a,b){
   return ((a > b)?a:b);
}
this.Moog_filter_clip = function(value,low,high){
   return this.Moog_filter_min(this.Moog_filter_max(low,value),high);
}
this.Moog_filter_PI = function(){
   return 3.14159265359;
}
this.Moog_filter_thermal = function(){
   return (0.819199996645);
}


this.Moog_filter__ctx_type_6_init = function(){
   var _ctx = {};
   _ctx.tw2 = 0.;
   _ctx.tw1 = 0.;
   _ctx.tw0 = 0.;
   _ctx.dw3 = 0.;
   _ctx.dw2 = 0.;
   _ctx.dw1 = 0.;
   _ctx.dw0 = 0.;
   return _ctx;
}
this. Moog_filter_moog_step_init = function() { return this.Moog_filter__ctx_type_6_init();}
this.Moog_filter_moog_step = function(_ctx,input,resFixed,tune,output){
   var i0 = (input + (- (resFixed * output)));
   var w0 = (_ctx.dw0 + (tune * (this.tanh((i0 * this.Moog_filter_thermal())) + (- _ctx.tw0))));
   _ctx.tw0 = this.tanh((w0 * this.Moog_filter_thermal()));
   var w1 = (_ctx.dw1 + (tune * _ctx.tw0) + (- _ctx.tw1));
   _ctx.tw1 = this.tanh((w1 * this.Moog_filter_thermal()));
   var w2 = (_ctx.dw2 + (tune * _ctx.tw1) + (- _ctx.tw2));
   _ctx.tw2 = this.tanh((w2 * this.Moog_filter_thermal()));
   var w3 = (_ctx.dw3 + (tune * _ctx.tw2) + (- this.tanh((_ctx.dw3 * this.Moog_filter_thermal()))));
   _ctx.dw0 = w0;
   _ctx.dw1 = w1;
   _ctx.dw2 = w2;
   _ctx.dw3 = w3;
   return w3;
}


this.Moog_filter__ctx_type_7_init = function(){
   var _ctx = {};
   _ctx.tune = 0.;
   _ctx.resFixed = 0.;
   _ctx.filter = this.Moog_filter__ctx_type_6_init();
   _ctx.dx1 = 0.;
   _ctx._inst1 = this.Moog_filter__ctx_type_0_init();
   _ctx._inst0 = this.Moog_filter__ctx_type_0_init();
   return _ctx;
}
this. Moog_filter_moog_init = function() { return this.Moog_filter__ctx_type_7_init();}
this.Moog_filter_moog = function(_ctx,input,cut,res){
   if((this.Moog_filter_change(_ctx._inst0,cut) || this.Moog_filter_change(_ctx._inst1,res))){
      res = this.Moog_filter_clip(res,0.,1.);
      cut = this.Moog_filter_clip(cut,1.,(22050.));
      var fc = (cut * 2.26757369615e-05);
      var x_2 = (fc * 0.5);
      var x2 = (fc * fc);
      var x3 = (fc * x2);
      var fcr = ((1.873 * x3) + (0.4955 * x2) + ((-0.649) * fc) + 0.9988);
      var acr = (((-3.9364) * x2) + (1.8409 * fc) + 0.9968);
      _ctx.tune = ((1. + (- this.exp(((-2.) * this.Moog_filter_PI() * x_2 * fcr)))) / this.Moog_filter_thermal());
      _ctx.resFixed = (4. * res * acr);
   }
   var x0 = this.Moog_filter_moog_step(_ctx.filter,input,_ctx.resFixed,_ctx.tune,_ctx.dx1);
   var x1 = this.Moog_filter_moog_step(_ctx.filter,input,_ctx.resFixed,_ctx.tune,x0);
   _ctx.dx1 = x1;
   return ((x0 + x1) * 0.5);
}

    if(this.Live_process_init)  this.context =  this.Live_process_init(); else this.context = {};
    if(this.Live_default_)      this.Live_default_(this.context);
    this.liveNoteOn        = function(note,velocity) { if(this.Live_noteOn)        this.Live_noteOn(this.context,note,velocity); };
    this.liveNoteOff       = function(note,velocity) { if(this.Live_noteOff)       this.Live_noteOff(this.context,note,velocity); };
    this.liveControlChange = function(note,velocity) { if(this.Live_controlChange) this.Live_controlChange(this.context,note,velocity); };
    this.liveProcess       = function(input)         { if(this.Live_process)       return this.Live_process(this.context,input); else return 0; };
    this.liveDefault       = function()              { if(this.Live_default_)      return this.Live_default_(this.context); };
}

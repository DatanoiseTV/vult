function vultProcess() {
            // Vult runtime functions
            this.random = function()         { return Math.random(); };
            this.irandom = function()        { return Math.floor(Math.random() * 4294967296); };
            this.eps  = function()           { return 1e-18 };
            this.pi   = function()           { return 3.1415926535897932384; }
            this.clip = function(x,low,high) { return x<low?low:(x>high?high:x); };
            this.not  = function(x)          { return x==0?1:0; };
            this.real = function(x)          { return x; };
            this.int  = function(x)          { return x|0; };
            this.sin  = function(x)          { return Math.sin(x); };
            this.cos  = function(x)          { return Math.cos(x); };
            this.abs  = function(x)          { return Math.abs(x); };
            this.exp  = function(x)          { return Math.exp(x); };
            this.floor= function(x)          { return Math.floor(x); };
            this.tan  = function(x)          { return Math.tan(x); };
            this.tanh = function(x)          { return Math.tanh(x); };
            this.sqrt = function(x)          { return x; };
            this.set  = function(a,i,v)      { a[i]=v; };
            this.get  = function(a,i)        { return a[i]; };
            this.int_to_float = function(i){ return i; };
            this.float_to_int = function(i){ return Math.floor(i); };
            this.makeArray = function(size,v){ var a = new Array(size); for(var i=0;i<size;i++) a[i]=v; return a; };
            this.wrap_array = function(a) { return a; }
            this.log = function(x) { console.log(x); }
         
           this.Sfi_fi_process_init = null;
           this.Sfi_fi_default = null;
           this.Sfi_fi_process = function(_ctx,a,b){
   var _tuple_5 = { field_0 : a, field_1 : b };
   return _tuple_5;
}
this.Sfi_fi_noteOn = function(_ctx,note,velocity,channel){
}
this.Sfi_fi_noteOff = function(_ctx,note,channel){
}
this.Sfi_fi_controlChange = function(_ctx,control,value,channel){
}
this.Sfi_fi_default = function(_ctx){
}

           if(this.Sfi_fi_process_init)  this.context =  this.Sfi_fi_process_init(); else this.context = {};
           if(this.Sfi_fi_default)      this.Sfi_fi_default(this.context);
           this.liveNoteOn        = function(note,velocity,channel) { if(this.Sfi_fi_noteOn)        this.Sfi_fi_noteOn(this.context,note,velocity,channel); };
           this.liveNoteOff       = function(note,velocity,channel) { if(this.Sfi_fi_noteOff)       this.Sfi_fi_noteOff(this.context,note,velocity,channel); };
           this.liveControlChange = function(note,velocity,channel) { if(this.Sfi_fi_controlChange) this.Sfi_fi_controlChange(this.context,note,velocity,channel); };
           this.liveProcess       = function(input)         { if(this.Sfi_fi_process)       return this.Sfi_fi_process(this.context,input); else return 0; };
           this.liveDefault       = function() { if(this.Sfi_fi_default)      return this.Sfi_fi_default(this.context); };
           }
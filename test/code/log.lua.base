
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
function this.Log_test_print()
   this.log(1);
   this.log(2.000000);
   this.log("leonardo");
   this.log(true);

end

function this.Log_process(_ctx,input)
   return input;

end

function this.Log_noteOn(_ctx,note,velocity,channel)

end

function this.Log_noteOff(_ctx,note,channel)

end

function this.Log_controlChange(_ctx,control,value,channel)

end

function this.Log_default(_ctx)

end


function this.process(in0) return this.Log_process(in0) end
function this.noteOn(in0,in1,in2) return this.Log_noteOn(in0,in1,in2) end
function this.noteOff(in0,in1) return this.Log_noteOff(in0,in1) end
function this.controlChange(in0,in1,in2) return this.Log_controlChange(in0,in1,in2) end
function this.init() return this.Log_process_init() end
function this.default(ctx) return this.Log_default(ctx) end
this.config = { inputs = 1, outputs = 1, noteon_inputs = 3, noteoff_inputs = 2, controlchange_inputs = 3, is_active = false }
return this

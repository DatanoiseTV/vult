function vultProcess(){
    this.clip = function(x,low,high) { return x<low?low:(x>high?high:x); };
    this.not  = function(x)          { return x==0?1:0; };
    this.real = function(x)          { return x; };
    this.int  = function(x)          { return x|0; };
    this.sin  = function(x)          { return Math.sin(x); };
    this.cos  = function(x)          { return Math.cos(x); };
    this.abs  = function(x)          { return Math.abs(x); };
    this.exp  = function(x)          { return Math.exp(x); };
    this.floor= function(x)          { return Math.floor(x); };
    this.tan  = function(x)          { return Math.tan(x); };
    this.tanh = function(x)          { return Math.tanh(x); };
    this.sqrt = function(x)          { return x; };
    this.set  = function(a,i,v)      { a[i]=v; };
    this.get  = function(a,i)        { return a[i]; };
    this.makeArray = function(size,v){ var a = new Array(size); for(var i=0;i<size;i++) a[i]=v; return a; };
    this.Live_process_init = null;
    this.Live_default_ = null;


this.Delay__ctx_type_0_init = function(){
   var _ctx = {};
   _ctx.x = 0.;
   return _ctx;
}
this. Delay_smooth_init = function() { return this.Delay__ctx_type_0_init();}
this.Delay_smooth = function(_ctx,input){
   _ctx.x = (_ctx.x + ((input + (- _ctx.x)) * 0.005));
   return _ctx.x;
}


this.Delay__ctx_type_1_init = function(){
   var _ctx = {};
   _ctx.pre_x = 0.;
   return _ctx;
}
this. Delay_change_init = function() { return this.Delay__ctx_type_1_init();}
this.Delay_change = function(_ctx,x){
   var v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}


this.Delay__ctx_type_2_init = function(){
   var _ctx = {};
   _ctx.pre_x = false;
   return _ctx;
}
this. Delay_edge_init = function() { return this.Delay__ctx_type_2_init();}
this.Delay_edge = function(_ctx,x){
   var v = ((_ctx.pre_x != x) && (_ctx.pre_x == false));
   _ctx.pre_x = x;
   return v;
}


this.Delay__ctx_type_3_init = function(){
   var _ctx = {};
   _ctx.count = ((0|0)|0);
   return _ctx;
}
this. Delay_each_init = function() { return this.Delay__ctx_type_3_init();}
this.Delay_each = function(_ctx,n){
   var ret = (_ctx.count == (0|0));
   _ctx.count = (((_ctx.count + (1|0)) % n)|0);
   return ret;
}
this.Delay_pitchToRate = function(d){
   return (0.000185392290249 * this.exp((0.0577623 * d)));
}


this.Delay__ctx_type_5_init = function(){
   var _ctx = {};
   _ctx.rate = 0.;
   _ctx.phase = 0.;
   _ctx._inst0 = this.Delay__ctx_type_1_init();
   return _ctx;
}
this. Delay_phasor_init = function() { return this.Delay__ctx_type_5_init();}
this.Delay_phasor = function(_ctx,pitch,reset){
   if(this.Delay_change(_ctx._inst0,pitch)){
      _ctx.rate = this.Delay_pitchToRate(pitch);
   }
   _ctx.phase = (reset?0.:((_ctx.phase + _ctx.rate) % 1.));
   return _ctx.phase;
}


this.Delay__ctx_type_6_init = function(){
   var _ctx = {};
   _ctx.phase = 0.;
   _ctx._inst0 = this.Delay__ctx_type_2_init();
   return _ctx;
}
this. Delay_lfo_init = function() { return this.Delay__ctx_type_6_init();}
this.Delay_lfo = function(_ctx,f,gate){
   var rate = (0.000226757369615 * f);
   if(this.Delay_edge(_ctx._inst0,gate)){
      _ctx.phase = 0.;
   }
   _ctx.phase = (_ctx.phase + rate);
   if((_ctx.phase > 1.)){
      _ctx.phase = (_ctx.phase + (-1.));
   }
   return (this.sin((6.28318530718 * _ctx.phase)) + (-0.5));
}


this.Delay__ctx_type_7_init = function(){
   var _ctx = {};
   _ctx.pre_phase1 = 0.;
   _ctx._inst2 = this.Delay__ctx_type_5_init();
   _ctx._inst1 = this.Delay__ctx_type_0_init();
   _ctx._inst0 = this.Delay__ctx_type_5_init();
   return _ctx;
}
this. Delay_phd_osc_init = function() { return this.Delay__ctx_type_7_init();}
this.Delay_phd_osc = function(_ctx,pitch,detune){
   var phase1 = this.Delay_phasor(_ctx._inst0,pitch,false);
   var comp = (1. + (- phase1));
   var reset = ((_ctx.pre_phase1 + (- phase1)) > 0.5);
   _ctx.pre_phase1 = phase1;
   var phase2 = this.Delay_phasor(_ctx._inst2,(pitch + (this.Delay_smooth(_ctx._inst1,detune) * 32.)),reset);
   var sine = this.sin((6.28318530718 * phase2));
   return (sine * comp);
}


this.Delay__ctx_type_8_init = function(){
   var _ctx = {};
   _ctx.write_pos = ((0|0)|0);
   _ctx.buffer = this.makeArray((44100|0),0.);
   return _ctx;
}
this. Delay_delay_init = function() { return this.Delay__ctx_type_8_init();}
this.Delay_delay = function(_ctx,x,time,feedback){
   time = this.clip(time,0.,1.);
   feedback = this.clip(feedback,0.,1.);
   var index_r = (this.real((44100|0)) * time);
   var index_i = (this.int(this.floor(index_r))|0);
   var delta = ((_ctx.write_pos + (- index_i))|0);
   var read_pos = (((delta < (0|0))?((44100|0) + delta):delta)|0);
   var decimal = (index_r + (- this.real(index_i)));
   var x1 = this.get(_ctx.buffer,read_pos);
   var x2 = this.get(_ctx.buffer,((read_pos + (1|0)) % (44100|0)));
   var ret = (((x2 + (- x1)) * decimal) + x1);
   _ctx.write_pos = (((_ctx.write_pos + (1|0)) % (44100|0))|0);
   this.set(_ctx.buffer,_ctx.write_pos,this.clip((x + (feedback * ret)),(-1.),1.));
   return ret;
}


this.Delay__ctx_type_9_init = function(){
   var _ctx = {};
   _ctx.pre = ((0|0)|0);
   _ctx.notes = this.makeArray((4|0),(0|0));
   _ctx.count = ((0|0)|0);
   return _ctx;
}
this. Delay_mono_noteOn_init = function() { return this.Delay__ctx_type_9_init();}
this.Delay_mono_noteOn = function(_ctx,n){
   if((_ctx.count < (4|0))){
      this.set(_ctx.notes,_ctx.count,n);
      _ctx.pre = (n|0);
      if((_ctx.count < (4|0))){
         _ctx.count = ((_ctx.count + (1|0))|0);
      }
   }
   return _ctx.pre;
}

this. Delay_mono_noteOff_init = function() { return this.Delay__ctx_type_9_init();}
this.Delay_mono_noteOff = function(_ctx,n){
   var found = false;
   var pos = {};
   var i = ((0|0)|0);
   if((_ctx.count == (0|0))){
      return _ctx.pre;
   }
   while(((i < (4|0)) && this.not(found))){
      if((this.get(_ctx.notes,i) == n)){
         pos = (i|0);
         found = true;
      }
      i = ((i + (1|0))|0);
   }
   if(found){
      var k = ((pos + (1|0))|0);
      while((k < (4|0))){
         this.set(_ctx.notes,(k + (-1|0)),this.get(_ctx.notes,k));
         k = ((k + (1|0))|0);
      }
      if((found && (_ctx.count > (0|0)))){
         _ctx.count = ((_ctx.count + (-1|0))|0);
         _ctx.pre = (this.get(_ctx.notes,(_ctx.count + (-1|0)))|0);
      }
   }
   return _ctx.pre;
}

this. Delay_mono_isGateOn_init = function() { return this.Delay__ctx_type_9_init();}
this.Delay_mono_isGateOn = function(_ctx){
   return (_ctx.count > (0|0));
}


this.Delay__ctx_type_10_init = function(){
   var _ctx = {};
   _ctx.volume = 0.;
   _ctx.time = 0.;
   _ctx.pitch = 0.;
   _ctx.notes = this.Delay__ctx_type_9_init();
   _ctx.lfo_rate = 0.;
   _ctx.lfo_amt = 0.;
   _ctx.feedback = 0.;
   _ctx.detune = 0.;
   _ctx._inst5 = this.Delay__ctx_type_8_init();
   _ctx._inst4 = this.Delay__ctx_type_0_init();
   _ctx._inst3 = this.Delay__ctx_type_0_init();
   _ctx._inst2 = this.Delay__ctx_type_0_init();
   _ctx._inst1 = this.Delay__ctx_type_7_init();
   _ctx._inst0 = this.Delay__ctx_type_6_init();
   return _ctx;
}
this. Delay_process_init = function() { return this.Delay__ctx_type_10_init();}
this.Delay_process = function(_ctx,input){
   var gate = this.Delay_mono_isGateOn(_ctx.notes);
   var lfo_val = (this.Delay_lfo(_ctx._inst0,_ctx.lfo_rate,gate) * _ctx.lfo_amt);
   var o1 = this.Delay_phd_osc(_ctx._inst1,_ctx.pitch,(_ctx.detune + lfo_val));
   var amp = this.Delay_smooth(_ctx._inst2,(gate?1.:0.));
   var osc_out = (o1 * amp);
   var delay_out = this.Delay_delay(_ctx._inst5,osc_out,this.Delay_smooth(_ctx._inst3,_ctx.time),this.Delay_smooth(_ctx._inst4,_ctx.feedback));
   return (_ctx.volume * (osc_out + delay_out) * 0.5);
}

this. Delay_noteOn_init = function() { return this.Delay__ctx_type_10_init();}
this.Delay_noteOn = function(_ctx,note,velocity){
   _ctx.pitch = this.real(this.Delay_mono_noteOn(_ctx.notes,note));
}

this. Delay_noteOff_init = function() { return this.Delay__ctx_type_10_init();}
this.Delay_noteOff = function(_ctx,note){
   _ctx.pitch = this.real(this.Delay_mono_noteOff(_ctx.notes,note));
}

this. Delay_controlChange_init = function() { return this.Delay__ctx_type_10_init();}
this.Delay_controlChange = function(_ctx,control,value){
   if((control == (30|0))){
      _ctx.volume = (value * 0.00787401574803);
   }
   if((control == (31|0))){
      _ctx.detune = (value * 0.00787401574803);
   }
   if((control == (32|0))){
      _ctx.lfo_rate = (value * 0.00787401574803);
   }
   if((control == (33|0))){
      _ctx.lfo_amt = (2. * ((this.real(value) * 0.00787401574803) + (-0.5)));
   }
   if((control == (34|0))){
      _ctx.time = (value * 0.00787401574803);
   }
   if((control == (35|0))){
      _ctx.feedback = (value * 0.00787401574803);
   }
}

this. Delay_default_init = function() { return this.Delay__ctx_type_10_init();}
this.Delay_default_ = function(_ctx){
   _ctx.volume = 0.;
   _ctx.pitch = 45.;
   _ctx.detune = 0.8;
   _ctx.lfo_rate = 0.07;
   _ctx.lfo_amt = (-0.8);
   _ctx.time = 0.5;
   _ctx.feedback = 0.5;
}

    if(this.Live_process_init)  this.context =  this.Live_process_init(); else this.context = {};
    if(this.Live_default_)      this.Live_default_(this.context);
    this.liveNoteOn        = function(note,velocity) { if(this.Live_noteOn)        this.Live_noteOn(this.context,note,velocity); };
    this.liveNoteOff       = function(note,velocity) { if(this.Live_noteOff)       this.Live_noteOff(this.context,note,velocity); };
    this.liveControlChange = function(note,velocity) { if(this.Live_controlChange) this.Live_controlChange(this.context,note,velocity); };
    this.liveProcess       = function(input)         { if(this.Live_process)       return this.Live_process(this.context,input); else return 0; };
    this.liveDefault       = function()              { if(this.Live_default_)      return this.Live_default_(this.context); };
}

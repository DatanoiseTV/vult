
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef AFF_F_H
#define AFF_F_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Aff_f__ctx_type_0 {
   int x;
} Aff_f__ctx_type_0;

typedef Aff_f__ctx_type_0 Aff_f_process_type;

void Aff_f__ctx_type_0_init(Aff_f__ctx_type_0 &_output_);

void Aff_f_process_init(Aff_f__ctx_type_0 &_output_);

float Aff_f_process(Aff_f__ctx_type_0 &_ctx, float a, float b);

typedef Aff_f__ctx_type_0 Aff_f_noteOn_type;

void Aff_f_noteOn_init(Aff_f__ctx_type_0 &_output_);

void Aff_f_noteOn(Aff_f__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Aff_f__ctx_type_0 Aff_f_noteOff_type;

void Aff_f_noteOff_init(Aff_f__ctx_type_0 &_output_);

void Aff_f_noteOff(Aff_f__ctx_type_0 &_ctx, int note, int channel);

typedef Aff_f__ctx_type_0 Aff_f_controlChange_type;

void Aff_f_controlChange_init(Aff_f__ctx_type_0 &_output_);

void Aff_f_controlChange(Aff_f__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Aff_f__ctx_type_0 Aff_f_default_type;

void Aff_f_default_init(Aff_f__ctx_type_0 &_output_);

void Aff_f_default(Aff_f__ctx_type_0 &_ctx);



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>

EXPORT void *aff_f__constructor();

EXPORT void aff_f__destructor(void *object);

EXPORT double aff_f__process(void *object, double in_0, double in_1);

EXPORT void aff_f__noteOn(void *object, int note, int vel, int channel);

EXPORT void aff_f__noteOff(void *object, int note, int channel);

EXPORT void aff_f__controlChange(void *object, int control, int value, int channel);

#ifdef __cplusplus
}
#endif

#endif // AFF_F_H


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef DELAY_H
#define DELAY_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Delay__ctx_type_0 {
   fix16_t x;
} Delay__ctx_type_0;

typedef Delay__ctx_type_0 Delay_smooth_type;

void Delay__ctx_type_0_init(Delay__ctx_type_0 &_output_);

void Delay_smooth_init(Delay__ctx_type_0 &_output_);

fix16_t Delay_smooth(Delay__ctx_type_0 &_ctx, fix16_t input);

typedef struct Delay__ctx_type_1 {
   fix16_t pre_x;
} Delay__ctx_type_1;

typedef Delay__ctx_type_1 Delay_change_type;

void Delay__ctx_type_1_init(Delay__ctx_type_1 &_output_);

void Delay_change_init(Delay__ctx_type_1 &_output_);

uint8_t Delay_change(Delay__ctx_type_1 &_ctx, fix16_t x);

typedef struct Delay__ctx_type_2 {
   uint8_t pre_x;
} Delay__ctx_type_2;

typedef Delay__ctx_type_2 Delay_edge_type;

void Delay__ctx_type_2_init(Delay__ctx_type_2 &_output_);

void Delay_edge_init(Delay__ctx_type_2 &_output_);

uint8_t Delay_edge(Delay__ctx_type_2 &_ctx, uint8_t x);

typedef struct Delay__ctx_type_3 {
   int count;
} Delay__ctx_type_3;

typedef Delay__ctx_type_3 Delay_each_type;

void Delay__ctx_type_3_init(Delay__ctx_type_3 &_output_);

void Delay_each_init(Delay__ctx_type_3 &_output_);

uint8_t Delay_each(Delay__ctx_type_3 &_ctx, int n);

fix16_t Delay_pitchToRate(fix16_t d);

typedef struct Delay__ctx_type_5 {
   fix16_t rate;
   fix16_t phase;
   Delay__ctx_type_1 _inst1;
} Delay__ctx_type_5;

typedef Delay__ctx_type_5 Delay_phasor_type;

void Delay__ctx_type_5_init(Delay__ctx_type_5 &_output_);

void Delay_phasor_init(Delay__ctx_type_5 &_output_);

fix16_t Delay_phasor(Delay__ctx_type_5 &_ctx, fix16_t pitch, uint8_t reset);

typedef struct Delay__ctx_type_6 {
   fix16_t phase;
   Delay__ctx_type_2 _inst1;
} Delay__ctx_type_6;

typedef Delay__ctx_type_6 Delay_lfo_type;

void Delay__ctx_type_6_init(Delay__ctx_type_6 &_output_);

void Delay_lfo_init(Delay__ctx_type_6 &_output_);

fix16_t Delay_lfo(Delay__ctx_type_6 &_ctx, fix16_t f, uint8_t gate);

typedef struct Delay__ctx_type_7 {
   fix16_t pre_phase1;
   Delay__ctx_type_5 _inst3;
   Delay__ctx_type_0 _inst2;
   Delay__ctx_type_5 _inst1;
} Delay__ctx_type_7;

typedef Delay__ctx_type_7 Delay_phd_osc_type;

void Delay__ctx_type_7_init(Delay__ctx_type_7 &_output_);

void Delay_phd_osc_init(Delay__ctx_type_7 &_output_);

fix16_t Delay_phd_osc(Delay__ctx_type_7 &_ctx, fix16_t pitch, fix16_t detune);

typedef struct Delay__ctx_type_8 {
   int write_pos;
   fix16_t buffer[44100];
} Delay__ctx_type_8;

typedef Delay__ctx_type_8 Delay_delay_type;

void Delay__ctx_type_8_init(Delay__ctx_type_8 &_output_);

void Delay_delay_init(Delay__ctx_type_8 &_output_);

fix16_t Delay_delay(Delay__ctx_type_8 &_ctx, fix16_t x, fix16_t time, fix16_t feedback);

typedef struct Delay__ctx_type_9 {
   int pre;
   int notes[4];
   int count;
} Delay__ctx_type_9;

typedef Delay__ctx_type_9 Delay_mono_noteOn_type;

void Delay__ctx_type_9_init(Delay__ctx_type_9 &_output_);

void Delay_mono_noteOn_init(Delay__ctx_type_9 &_output_);

int Delay_mono_noteOn(Delay__ctx_type_9 &_ctx, int n);

typedef Delay__ctx_type_9 Delay_mono_noteOff_type;

void Delay_mono_noteOff_init(Delay__ctx_type_9 &_output_);

int Delay_mono_noteOff(Delay__ctx_type_9 &_ctx, int n);

typedef Delay__ctx_type_9 Delay_mono_isGateOn_type;

void Delay_mono_isGateOn_init(Delay__ctx_type_9 &_output_);

uint8_t Delay_mono_isGateOn(Delay__ctx_type_9 &_ctx);

typedef struct Delay__ctx_type_10 {
   fix16_t volume;
   fix16_t time;
   fix16_t pitch;
   Delay__ctx_type_9 notes;
   fix16_t lfo_rate;
   fix16_t lfo_amt;
   fix16_t feedback;
   fix16_t detune;
   Delay__ctx_type_8 _inst6;
   Delay__ctx_type_0 _inst5;
   Delay__ctx_type_0 _inst4;
   Delay__ctx_type_0 _inst3;
   Delay__ctx_type_7 _inst2;
   Delay__ctx_type_6 _inst1;
} Delay__ctx_type_10;

typedef Delay__ctx_type_10 Delay_process_type;

void Delay__ctx_type_10_init(Delay__ctx_type_10 &_output_);

void Delay_process_init(Delay__ctx_type_10 &_output_);

fix16_t Delay_process(Delay__ctx_type_10 &_ctx, fix16_t input);

typedef Delay__ctx_type_10 Delay_noteOn_type;

void Delay_noteOn_init(Delay__ctx_type_10 &_output_);

void Delay_noteOn(Delay__ctx_type_10 &_ctx, int note, int velocity, int channel);

typedef Delay__ctx_type_10 Delay_noteOff_type;

void Delay_noteOff_init(Delay__ctx_type_10 &_output_);

void Delay_noteOff(Delay__ctx_type_10 &_ctx, int note, int channel);

typedef Delay__ctx_type_10 Delay_controlChange_type;

void Delay_controlChange_init(Delay__ctx_type_10 &_output_);

void Delay_controlChange(Delay__ctx_type_10 &_ctx, int control, fix16_t value, int channel);

typedef Delay__ctx_type_10 Delay_default_type;

void Delay_default_init(Delay__ctx_type_10 &_output_);

void Delay_default(Delay__ctx_type_10 &_ctx);



#endif // DELAY_H


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef UTIL_H
#define UTIL_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Util__ctx_type_0 {
   float pre_x;
} Util__ctx_type_0;

typedef Util__ctx_type_0 Util_change_type;

void Util__ctx_type_0_init(Util__ctx_type_0 &_output_);

void Util_change_init(Util__ctx_type_0 &_output_);

uint8_t Util_change(Util__ctx_type_0 &_ctx, float x);

float Util_pitchToRate(float d);

typedef struct Util__ctx_type_2 {
   float rate;
   float phase;
   Util__ctx_type_0 _inst3;
} Util__ctx_type_2;

typedef Util__ctx_type_2 Util_phasor_type;

void Util__ctx_type_2_init(Util__ctx_type_2 &_output_);

void Util_phasor_init(Util__ctx_type_2 &_output_);

float Util_phasor(Util__ctx_type_2 &_ctx, float pitch, uint8_t reset);

typedef Util__ctx_type_2 Util_phasorInit_type;

void Util_phasorInit_init(Util__ctx_type_2 &_output_);

void Util_phasorInit(Util__ctx_type_2 &_ctx);

float Util_minFixed();



#endif // UTIL_H

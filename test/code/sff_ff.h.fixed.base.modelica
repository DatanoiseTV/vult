
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SFF_FF_H
#define SFF_FF_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct _tuple___real_real__ {
   fix16_t field_0;
   fix16_t field_1;
} _tuple___real_real__;

typedef struct Sff_ff__ctx_type_0 {
   fix16_t process_ret_1;
   fix16_t process_ret_0;
} Sff_ff__ctx_type_0;

typedef Sff_ff__ctx_type_0 Sff_ff_process_type;

void Sff_ff__ctx_type_0_init(Sff_ff__ctx_type_0 &_output_);

void Sff_ff_process_init(Sff_ff__ctx_type_0 &_output_);

void Sff_ff_process(Sff_ff__ctx_type_0 &_ctx, fix16_t a, fix16_t b);

typedef Sff_ff__ctx_type_0 Sff_ff_process_ret_0_type;

void Sff_ff_process_ret_0_init(Sff_ff__ctx_type_0 &_output_);

fix16_t Sff_ff_process_ret_0(Sff_ff__ctx_type_0 &_ctx);

typedef Sff_ff__ctx_type_0 Sff_ff_process_ret_1_type;

void Sff_ff_process_ret_1_init(Sff_ff__ctx_type_0 &_output_);

fix16_t Sff_ff_process_ret_1(Sff_ff__ctx_type_0 &_ctx);

typedef Sff_ff__ctx_type_0 Sff_ff_noteOn_type;

void Sff_ff_noteOn_init(Sff_ff__ctx_type_0 &_output_);

void Sff_ff_noteOn(Sff_ff__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Sff_ff__ctx_type_0 Sff_ff_noteOff_type;

void Sff_ff_noteOff_init(Sff_ff__ctx_type_0 &_output_);

void Sff_ff_noteOff(Sff_ff__ctx_type_0 &_ctx, int note, int channel);

typedef Sff_ff__ctx_type_0 Sff_ff_controlChange_type;

void Sff_ff_controlChange_init(Sff_ff__ctx_type_0 &_output_);

void Sff_ff_controlChange(Sff_ff__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Sff_ff__ctx_type_0 Sff_ff_default_type;

void Sff_ff_default_init(Sff_ff__ctx_type_0 &_output_);

void Sff_ff_default(Sff_ff__ctx_type_0 &_ctx);



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>

EXPORT void *sff_ff__constructor();

EXPORT void sff_ff__destructor(void *object);

EXPORT void sff_ff__process(void *object, double in_0, double in_1, double &out_0, double &out_1);

EXPORT void sff_ff__noteOn(void *object, int note, int vel, int channel);

EXPORT void sff_ff__noteOff(void *object, int note, int channel);

EXPORT void sff_ff__controlChange(void *object, int control, int value, int channel);

#ifdef __cplusplus
}
#endif

#endif // SFF_FF_H


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SFI_FI_H
#define SFI_FI_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include <m_pd.h>

typedef struct _tuple___real_int__ {
   fix16_t field_0;
   int field_1;
} _tuple___real_int__;

typedef struct Sfi_fi__ctx_type_0 {
   int process_ret_1;
   fix16_t process_ret_0;
} Sfi_fi__ctx_type_0;

typedef Sfi_fi__ctx_type_0 Sfi_fi_process_type;

void Sfi_fi__ctx_type_0_init(Sfi_fi__ctx_type_0 &_output_);

void Sfi_fi_process_init(Sfi_fi__ctx_type_0 &_output_);

void Sfi_fi_process(Sfi_fi__ctx_type_0 &_ctx, fix16_t a, int b);

typedef Sfi_fi__ctx_type_0 Sfi_fi_process_ret_0_type;

void Sfi_fi_process_ret_0_init(Sfi_fi__ctx_type_0 &_output_);

fix16_t Sfi_fi_process_ret_0(Sfi_fi__ctx_type_0 &_ctx);

typedef Sfi_fi__ctx_type_0 Sfi_fi_process_ret_1_type;

void Sfi_fi_process_ret_1_init(Sfi_fi__ctx_type_0 &_output_);

int Sfi_fi_process_ret_1(Sfi_fi__ctx_type_0 &_ctx);

typedef Sfi_fi__ctx_type_0 Sfi_fi_noteOn_type;

void Sfi_fi_noteOn_init(Sfi_fi__ctx_type_0 &_output_);

void Sfi_fi_noteOn(Sfi_fi__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Sfi_fi__ctx_type_0 Sfi_fi_noteOff_type;

void Sfi_fi_noteOff_init(Sfi_fi__ctx_type_0 &_output_);

void Sfi_fi_noteOff(Sfi_fi__ctx_type_0 &_ctx, int note, int channel);

typedef Sfi_fi__ctx_type_0 Sfi_fi_controlChange_type;

void Sfi_fi_controlChange_init(Sfi_fi__ctx_type_0 &_output_);

void Sfi_fi_controlChange(Sfi_fi__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Sfi_fi__ctx_type_0 Sfi_fi_default_type;

void Sfi_fi_default_init(Sfi_fi__ctx_type_0 &_output_);

void Sfi_fi_default(Sfi_fi__ctx_type_0 &_ctx);



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

extern "C" {
EXPORT void sfi_fi_tilde_setup(void);
}

#endif // SFI_FI_H

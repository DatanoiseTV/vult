
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "sfi_fi.h"

void Sfi_fi_process(float a, int b, _tuple___real_int__ &_output_){
   _tuple___real_int__ _tuple_5;
   {
      _tuple_5.field_0 = a;
      _tuple_5.field_1 = b;
   }
   _output_ = _tuple_5;
   return ;
}

void Sfi_fi_noteOn(int note, int velocity, int channel){
}

void Sfi_fi_noteOff(int note, int channel){
}

void Sfi_fi_controlChange(int control, int value, int channel){
}

void Sfi_fi_default(){
}



extern "C" {

EXPORT void *sfi_fi__constructor()
{
   float *data = (float *)malloc(sizeof(float));
   
   
   return (void *)data;
}

EXPORT void sfi_fi__destructor(void *object)
{
   float *data = (float *)object;
   free(data);
}

EXPORT void sfi_fi__process(void *object, double in_0, int in_1, double &out_0, int &out_1)
{
   float *data = (float *)object;
   _tuple___real_int__ ret;  Sfi_fi_process((float) in_0,float_to_int(in_1),ret);
out_0 = (float) ret.field_0;
out_1 = int_to_float(ret.field_1);

}


EXPORT void sfi_fi__noteOn(void *object, int note,int velocity,int channel){
   float *data = (float *)object;
   if(vel) Sfi_fi_noteOn((int)note,(int)velocity,(int)channel);
   else Sfi_fi_noteOff((int)note,(int)channel);
}



EXPORT void sfi_fi__noteOff(void *object, int note,int channel) {
   float *data = (float *)object;
   Sfi_fi_noteOff((int)note,(int)channel);
}



EXPORT void sfi_fi__controlChange(void *object, int control,int value,int channel) {
   float *data = (float *)object;
   Sfi_fi_controlChange((int)control,(int)value,(int)channel);
}


} // extern "C"


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef TRICORE_H
#define TRICORE_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Util__ctx_type_0 {
   uint8_t pre;
} Util__ctx_type_0;

typedef Util__ctx_type_0 Util_edge_type;

void Util__ctx_type_0_init(Util__ctx_type_0 &_output_);

void Util_edge_init(Util__ctx_type_0 &_output_);

uint8_t Util_edge(Util__ctx_type_0 &_ctx, uint8_t x);

typedef struct Util__ctx_type_1 {
   fix16_t pre_x;
} Util__ctx_type_1;

typedef Util__ctx_type_1 Util_change_type;

void Util__ctx_type_1_init(Util__ctx_type_1 &_output_);

void Util_change_init(Util__ctx_type_1 &_output_);

uint8_t Util_change(Util__ctx_type_1 &_ctx, fix16_t x);

fix16_t Util_map(fix16_t x, fix16_t x0, fix16_t x1, fix16_t y0, fix16_t y1);

typedef struct Util__ctx_type_3 {
   fix16_t y1;
   fix16_t x1;
} Util__ctx_type_3;

typedef Util__ctx_type_3 Util_dcblock_type;

void Util__ctx_type_3_init(Util__ctx_type_3 &_output_);

void Util_dcblock_init(Util__ctx_type_3 &_output_);

fix16_t Util_dcblock(Util__ctx_type_3 &_ctx, fix16_t x0);

typedef struct Util__ctx_type_4 {
   fix16_t x;
} Util__ctx_type_4;

typedef Util__ctx_type_4 Util_smooth_type;

void Util__ctx_type_4_init(Util__ctx_type_4 &_output_);

void Util_smooth_init(Util__ctx_type_4 &_output_);

fix16_t Util_smooth(Util__ctx_type_4 &_ctx, fix16_t input);

typedef struct Util__ctx_type_5 {
   fix16_t x0;
} Util__ctx_type_5;

typedef Util__ctx_type_5 Util_average2_type;

void Util__ctx_type_5_init(Util__ctx_type_5 &_output_);

void Util_average2_init(Util__ctx_type_5 &_output_);

fix16_t Util_average2(Util__ctx_type_5 &_ctx, fix16_t x1);

static const fix16_t Util_pitchToRate_1024_c0[33] = {0x3099 /* 0.189842 */,0x30fa /* 0.191326 */,0x32dd /* 0.198689 */,0x382c /* 0.219425 */,0x4403 /* 0.265677 */,0x5b3f /* 0.356438 */,0x8549 /* 0.520651 */,0xcd33 /* 0.801560 */,0x14344 /* 1.262758 */,0x1ff1e /* 1.996562 */,0x322b2 /* 3.135544 */,0x4de4b /* 4.868347 */,0x77616 /* 7.461281 */,0xb49a7 /* 11.287715 */,0x10de35 /* 16.867996 */,0x18ec5d /* 24.923305 */,0x2472d2 /* 36.448521 */,0x34cf55 /* 52.809903 */,0x4be069 /* 75.876616 */,0x6c327d /* 108.197225 */,0x993b7f /* 153.232414 */,0xd7ac1e /* 215.672344 */,0x12dd8bc /* 301.846626 */,0x1a44c4c /* 420.298038 */,0x2468153 /* 582.505178 */,0x323cfe7 /* 803.812129 */,0x450e152 /* 1104.880165 */,0x5e91fc6 /* 1513.124126 */,0x8115fbb /* 2065.373952 */,0xafa3b05 /* 2810.230550 */,0xee4e723 /* 3812.902888 */,0x1427868c /* 5159.525580 */,0x1b33c2ef /* 6963.761469 */};
static const fix16_t Util_pitchToRate_1024_c1[33] = {0x2cb /* 0.010913 */,0x29a /* 0.010176 */,0x222 /* 0.008334 */,0x13e /* 0.004867 */,(-0x3d /* -0.000939 */),(-0x293 /* -0.010061 */),(-0x619 /* -0.023820 */),(-0xb43 /* -0.044002 */),(-0x12b0 /* -0.073002 */),(-0x1d30 /* -0.114025 */),(-0x2bdc /* -0.171341 */),(-0x4028 /* -0.250621 */),(-0x5c00 /* -0.359381 */),(-0x81ee /* -0.507548 */),(-0xb54d /* -0.708208 */),(-0xfa83 /* -0.978575 */),(-0x1575c /* -1.341250 */),(-0x1d36a /* -1.825848 */),(-0x2789b /* -2.471123 */),(-0x353e5 /* -3.327721 */),(-0x4762f /* -4.461658 */),(-0x5f581 /* -5.959006 */),(-0x7ee7f /* -7.931626 */),(-0xa867a /* -10.525312 */),(-0xdede0 /* -13.929212 */),(-0x126338 /* -18.387588 */),(-0x183843 /* -24.219785 */),(-0x1fd5cc /* -31.835151 */),(-0x29c501 /* -41.769557 */),(-0x36b4da /* -54.706455 */),(-0x478a8d /* -71.541226 */),(-0x5d6c2e /* -93.422592 */),(-0x79d2ba /* -121.823163 */)};
static const fix16_t Util_pitchToRate_1024_c2[33] = {0x17 /* 0.000356 */,0x1d /* 0.000447 */,0x24 /* 0.000562 */,0x2e /* 0.000707 */,0x3a /* 0.000889 */,0x49 /* 0.001119 */,0x5c /* 0.001407 */,0x73 /* 0.001769 */,0x91 /* 0.002225 */,0xb7 /* 0.002799 */,0xe6 /* 0.003520 */,0x122 /* 0.004426 */,0x16c /* 0.005567 */,0x1ca /* 0.007001 */,0x241 /* 0.008805 */,0x2d5 /* 0.011074 */,0x390 /* 0.013927 */,0x47b /* 0.017515 */,0x5a3 /* 0.022028 */,0x717 /* 0.027704 */,0x8eb /* 0.034841 */,0xb37 /* 0.043818 */,0xe1b /* 0.055107 */,0x11be /* 0.069305 */,0x1650 /* 0.087163 */,0x1c0f /* 0.109617 */,0x234a /* 0.137862 */,0x2c62 /* 0.173377 */,0x37d2 /* 0.218054 */,0x4633 /* 0.274227 */,0x584a /* 0.344892 */,0x6f0c /* 0.433780 */,0x8ba8 /* 0.545543 */};
fix16_t Util_pitchToRate_1024(fix16_t pitch);

static const fix16_t Util_pitchToRate_c0[33] = {0xc /* 0.000185 */,0xc /* 0.000187 */,0xc /* 0.000194 */,0xe /* 0.000214 */,0x11 /* 0.000259 */,0x16 /* 0.000348 */,0x21 /* 0.000508 */,0x33 /* 0.000783 */,0x50 /* 0.001233 */,0x7f /* 0.001950 */,0xc8 /* 0.003062 */,0x137 /* 0.004754 */,0x1dd /* 0.007286 */,0x2d2 /* 0.011023 */,0x437 /* 0.016473 */,0x63b /* 0.024339 */,0x91c /* 0.035594 */,0xd33 /* 0.051572 */,0x12f8 /* 0.074098 */,0x1b0c /* 0.105661 */,0x264e /* 0.149641 */,0x35eb /* 0.210618 */,0x4b76 /* 0.294772 */,0x6913 /* 0.410447 */,0x91a0 /* 0.568853 */,0xc8f3 /* 0.784973 */,0x11438 /* 1.078985 */,0x17a47 /* 1.477660 */,0x20457 /* 2.016967 */,0x2be8e /* 2.744366 */,0x3b939 /* 3.723538 */,0x509e1 /* 5.038599 */,0x6ccf0 /* 6.800548 */};
static const fix16_t Util_pitchToRate_c1[33] = {0x0 /* 0.000011 */,0x0 /* 0.000010 */,0x0 /* 0.000008 */,0x0 /* 0.000005 */,(-0x0 /* -0.000001 */),(-0x0 /* -0.000010 */),(-0x1 /* -0.000023 */),(-0x2 /* -0.000043 */),(-0x4 /* -0.000071 */),(-0x7 /* -0.000111 */),(-0xa /* -0.000167 */),(-0x10 /* -0.000245 */),(-0x17 /* -0.000351 */),(-0x20 /* -0.000496 */),(-0x2d /* -0.000692 */),(-0x3e /* -0.000956 */),(-0x55 /* -0.001310 */),(-0x74 /* -0.001783 */),(-0x9e /* -0.002413 */),(-0xd4 /* -0.003250 */),(-0x11d /* -0.004357 */),(-0x17d /* -0.005819 */),(-0x1fb /* -0.007746 */),(-0x2a1 /* -0.010279 */),(-0x37b /* -0.013603 */),(-0x498 /* -0.017957 */),(-0x60e /* -0.023652 */),(-0x7f5 /* -0.031089 */),(-0xa71 /* -0.040791 */),(-0xdad /* -0.053424 */),(-0x11e2 /* -0.069864 */),(-0x175b /* -0.091233 */),(-0x1e74 /* -0.118968 */)};
static const fix16_t Util_pitchToRate_c2[33] = {0x0 /* 0.000000 */,0x0 /* 0.000000 */,0x0 /* 0.000001 */,0x0 /* 0.000001 */,0x0 /* 0.000001 */,0x0 /* 0.000001 */,0x0 /* 0.000001 */,0x0 /* 0.000002 */,0x0 /* 0.000002 */,0x0 /* 0.000003 */,0x0 /* 0.000003 */,0x0 /* 0.000004 */,0x0 /* 0.000005 */,0x0 /* 0.000007 */,0x0 /* 0.000009 */,0x0 /* 0.000011 */,0x0 /* 0.000014 */,0x1 /* 0.000017 */,0x1 /* 0.000022 */,0x1 /* 0.000027 */,0x2 /* 0.000034 */,0x2 /* 0.000043 */,0x3 /* 0.000054 */,0x4 /* 0.000068 */,0x5 /* 0.000085 */,0x7 /* 0.000107 */,0x8 /* 0.000135 */,0xb /* 0.000169 */,0xd /* 0.000213 */,0x11 /* 0.000268 */,0x16 /* 0.000337 */,0x1b /* 0.000424 */,0x22 /* 0.000533 */};
fix16_t Util_pitchToRate(fix16_t pitch);

fix16_t Util_cvToPitch(fix16_t cv);

static const fix16_t Util_cvToRate_1024_c0[33] = {0xc265 /* 0.759367 */,0xc34b /* 0.762877 */,0xc79c /* 0.779737 */,0xd35d /* 0.825652 */,0xecb5 /* 0.924648 */,0x11cc6 /* 1.112398 */,0x170d0 /* 1.440687 */,0x1fbbf /* 1.983392 */,0x2d82c /* 2.844434 */,0x42b16 /* 4.168310 */,0x6276c /* 6.153994 */,0x912bc /* 9.073195 */,0xd4b57 /* 13.294301 */,0x135049 /* 19.313616 */,0x1bcbcd /* 27.796102 */,0x27a0d7 /* 39.628290 */,0x37fc95 /* 55.986657 */,0x4e6d3f /* 78.426750 */,0x6cff8b /* 108.998215 */,0x966330 /* 150.387464 */,0xce1e58 /* 206.118533 */,0x118c81b /* 280.781675 */,0x17c5b85 /* 380.357513 */,0x2009cde /* 512.612775 */,0x2af9de4 /* 687.616764 */,0x3965959 /* 918.349028 */,0x4c59ba2 /* 1221.607949 */,0x6530d5f /* 1619.052235 */,0x85aa11b /* 2138.629322 */,0xaff6fc9 /* 2815.436671 */,0xe702993 /* 3696.162408 */,0x12e6b1b1 /* 4838.694117 */,0x18ae3626 /* 6318.211520 */};
static const fix16_t Util_cvToRate_1024_c1[33] = {0x53ede /* 5.245583 */,0x4ffba /* 4.998943 */,0x46730 /* 4.403089 */,0x351b1 /* 3.319116 */,0x19082 /* 1.564497 */,(-0x11968 /* -1.099256 */),(-0x4fb73 /* -4.982226 */),(-0xa7c61 /* -10.485864 */),(-0x1220c1 /* -18.127956 */),(-0x1c92f8 /* -28.574100 */),(-0x2aad67 /* -42.677360 */),(-0x3d8733 /* -61.528124 */),(-0x56844b /* -86.516770 */),(-0x776981 /* -119.412133 */),(-0xa275d7 /* -162.460318 */),(-0xda821d /* -218.508269 */),(-0x1232823 /* -291.156786 */),(-0x180f4fc /* -384.956978 */),(-0x1f9a6fc /* -505.652297 */),(-0x2947562 /* -660.458539 */),(-0x35a7eb5 /* -858.494950 */),(-0x4572c62 /* -1111.173376 */),(-0x598dbc3 /* -1432.858445 */),(-0x7318b61 /* -1841.544459 */),(-0x937d0e8 /* -2359.816046 */),(-0xbc7cba3 /* -3015.795467 */),(-0xf04d690 /* -3844.838138 */),(-0x131b1a17 /* -4891.101919 */),(-0x18423280 /* -6210.197274 */),(-0x1ebcfe6e /* -7868.993868 */),(-0x26e3c72b /* -9955.778008 */),(-0x311fbf74 /* -12575.747874 */),(-0x3df63c10 /* -15862.234621 */)};
static const fix16_t Util_cvToRate_1024_c2[33] = {0x142026 /* 20.125592 */,0x187523 /* 24.457572 */,0x1db8d5 /* 29.722000 */,0x241e9c /* 36.119582 */,0x2be4ec /* 43.894227 */,0x3557a3 /* 53.342343 */,0x40d2fb /* 64.824143 */,0x4ec701 /* 78.777366 */,0x5fbbe6 /* 95.733987 */,0x745729 /* 116.340471 */,0x8d61e8 /* 141.382451 */,0xabd08c /* 171.814646 */,0xd0cc1f /* 208.797363 */,0xfdbd8b /* 253.740413 */,0x1345b72 /* 308.357211 */,0x176bb0a /* 374.730622 */,0x1c763be /* 455.389632 */,0x229692b /* 553.410816 */,0x2a08973 /* 672.536916 */,0x3314a65 /* 817.290611 */,0x3e13782 /* 993.216833 */,0x4b70028 /* 1207.000622 */,0x5bacdca /* 1466.803875 */,0x6f6877e /* 1782.529271 */,0x8763eb8 /* 2166.244997 */,0xa487cd2 /* 2632.487590 */,0xc7f1297 /* 3199.072620 */,0xf2fac4b /* 3887.673024 */,0x1274dbf3 /* 4724.859179 */,0x166d3ecc /* 5741.245302 */,0x1b417116 /* 6977.441755 */,0x211f4a3f /* 8479.290028 */,0x2840749a /* 10304.455486 */};
fix16_t Util_cvToRate_1024(fix16_t cv);

static const fix16_t Util_cvToRate_c0[33] = {0x30 /* 0.000742 */,0x30 /* 0.000745 */,0x31 /* 0.000761 */,0x34 /* 0.000806 */,0x3b /* 0.000903 */,0x47 /* 0.001086 */,0x5c /* 0.001407 */,0x7e /* 0.001937 */,0xb6 /* 0.002778 */,0x10a /* 0.004071 */,0x189 /* 0.006010 */,0x244 /* 0.008861 */,0x352 /* 0.012983 */,0x4d4 /* 0.018861 */,0x6f2 /* 0.027145 */,0x9e8 /* 0.038700 */,0xdff /* 0.054674 */,0x139b /* 0.076589 */,0x1b3f /* 0.106444 */,0x2598 /* 0.146863 */,0x3387 /* 0.201288 */,0x4632 /* 0.274201 */,0x5f16 /* 0.371443 */,0x8027 /* 0.500598 */,0xabe7 /* 0.671501 */,0xe596 /* 0.896825 */,0x13166 /* 1.192977 */,0x194c3 /* 1.581106 */,0x216a8 /* 2.088505 */,0x2bfdb /* 2.749450 */,0x39c0a /* 3.609534 */,0x4b9ac /* 4.725287 */,0x62b8d /* 6.170128 */};
static const fix16_t Util_cvToRate_c1[33] = {0x14f /* 0.005123 */,0x13f /* 0.004882 */,0x119 /* 0.004300 */,0xd4 /* 0.003241 */,0x64 /* 0.001528 */,(-0x46 /* -0.001073 */),(-0x13e /* -0.004865 */),(-0x29f /* -0.010240 */),(-0x488 /* -0.017703 */),(-0x724 /* -0.027904 */),(-0xaab /* -0.041677 */),(-0xf61 /* -0.060086 */),(-0x15a1 /* -0.084489 */),(-0x1dda /* -0.116613 */),(-0x289d /* -0.158653 */),(-0x36a0 /* -0.213387 */),(-0x48ca /* -0.284333 */),(-0x603d /* -0.375935 */),(-0x7e69 /* -0.493801 */),(-0xa51d /* -0.644979 */),(-0xd69f /* -0.838374 */),(-0x115cb /* -1.085130 */),(-0x16636 /* -1.399276 */),(-0x1cc62 /* -1.798383 */),(-0x24df4 /* -2.304508 */),(-0x2f1f2 /* -2.945113 */),(-0x3c135 /* -3.754725 */),(-0x4c6c6 /* -4.776467 */),(-0x6108c /* -6.064646 */),(-0x7af3f /* -7.684564 */),(-0x9b8f1 /* -9.722439 */),(-0xc47ef /* -12.281004 */),(-0xf7d8f /* -15.490463 */)};
static const fix16_t Util_cvToRate_c2[33] = {0x508 /* 0.019654 */,0x61d /* 0.023884 */,0x76e /* 0.029025 */,0x907 /* 0.035273 */,0xaf9 /* 0.042865 */,0xd55 /* 0.052092 */,0x1034 /* 0.063305 */,0x13b1 /* 0.076931 */,0x17ee /* 0.093490 */,0x1d15 /* 0.113614 */,0x2358 /* 0.138069 */,0x2af4 /* 0.167788 */,0x3433 /* 0.203904 */,0x3f6f /* 0.247793 */,0x4d16 /* 0.301130 */,0x5dae /* 0.365948 */,0x71d8 /* 0.444716 */,0x8a5a /* 0.540440 */,0xa822 /* 0.656774 */,0xcc52 /* 0.798135 */,0xf84d /* 0.969938 */,0x12dc0 /* 1.178712 */,0x16eb3 /* 1.432426 */,0x1bda1 /* 1.740751 */,0x21d8f /* 2.115474 */,0x2921f /* 2.570789 */,0x31fc4 /* 3.124094 */,0x3cbeb /* 3.796556 */,0x49d36 /* 4.614120 */,0x59b4f /* 5.606685 */,0x6d05c /* 6.813908 */,0x847d2 /* 8.280557 */,0xa101d /* 10.062945 */};
fix16_t Util_cvToRate(fix16_t cv);

fix16_t Util_pitchToCv(fix16_t pitch);

static const fix16_t Util_cvToperiod_c0[33] = {0x2a23efc /* 674.246035 */,0x29f8dc8 /* 671.553838 */,0x296c304 /* 662.761782 */,0x286c270 /* 646.759522 */,0x26fcca7 /* 623.799428 */,0x252df2e /* 594.871802 */,0x2314c5b /* 561.298277 */,0x20c7a18 /* 524.476942 */,0x1e5bb3b /* 485.731369 */,0x1be3ab8 /* 446.229382 */,0x196f28b /* 406.947440 */,0x170a9ed /* 368.663774 */,0x14bf7fb /* 331.968683 */,0x12948be /* 297.284156 */,0x108e33e /* 264.887666 */,0xeaefd5 /* 234.936857 */,0xcf7e3d /* 207.493124 */,0xb68b03 /* 182.543016 */,0xa00454 /* 160.016907 */,0x8bce09 /* 139.804832 */,0x79c501 /* 121.769557 */,0x69c1d2 /* 105.757117 */,0x5b9ae8 /* 91.605116 */,0x4f262a /* 79.149088 */,0x443a2c /* 68.227249 */,0x3aaf13 /* 58.683895 */,0x325f29 /* 50.371734 */,0x2b2742 /* 43.153355 */,0x24e6eb /* 36.902033 */,0x1f8084 /* 31.502025 */,0x1ad936 /* 26.848494 */,0x16d8df /* 22.847166 */,0x1369ee /* 19.413794 */};
static const fix16_t Util_cvToperiod_c1[33] = {(-0x1230a803 /* -4656.656311 */),(-0x1181f5e8 /* -4481.960579 */),(-0x1066afa6 /* -4198.686133 */),(-0xf0fc065 /* -3855.751543 */),(-0xd9f23b3 /* -3487.139455 */),(-0xc2bdbdb /* -3115.858821 */),(-0xac4ee29 /* -2756.930319 */),(-0x973a009 /* -2419.625141 */),(-0x83d227f /* -2109.134753 */),(-0x723ceee /* -1827.808334 */),(-0x628101e /* -1576.062963 */),(-0x5490c0e /* -1353.047092 */),(-0x4851e6d /* -1157.118864 */),(-0x3da2fae /* -986.186250 */),(-0x345f1d5 /* -837.944665 */),(-0x2c60a03 /* -710.039113 */),(-0x2582bd5 /* -600.171234 */),(-0x1fa2aa4 /* -506.166566 */),(-0x1aa0372 /* -426.013463 */),(-0x165e1d4 /* -357.882151 */),(-0x12c2154 /* -300.130190 */),(-0xfb4c84 /* -251.298904 */),(-0xd21aa6 /* -210.104105 */),(-0xaf6c67 /* -175.423450 */),(-0x924838 /* -146.282114 */),(-0x79d680 /* -121.837895 */),(-0x655dd5 /* -101.366537 */),(-0x543f6a /* -84.247726 */),(-0x45f3bb /* -69.952082 */),(-0x3a077d /* -58.029259 */),(-0x3018e5 /* -48.097248 */),(-0x27d534 /* -39.832833 */),(-0x20f693 /* -32.963186 */)};
static const fix16_t Util_cvToperiod_c2[33] = {0x38d4d2ba /* 14548.823162 */,0x2dc35e98 /* 11715.369522 */,0x24d9bea3 /* 9433.744675 */,0x1dac7a30 /* 7596.477297 */,0x17e506d0 /* 6117.026622 */,0x133db4c4 /* 4925.706117 */,0xf7e66aa /* 3966.401040 */,0xc79ecde /* 3193.925264 */,0xa0be493 /* 2571.892879 */,0x817011a /* 2071.004308 */,0x683aa8c /* 1667.666208 */,0x53ee151 /* 1342.880152 */,0x4395906 /* 1081.347751 */,0x366c003 /* 870.750049 */,0x2bd2ad2 /* 701.167268 */,0x2349c8e /* 564.611553 */,0x1c6a695 /* 454.650724 */,0x16e1af4 /* 366.105298 */,0x126cdf5 /* 294.804521 */,0xed63d1 /* 237.389916 */,0xbf2836 /* 191.157082 */,0x99eda6 /* 153.928316 */,0x7bf335 /* 123.950032 */,0x63cf66 /* 99.810164 */,0x505f24 /* 80.371652 */,0x40b808 /* 64.718885 */,0x341d54 /* 52.114569 */,0x29f70a /* 41.965005 */,0x21cac8 /* 33.792117 */,0x1b3600 /* 27.210939 */,0x15e956 /* 21.911477 */,0x11a4e4 /* 17.644111 */,0xe3534 /* 14.207835 */};
fix16_t Util_cvToperiod(fix16_t cv);

static const fix16_t Util_cvTokHz_c0[33] = {0x85f /* 0.032703 */,0x86d /* 0.032916 */,0x8b1 /* 0.033958 */,0x96f /* 0.036857 */,0xb11 /* 0.043242 */,0xe3c /* 0.055616 */,0x13e5 /* 0.077724 */,0x1d75 /* 0.115069 */,0x2cf5 /* 0.175614 */,0x454f /* 0.270739 */,0x6aa2 /* 0.416537 */,0xa2b4 /* 0.635567 */,0xf58e /* 0.959207 */,0x16e4a /* 1.430818 */,0x21c26 /* 2.109960 */,0x313f9 /* 3.078021 */,0x47219 /* 4.445697 */,0x65ce7 /* 6.362909 */,0x9082c /* 9.031922 */,0xcb984 /* 12.724677 */,0x11ce3d /* 17.805619 */,0x18c301 /* 24.761735 */,0x223df3 /* 34.241990 */,0x2f1bea /* 47.109042 */,0x4081c6 /* 64.506928 */,0x57f316 /* 87.949557 */,0x776fad /* 119.436234 */,0xa19a2e /* 161.602273 */,0xd9ea47 /* 217.915148 */,0x124edfb /* 292.929619 */,0x1889e86 /* 392.619240 */,0x20cce80 /* 524.806645 */,0x2bbb8b4 /* 699.721497 */};
static const fix16_t Util_cvTokHz_c1[33] = {0x39c8 /* 0.225719 */,0x3658 /* 0.212293 */,0x2dde /* 0.179169 */,0x1e1b /* 0.117605 */,0x40a /* 0.015780 */,(-0x2465 /* -0.142178 */),(-0x60a1 /* -0.377466 */),(-0xb7df /* -0.718250 */),(-0x133a8 /* -1.201797 */),(-0x1e092 /* -1.877228 */),(-0x2cf1f /* -2.809077 */),(-0x414f5 /* -4.081867 */),(-0x5ce56 /* -5.806008 */),(-0x82018 /* -8.125373 */),(-0xb3a1e /* -11.227028 */),(-0xf5a8c /* -15.353705 */),(-0x14d1de /* -20.819795 */),(-0x1c0823 /* -28.031798 */),(-0x2583b6 /* -37.514503 */),(-0x31f1c5 /* -49.944414 */),(-0x423144 /* -66.192449 */),(-0x5760df /* -87.378404 */),(-0x72f0bd /* -114.940396 */),(-0x96b92c /* -150.723337 */),(-0xc51772 /* -197.091584 */),(-0x1011281 /* -257.072284 */),(-0x14e89a4 /* -334.537674 */),(-0x1b26fd1 /* -434.436788 */),(-0x23316fe /* -563.089817 */),(-0x2d88fd5 /* -728.561858 */),(-0x3ad2323 /* -941.137258 */),(-0x4bdebdc /* -1213.921328 */),(-0x61b9a72 /* -1563.603302 */)};
static const fix16_t Util_cvTokHz_c2[33] = {0xe057 /* 0.876338 */,0x11699 /* 1.088287 */,0x159fb /* 1.351498 */,0x1ada9 /* 1.678368 */,0x21594 /* 2.084294 */,0x296a1 /* 2.588397 */,0x336e4 /* 3.214421 */,0x3fdea /* 3.991854 */,0x4f512 /* 4.957315 */,0x62801 /* 6.156280 */,0x7a52d /* 7.645225 */,0x97e89 /* 9.494282 */,0xbca61 /* 11.790549 */,0xea466 /* 14.642185 */,0x122efa /* 18.183512 */,0x1694d2 /* 22.581336 */,0x1c0af5 /* 28.042809 */,0x22d33f /* 34.825181 */,0x2b3f77 /* 43.247923 */,0x35b530 /* 53.707771 */,0x42b289 /* 66.697415 */,0x52d426 /* 82.828706 */,0x66dc89 /* 102.861476 */,0x7fbd44 /* 127.739327 */,0x9ea253 /* 158.634081 */,0xc5003f /* 197.000973 */,0xf4a5ae /* 244.647198 */,0x12fd129 /* 303.817033 */,0x1794c2c /* 377.297556 */,0x1d48cc7 /* 468.549918 */,0x245df54 /* 581.872376 */,0x2d29a4e /* 722.602756 */,0x3815eb0 /* 897.369877 */};
fix16_t Util_cvTokHz(fix16_t cv);

typedef struct Tricore__ctx_type_0 {
   uint8_t reset_state;
   fix16_t reset_phase;
   fix16_t rate;
   fix16_t phase;
   uint8_t direction;
   Util__ctx_type_0 _inst19;
   Util__ctx_type_0 _inst18;
   Util__ctx_type_1 _inst16;
} Tricore__ctx_type_0;

typedef Tricore__ctx_type_0 Tricore_process_type;

void Tricore__ctx_type_0_init(Tricore__ctx_type_0 &_output_);

void Tricore_process_init(Tricore__ctx_type_0 &_output_);

fix16_t Tricore_process(Tricore__ctx_type_0 &_ctx, fix16_t cv, fix16_t reset, fix16_t disable);

typedef Tricore__ctx_type_0 Tricore_noteOn_type;

void Tricore_noteOn_init(Tricore__ctx_type_0 &_output_);

void Tricore_noteOn(Tricore__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Tricore__ctx_type_0 Tricore_noteOff_type;

void Tricore_noteOff_init(Tricore__ctx_type_0 &_output_);

void Tricore_noteOff(Tricore__ctx_type_0 &_ctx, int note, int channel);

typedef Tricore__ctx_type_0 Tricore_controlChange_type;

void Tricore_controlChange_init(Tricore__ctx_type_0 &_output_);

void Tricore_controlChange(Tricore__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Tricore__ctx_type_0 Tricore_default_type;

void Tricore_default_init(Tricore__ctx_type_0 &_output_);

void Tricore_default(Tricore__ctx_type_0 &_ctx);



#endif // TRICORE_H

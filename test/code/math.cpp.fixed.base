
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "math.h"

fix16_t Math_sin(fix16_t x0){
   fix16_t x1 = (x0 % 0x6487e /* 6.283185 */);
   uint8_t sign = (x1 > 0x3243f /* 3.141593 */);
   fix16_t x2 = (x1 % 0x3243f /* 3.141593 */);
   fix16_t x3;
   uint8_t _cond_2 = (x2 > 0x1921f /* 1.570796 */);
   if(_cond_2){ x3 = fix_add(0x3243f /* 3.141593 */,(- x2)); }
   else
   { x3 = x2; }
   fix16_t xp2 = fix_mul(x3,x3);
   fix16_t acc = fix_mul(x3,fix_add(0x10000 /* 1.000000 */,fix_mul(fix_add((-0x2aaa /* -0.166667 */),fix_mul(0x222 /* 0.008333 */,xp2)),xp2)));
   fix16_t _if_1;
   if(sign){ _if_1 = (- acc); }
   else
   { _if_1 = acc; }
   return _if_1;
}

fix16_t Math_cos(fix16_t x0){
   return Math_sin(fix_add(x0,0x1921f /* 1.570796 */));
}

fix16_t Math_tanh(fix16_t xx){
   uint8_t positive = (xx > 0x0 /* 0.000000 */);
   fix16_t x;
   if(positive){ x = xx; }
   else
   { x = (- xx); }
   fix16_t y;
   int n = 0;
   while((x > 0x10000 /* 1.000000 */)){
      x = fix_mul(x,0x8000 /* 0.500000 */);
      n = (n + 1);
   }
   y = fix_add((-0x10c /* -0.004093 */),fix_mul(x,fix_add(0x10abb /* 1.041927 */,fix_mul(x,fix_add((-0x311d /* -0.191854 */),fix_mul(x,fix_add(0x2f8f /* 0.185782 */,fix_mul(x,fix_add((-0xebbf /* -0.920885 */),fix_mul(x,fix_add(0x13f59 /* 1.247464 */,fix_mul(x,fix_add((-0xea90 /* -0.916265 */),fix_mul(x,fix_add(0x6dcc /* 0.428905 */,fix_mul(x,fix_add((-0x221b /* -0.133237 */),fix_mul(x,fix_add(0x6e2 /* 0.026896 */,fix_mul(fix_add((-0xd3 /* -0.003220 */),fix_mul(0xb /* 0.000175 */,x)),x))))))))))))))))))));
   while((n > 0)){
      y = fix_div(fix_mul(0x20000 /* 2.000000 */,y),fix_add(0x10000 /* 1.000000 */,fix_mul(y,y)));
      n = (n + (-1));
   }
   fix16_t _if_3;
   if(positive){ _if_3 = y; }
   else
   { _if_3 = (- y); }
   return _if_3;
}

fix16_t Math_tan(fix16_t x){
   fix16_t xp2 = fix_mul(x,x);
   return fix_mul(x,fix_add(0x10000 /* 1.000000 */,fix_mul(xp2,fix_add(0x5555 /* 0.333333 */,fix_mul(xp2,fix_add(0x2222 /* 0.133333 */,fix_mul(xp2,fix_add(0xdd0 /* 0.053968 */,fix_mul(xp2,fix_add(0x599 /* 0.021869 */,fix_mul(0x244 /* 0.008863 */,xp2)))))))))));
}

fix16_t Math_exp(fix16_t x){
   fix16_t acc = fix_add((-0x434 /* -0.016426 */),fix_mul(0x35 /* 0.000821 */,x));
   acc = fix_add(0x2aae /* 0.166727 */,fix_mul(x,acc));
   acc = fix_add((-0xf8bb /* -0.971617 */),fix_mul(x,acc));
   acc = fix_add(0x3c4f2 /* 3.769326 */,fix_mul(x,acc));
   acc = fix_add((-0x91456 /* -9.079441 */),fix_mul(x,acc));
   acc = fix_add(0xf0936 /* 15.035982 */,fix_mul(x,acc));
   acc = fix_add((-0xc33cc /* -12.202340 */),fix_mul(x,acc));
   acc = fix_add(0x64aec /* 6.292668 */,fix_mul(x,acc));
   return acc;
}



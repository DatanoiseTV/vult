
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef PHD_H
#define PHD_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Util__ctx_type_0 {
   uint8_t pre;
} Util__ctx_type_0;

typedef Util__ctx_type_0 Util_edge_type;

void Util__ctx_type_0_init(Util__ctx_type_0 &_output_);

void Util_edge_init(Util__ctx_type_0 &_output_);

uint8_t Util_edge(Util__ctx_type_0 &_ctx, uint8_t x);

typedef struct Util__ctx_type_1 {
   float pre_x;
} Util__ctx_type_1;

typedef Util__ctx_type_1 Util_change_type;

void Util__ctx_type_1_init(Util__ctx_type_1 &_output_);

void Util_change_init(Util__ctx_type_1 &_output_);

uint8_t Util_change(Util__ctx_type_1 &_ctx, float x);

float Util_map(float x, float x0, float x1, float y0, float y1);

typedef struct Util__ctx_type_3 {
   float y1;
   float x1;
} Util__ctx_type_3;

typedef Util__ctx_type_3 Util_dcblock_type;

void Util__ctx_type_3_init(Util__ctx_type_3 &_output_);

void Util_dcblock_init(Util__ctx_type_3 &_output_);

float Util_dcblock(Util__ctx_type_3 &_ctx, float x0);

typedef struct Util__ctx_type_4 {
   float x;
} Util__ctx_type_4;

typedef Util__ctx_type_4 Util_smooth_type;

void Util__ctx_type_4_init(Util__ctx_type_4 &_output_);

void Util_smooth_init(Util__ctx_type_4 &_output_);

float Util_smooth(Util__ctx_type_4 &_ctx, float input);

typedef struct Util__ctx_type_5 {
   float x0;
} Util__ctx_type_5;

typedef Util__ctx_type_5 Util_average2_type;

void Util__ctx_type_5_init(Util__ctx_type_5 &_output_);

void Util_average2_init(Util__ctx_type_5 &_output_);

float Util_average2(Util__ctx_type_5 &_ctx, float x1);

float Util_cubic_clipper(float x);

static const float Util_pitchToRate_1024_c0[33] = {0.1898417f,0.1913259f,0.1986886f,0.2194246f,0.2656772f,0.3564378f,0.5206507f,0.8015597f,1.2627581f,1.9965621f,3.135544f,4.8683456f,7.4612795f,11.2877251f,16.8680071f,24.9233293f,36.4485185f,52.8098903f,75.8766039f,108.1965793f,153.2316185f,215.6710565f,301.8494285f,420.3017178f,582.500346f,803.8319419f,1104.890093f,1513.1840318f,2065.3942521f,2810.3465753f,3812.9290693f,5159.2451728f,6963.3862256f};
static const float Util_pitchToRate_1024_c1[33] = {0.0109134f,0.0101758f,0.0083338f,0.004867f,-0.0009394f,-0.0100609f,-0.0238203f,-0.0440021f,-0.0730021f,-0.1140249f,-0.1713405f,-0.2506214f,-0.3593814f,-0.5075483f,-0.7082084f,-0.9785757f,-1.3412496f,-1.8258479f,-2.4711225f,-3.3277005f,-4.4616308f,-5.9589702f,-7.9317091f,-10.5254219f,-13.9291388f,-18.3880749f,-24.2200334f,-31.8365325f,-41.7699993f,-54.7087564f,-71.5420103f,-93.4176738f,-121.8166481f};
static const float Util_pitchToRate_1024_c2[33] = {0.0003556f,0.0004472f,0.0005624f,0.0007073f,0.0008895f,0.0011187f,0.0014069f,0.0017694f,0.0022253f,0.0027986f,0.0035197f,0.0044265f,0.005567f,0.0070013f,0.0088052f,0.0110738f,0.013927f,0.0175152f,0.022028f,0.0277035f,0.0348413f,0.043818f,0.0551077f,0.0693061f,0.0871628f,0.1096201f,0.1378636f,0.173384f,0.2180562f,0.2742381f,0.3448952f,0.4337571f,0.5455141f};
float Util_pitchToRate_1024(float pitch);

static const float Util_pitchToRate_c0[33] = {0.0001854f,0.0001869f,0.0001941f,0.0002143f,0.0002595f,0.0003481f,0.0005085f,0.0007828f,0.0012332f,0.0019498f,0.0030621f,0.0047543f,0.0072865f,0.0110232f,0.0164727f,0.0243392f,0.0355943f,0.0515722f,0.0740983f,0.1056608f,0.1496403f,0.2106163f,0.2947749f,0.4104509f,0.568848f,0.7849922f,1.0789943f,1.4777188f,2.0169866f,2.7444791f,3.7235636f,5.0383254f,6.8001819f};
static const float Util_pitchToRate_c1[33] = {1.07e-05f,1e-05f,8.2e-06f,4.8e-06f,-9e-07f,-9.8e-06f,-2.32e-05f,-4.29e-05f,-7.12e-05f,-0.0001113f,-0.0001673f,-0.0002447f,-0.0003509f,-0.0004956f,-0.0006916f,-0.0009556f,-0.0013098f,-0.001783f,-0.0024132f,-0.0032497f,-0.004357f,-0.0058193f,-0.0077458f,-0.0102787f,-0.0136026f,-0.0179571f,-0.0236523f,-0.0310903f,-0.040791f,-0.0534265f,-0.0698652f,-0.0912281f,-0.1189615f};
static const float Util_pitchToRate_c2[33] = {4e-07f,5e-07f,6e-07f,7e-07f,9e-07f,1.1e-06f,1.4e-06f,1.8e-06f,2.2e-06f,2.8e-06f,3.5e-06f,4.4e-06f,5.5e-06f,6.9e-06f,8.6e-06f,1.09e-05f,1.37e-05f,1.72e-05f,2.16e-05f,2.71e-05f,3.41e-05f,4.28e-05f,5.39e-05f,6.77e-05f,8.52e-05f,0.0001071f,0.0001347f,0.0001694f,0.000213f,0.0002679f,0.0003369f,0.0004236f,0.0005328f};
float Util_pitchToRate(float pitch);

float Util_cvToPitch(float cv);

static const float Util_cvToRate_1024_c0[33] = {0.7593668f,0.7628769f,0.7797366f,0.8256516f,0.9246484f,1.1123985f,1.4406875f,1.9833925f,2.8444342f,4.1683106f,6.1539936f,9.073195f,13.2942978f,19.3136143f,27.7961018f,39.6282634f,55.9867165f,78.4268778f,108.9974326f,150.3878036f,206.1177981f,280.7810906f,380.3573327f,512.6116485f,687.6052678f,918.3473603f,1221.6260803f,1619.0668426f,2138.4784521f,2815.5635571f,3696.0898222f,4838.643251f,6318.1165156f};
static const float Util_cvToRate_1024_c1[33] = {5.2455831f,4.9989426f,4.4030893f,3.3191161f,1.5644968f,-1.0992562f,-4.9822262f,-10.4858642f,-18.1279556f,-28.574102f,-42.6773652f,-61.5281299f,-86.516746f,-119.4121434f,-162.4603915f,-218.5081483f,-291.1571467f,-384.9573613f,-505.6483473f,-660.4605419f,-858.49116f,-1111.1728348f,-1432.8575168f,-1841.543534f,-2359.7803917f,-3015.7941424f,-3844.8863585f,-4891.1723528f,-6209.7398756f,-7869.328765f,-9955.6558052f,-12575.5383972f,-15862.0068819f};
static const float Util_cvToRate_1024_c2[33] = {20.1255919f,24.4575724f,29.7220002f,36.1195823f,43.8942271f,53.3423435f,64.8241421f,78.7773676f,95.733988f,116.3404762f,141.3824565f,171.814657f,208.7973083f,253.7403777f,308.3573241f,374.730424f,455.3901585f,553.4116878f,672.5320926f,817.29285f,993.2129783f,1206.9994498f,1466.8028948f,1782.5283455f,2166.212866f,2632.4844665f,3199.1197981f,3887.7218889f,4724.5437618f,5741.4893336f,6977.329755f,8479.1815645f,10304.3030111f};
float Util_cvToRate_1024(float cv);

static const float Util_cvToRate_c0[129] = {0.0007416f,0.0007417f,0.0007419f,0.0007423f,0.0007431f,0.0007445f,0.0007466f,0.0007495f,0.0007536f,0.000759f,0.000766f,0.0007749f,0.000786f,0.0007997f,0.0008163f,0.0008364f,0.0008604f,0.0008888f,0.0009222f,0.0009614f,0.0010069f,0.0010596f,0.0011203f,0.00119f,0.0012697f,0.0013604f,0.0014635f,0.0015802f,0.001712f,0.0018604f,0.0020271f,0.0022141f,0.0024232f,0.0026568f,0.0029171f,0.0032067f,0.0035283f,0.0038851f,0.0042802f,0.0047172f,0.0051998f,0.0057321f,0.0063187f,0.0069642f,0.0076738f,0.0084532f,0.0093082f,0.0102454f,0.0112717f,0.0123946f,0.0136222f,0.0149632f,0.0164269f,0.0180234f,0.0197635f,0.0216588f,0.0237217f,0.0259657f,0.0284052f,0.0310556f,0.0339336f,0.0370567f,0.0404443f,0.0441167f,0.0480959f,0.0524055f,0.0570705f,0.0621181f,0.0675771f,0.0734786f,0.0798558f,0.0867441f,0.0941815f,0.1022089f,0.1108697f,0.1202104f,0.1302809f,0.1411344f,0.1528279f,0.1654223f,0.1789825f,0.1935781f,0.2092834f,0.2261777f,0.2443458f,0.2638781f,0.2848713f,0.3074285f,0.3316599f,0.357683f,0.3856233f,0.4156144f,0.4477993f,0.4823303f,0.5193697f,0.5590908f,0.6016783f,0.6473293f,0.6962535f,0.7486748f,0.8048318f,0.8649786f,0.929386f,0.9983426f,1.0721558f,1.1511531f,1.2356831f,1.3261173f,1.4228512f,1.5263058f,1.6369296f,1.7551997f,1.8816241f,2.0167435f,2.1611333f,2.3154058f,2.4802125f,2.6562464f,2.8442451f,3.0449928f,3.2593239f,3.4881257f,3.7323419f,3.9929758f,4.2710944f,4.5678321f,4.8843948f,5.2220646f,5.582204f};
static const float Util_cvToRate_c1[129] = {0.0051392f,0.0051263f,0.0050994f,0.0050569f,0.0049975f,0.0049196f,0.0048214f,0.0047011f,0.0045567f,0.0043863f,0.0041874f,0.0039577f,0.0036947f,0.0033955f,0.0030572f,0.0026766f,0.0022504f,0.001775f,0.0012464f,0.0006606f,1.32e-05f,-0.0007005f,-0.0014856f,-0.0023473f,-0.0032914f,-0.0043239f,-0.0054514f,-0.0066807f,-0.0080191f,-0.0094747f,-0.0110556f,-0.0127708f,-0.0146297f,-0.0166425f,-0.0188198f,-0.0211731f,-0.0237146f,-0.0264571f,-0.0294143f,-0.032601f,-0.0360326f,-0.0397257f,-0.0436977f,-0.0479675f,-0.0525547f,-0.0574805f,-0.0627673f,-0.0684387f,-0.0745201f,-0.0810382f,-0.0880216f,-0.0955003f,-0.1035065f,-0.1120742f,-0.1212396f,-0.1310409f,-0.1415188f,-0.1527165f,-0.1646796f,-0.1774569f,-0.1910996f,-0.2056624f,-0.2212032f,-0.2377833f,-0.2554678f,-0.2743257f,-0.29443f,-0.3158582f,-0.3386924f,-0.3630195f,-0.3889319f,-0.416527f,-0.4459084f,-0.4771857f,-0.510475f,-0.5458991f,-0.5835884f,-0.6236806f,-0.6663219f,-0.7116669f,-0.7598792f,-0.8111321f,-0.8656092f,-0.9235045f,-0.9850238f,-1.0503845f,-1.1198169f,-1.1935646f,-1.2718857f,-1.3550528f,-1.4433547f,-1.5370969f,-1.6366025f,-1.7422134f,-1.8542912f,-1.9732184f,-2.0993997f,-2.233263f,-2.3752609f,-2.5258721f,-2.6856026f,-2.8549877f,-3.0345935f,-3.2250182f,-3.4268945f,-3.6408914f,-3.867716f,-4.1081157f,-4.3628809f,-4.6328468f,-4.9188962f,-5.2219624f,-5.5430316f,-5.883146f,-6.2434073f,-6.6249794f,-7.0290924f,-7.4570461f,-7.9102138f,-8.3900467f,-8.898078f,-9.4359272f,-10.0053059f,-10.6080216f,-11.2459841f,-11.9212107f,-12.6358324f,-13.3921f,-14.1923907f};
static const float Util_cvToRate_c2[129] = {0.0182549f,0.0191666f,0.0201238f,0.0211289f,0.0221841f,0.0232921f,0.0244554f,0.0256768f,0.0269592f,0.0283057f,0.0297194f,0.0312037f,0.0327621f,0.0343984f,0.0361164f,0.0379202f,0.0398141f,0.0418025f,0.0438903f,0.0460824f,0.0483839f,0.0508004f,0.0533376f,0.0560015f,0.0587984f,0.061735f,0.0648183f,0.0680556f,0.0714546f,0.0750233f,0.0787703f,0.0827044f,0.086835f,0.0911719f,0.0957254f,0.1005063f,0.105526f,0.1107964f,0.11633f,0.12214f,0.1282402f,0.134645f,0.1413697f,0.1484303f,0.1558435f,0.163627f,0.1717992f,0.1803795f,0.1893884f,0.1988473f,0.2087785f,0.2192058f,0.2301538f,0.2416486f,0.2537175f,0.2663892f,0.2796938f,0.2936628f,0.3083295f,0.3237288f,0.3398971f,0.356873f,0.3746966f,0.3934105f,0.413059f,0.4336889f,0.4553491f,0.4780911f,0.5019689f,0.5270393f,0.5533618f,0.5809989f,0.6100164f,0.6404831f,0.6724714f,0.7060574f,0.7413208f,0.7783454f,0.8172191f,0.8580344f,0.9008881f,0.9458821f,0.9931234f,1.042724f,1.0948019f,1.1494808f,1.2068905f,1.2671676f,1.3304551f,1.3969035f,1.4666705f,1.539922f,1.616832f,1.6975832f,1.7823675f,1.8713862f,1.9648508f,2.0629835f,2.1660173f,2.2741971f,2.3877798f,2.5070353f,2.6322469f,2.763712f,2.9017431f,3.046668f,3.198831f,3.3585937f,3.5263356f,3.7024552f,3.8873709f,4.0815221f,4.28537f,4.4993989f,4.7241173f,4.960059f,5.2077846f,5.4678826f,5.740971f,6.0276986f,6.3287465f,6.6448299f,6.9766999f,7.3251448f,7.6909924f,8.075112f,8.4784161f,8.9018628f,9.3464582f};
float Util_cvToRate(float cv);

float Util_pitchToCv(float pitch);

static const float Util_cvToperiod_c0[33] = {674.2460348f,671.5538378f,662.7617819f,646.759522f,623.7994278f,594.871802f,561.2982769f,524.4769422f,485.7313693f,446.2293824f,406.9474404f,368.6637744f,331.9686831f,297.2841558f,264.8876665f,234.9368568f,207.4931244f,182.5430159f,160.0169068f,139.8048318f,121.7695566f,105.757117f,91.6051156f,79.1490884f,68.227249f,58.6838946f,50.3717336f,43.153355f,36.902033f,31.5020248f,26.8484943f,22.8471657f,19.4137945f};
static const float Util_cvToperiod_c1[33] = {-4656.6563108f,-4481.960579f,-4198.6861325f,-3855.7515427f,-3487.1394548f,-3115.8588213f,-2756.9303187f,-2419.6251411f,-2109.1347532f,-1827.8083337f,-1576.062963f,-1353.0470918f,-1157.1188644f,-986.1862501f,-837.9446649f,-710.0391128f,-600.1712335f,-506.1665656f,-426.0134627f,-357.8821512f,-300.1301898f,-251.2989043f,-210.1041049f,-175.4234501f,-146.2821135f,-121.837895f,-101.3665365f,-84.2477263f,-69.9520817f,-58.0292593f,-48.0972479f,-39.8328333f,-32.9631861f};
static const float Util_cvToperiod_c2[33] = {14548.8231621f,11715.3695219f,9433.7446751f,7596.4772967f,6117.0266216f,4925.7061172f,3966.4010399f,3193.9252637f,2571.8928791f,2071.0043083f,1667.666208f,1342.8801524f,1081.3477513f,870.7500494f,701.1672681f,564.6115532f,454.6507239f,366.1052976f,294.8045211f,237.3899156f,191.157082f,153.9283162f,123.9500325f,99.8101645f,80.3716525f,64.7188847f,52.114569f,41.9650048f,33.7921173f,27.2109391f,21.9114772f,17.6441111f,14.2078352f};
float Util_cvToperiod(float cv);

static const float Util_cvTokHz_c0[33] = {0.0327032f,0.0329158f,0.0339579f,0.0368567f,0.0432422f,0.055616f,0.0777238f,0.115069f,0.1756143f,0.2707394f,0.4165374f,0.6355669f,0.9592072f,1.4308178f,2.1099596f,3.078021f,4.4456974f,6.3629088f,9.0319219f,12.7246767f,17.805619f,24.7617347f,34.2419904f,47.1090422f,64.5069279f,87.9495574f,119.436234f,161.6022735f,217.9151479f,292.9296186f,392.6192398f,524.8066449f,699.7214972f};
static const float Util_cvTokHz_c1[33] = {0.2257192f,0.2122933f,0.1791694f,0.117605f,0.0157802f,-0.142178f,-0.3774662f,-0.7182503f,-1.2017969f,-1.8772284f,-2.8090773f,-4.0818673f,-5.8060081f,-8.1253731f,-11.2270275f,-15.3537053f,-20.8197945f,-28.0317982f,-37.5145028f,-49.9444141f,-66.1924493f,-87.3784044f,-114.9403964f,-150.7233371f,-197.0915838f,-257.0722838f,-334.5376738f,-434.4367882f,-563.0898166f,-728.5618575f,-941.1372579f,-1213.9213282f,-1563.603302f};
static const float Util_cvTokHz_c2[33] = {0.8763378f,1.088287f,1.3514976f,1.6783679f,2.0842943f,2.5883971f,3.2144212f,3.991854f,4.9573151f,6.1562805f,7.645225f,9.4942823f,11.7905487f,14.642185f,18.1835118f,22.5813362f,28.0428087f,34.8251811f,43.2479231f,53.7077712f,66.6974152f,82.8287061f,102.8614758f,127.7393272f,158.6340814f,197.0009732f,244.6471976f,303.8170335f,377.2975565f,468.549918f,581.872376f,722.6027558f,897.3698773f};
float Util_cvTokHz(float cv);

typedef struct Phase__ctx_type_0 {
   float rate;
   float phase;
   Util__ctx_type_0 _inst25;
   Util__ctx_type_1 _inst23;
} Phase__ctx_type_0;

typedef Phase__ctx_type_0 Phase_process_type;

void Phase__ctx_type_0_init(Phase__ctx_type_0 &_output_);

void Phase_process_init(Phase__ctx_type_0 &_output_);

float Phase_process(Phase__ctx_type_0 &_ctx, float cv, float reset);

typedef Phase__ctx_type_0 Phase_noteOn_type;

void Phase_noteOn_init(Phase__ctx_type_0 &_output_);

void Phase_noteOn(Phase__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Phase__ctx_type_0 Phase_noteOff_type;

void Phase_noteOff_init(Phase__ctx_type_0 &_output_);

void Phase_noteOff(Phase__ctx_type_0 &_ctx, int note, int channel);

typedef Phase__ctx_type_0 Phase_controlChange_type;

void Phase_controlChange_init(Phase__ctx_type_0 &_output_);

void Phase_controlChange(Phase__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Phase__ctx_type_0 Phase_default_type;

void Phase_default_init(Phase__ctx_type_0 &_output_);

void Phase_default(Phase__ctx_type_0 &_ctx);

static const float Tables_nsine_c0[129] = {-0.f,-5.9e-05f,-0.0002943f,-0.0008206f,-0.0017482f,-0.0031817f,-0.0052181f,-0.0079453f,-0.0114405f,-0.0157689f,-0.020982f,-0.0271169f,-0.0341943f,-0.0422181f,-0.0511738f,-0.061028f,-0.0717278f,-0.0831993f,-0.0953483f,-0.1080587f,-0.1211932f,-0.1345928f,-0.1480768f,-0.1614433f,-0.1744692f,-0.186911f,-0.1985054f,-0.2089699f,-0.218004f,-0.2252904f,-0.2304958f,-0.2332728f,-0.2332612f,-0.2300896f,-0.2233773f,-0.2127363f,-0.197773f,-0.1780907f,-0.1532916f,-0.122979f,-0.0867602f,-0.0442482f,0.0049352f,0.0611569f,0.1247704f,0.1961126f,0.2755014f,0.3632331f,0.4595799f,0.5647871f,0.6790705f,0.8026144f,0.9355685f,1.0780459f,1.230121f,1.3918269f,1.5631537f,1.7440465f,1.9344036f,2.1340748f,2.3428599f,2.5605077f,2.7867145f,3.0211234f,3.2633234f,3.5128493f,3.7691807f,4.0317427f,4.2999053f,4.5729845f,4.8502422f,5.1308878f,5.4140787f,5.698922f,5.984476f,6.2697522f,6.5537169f,6.8352944f,7.1133686f,7.3867869f,7.6543621f,7.9148768f,8.167086f,8.4097215f,8.6414953f,8.8611041f,9.0672334f,9.2585621f,9.433767f,9.5915276f,9.7305311f,9.8494774f,9.9470842f,10.0220922f,10.0732703f,10.0994211f,10.0993863f,10.0720517f,10.0163531f,9.9312811f,9.8158869f,9.6692872f,9.4906693f,9.2792966f,9.0345129f,8.7557476f,8.4425203f,8.0944449f,7.7112342f,7.2927034f,6.8387746f,6.3494795f,5.824963f,5.2654862f,4.6714286f,4.0432908f,3.3816961f,2.6873922f,1.9612525f,1.2042765f,0.4175907f,-0.3975519f,-1.2397716f,-2.1075637f,-2.9992988f,-3.9132254f,-4.8474712f,-5.8000465f,-6.7688468f};
static const float Tables_nsine_c1[129] = {6.2844467f,6.2995637f,6.3296884f,6.3746026f,6.4339801f,6.5073881f,6.5942887f,6.6940414f,6.8059055f,6.9290429f,7.0625219f,7.2053206f,7.3563313f,7.5143648f,7.6781557f,7.8463667f,8.0175952f,8.1903781f,8.3631986f,8.5344919f,8.7026522f,8.8660392f,9.0229852f,9.1718019f,9.3107879f,9.438236f,9.5524404f,9.6517044f,9.7343479f,9.7987148f,9.8431806f,9.8661598f,9.8661134f,9.8415559f,9.7910627f,9.7132771f,9.606917f,9.4707818f,9.3037583f,9.1048274f,8.8730696f,8.6076708f,8.3079275f,7.9732517f,7.6031754f,7.1973551f,6.7555752f,6.2777517f,5.7639349f,5.2143124f,4.6292105f,4.0090964f,3.3545791f,2.6664101f,1.9454836f,1.192836f,0.4096453f,-0.40277f,-1.2429534f,-2.109312f,-3.0001195f,-3.9135197f,-4.8475302f,-5.8000465f,-6.7688468f,-7.751597f,-8.7458569f,-9.7490855f,-10.758648f,-11.7718225f,-12.7858071f,-13.797728f,-14.8046468f,-15.8035692f,-16.7914537f,-17.7652201f,-18.7217587f,-19.65794f,-20.5706235f,-21.4566682f,-22.3129418f,-23.1363312f,-23.9237521f,-24.672159f,-25.3785559f,-26.0400058f,-26.653641f,-27.2166732f,-27.726403f,-28.18023f,-28.5756623f,-28.9103255f,-29.1819726f,-29.388492f,-29.5279169f,-29.5984329f,-29.5983864f,-29.5262921f,-29.3808399f,-29.1609018f,-28.8655382f,-28.4940037f,-28.0457523f,-27.5204425f,-26.9179409f,-26.2383266f,-25.4818941f,-24.6491554f,-23.7408426f,-22.7579086f,-21.7015283f,-20.5730983f,-19.3742364f,-18.1067802f,-16.7727856f,-15.3745239f,-13.9144786f,-12.395342f,-10.8200099f,-9.1915772f,-7.5133319f,-5.7887484f,-4.021481f,-2.215356f,-0.3743635f,1.4973512f,3.395497f,5.3156465f,7.253247f};
static const float Tables_nsine_c2[129] = {-0.4844001f,-1.4520333f,-2.4161685f,-3.374483f,-4.324668f,-5.2644345f,-6.1915185f,-7.1036866f,-7.9987413f,-8.8745264f,-9.7289319f,-10.5598996f,-11.3654275f,-12.1435752f,-12.8924679f,-13.6103015f,-14.2953467f,-14.9459532f,-15.5605535f,-16.1376672f,-16.6759037f,-17.1739666f,-17.6306559f,-18.0448713f,-18.4156151f,-18.7419941f,-19.023222f,-19.2586212f,-19.4476248f,-19.5897773f,-19.6847363f,-19.7322731f,-19.7322731f,-19.6847363f,-19.5897773f,-19.4476248f,-19.2586212f,-19.023222f,-18.7419941f,-18.4156151f,-18.0448713f,-17.6306559f,-17.1739666f,-16.6759037f,-16.1376672f,-15.5605535f,-14.9459532f,-14.2953467f,-13.6103015f,-12.8924679f,-12.1435752f,-11.3654275f,-10.5598996f,-9.7289319f,-8.8745264f,-7.9987413f,-7.1036866f,-6.1915185f,-5.2644345f,-4.324668f,-3.374483f,-2.4161685f,-1.4520333f,-0.4844001f,0.4844002f,1.4520334f,2.4161686f,3.3744831f,4.3246681f,5.2644346f,6.1915186f,7.1036867f,7.9987414f,8.8745265f,9.728932f,10.5598997f,11.3654276f,12.1435753f,12.892468f,13.6103016f,14.2953468f,14.9459533f,15.5605536f,16.1376673f,16.6759038f,17.1739667f,17.630656f,18.0448714f,18.4156152f,18.7419942f,19.0232221f,19.2586213f,19.4476249f,19.5897774f,19.6847364f,19.7322732f,19.7322732f,19.6847364f,19.5897774f,19.4476249f,19.2586213f,19.0232221f,18.7419942f,18.4156152f,18.0448714f,17.630656f,17.1739667f,16.6759038f,16.1376673f,15.5605536f,14.9459533f,14.2953468f,13.6103016f,12.892468f,12.1435753f,11.3654276f,10.5598997f,9.728932f,8.8745265f,7.9987414f,7.1036867f,6.1915186f,5.2644346f,4.3246681f,3.3744831f,2.4161686f,1.4520334f,0.4844002f,-0.4844001f};
float Tables_nsine(float x);

typedef struct Phd__ctx_type_0 {
   float pre_phase1;
   Phase__ctx_type_0 _inst37;
   Util__ctx_type_4 _inst36;
   Phase__ctx_type_0 _inst35;
} Phd__ctx_type_0;

typedef Phd__ctx_type_0 Phd_process_type;

void Phd__ctx_type_0_init(Phd__ctx_type_0 &_output_);

void Phd_process_init(Phd__ctx_type_0 &_output_);

float Phd_process(Phd__ctx_type_0 &_ctx, float cv, float detune);

typedef Phd__ctx_type_0 Phd_noteOn_type;

void Phd_noteOn_init(Phd__ctx_type_0 &_output_);

void Phd_noteOn(Phd__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Phd__ctx_type_0 Phd_noteOff_type;

void Phd_noteOff_init(Phd__ctx_type_0 &_output_);

void Phd_noteOff(Phd__ctx_type_0 &_ctx, int note, int channel);

typedef Phd__ctx_type_0 Phd_controlChange_type;

void Phd_controlChange_init(Phd__ctx_type_0 &_output_);

void Phd_controlChange(Phd__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Phd__ctx_type_0 Phd_default_type;

void Phd_default_init(Phd__ctx_type_0 &_output_);

void Phd_default(Phd__ctx_type_0 &_ctx);



#endif // PHD_H

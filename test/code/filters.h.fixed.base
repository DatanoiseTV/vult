#ifndef FILTERS_H
#define FILTERS_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

int32_t Filters_pi();

int32_t Filters_min(int32_t a, int32_t b);

int32_t Filters_max(int32_t a, int32_t b);

int32_t Filters_clip(int32_t low, int32_t high, int32_t value);

typedef struct Filters__ctx_type_4 {
   int32_t pre_x;
} Filters__ctx_type_4;

typedef Filters__ctx_type_4 Filters_change_type;

Filters__ctx_type_4 Filters__ctx_type_4_init();

Filters__ctx_type_4 Filters_change_init();

uint8_t Filters_change(Filters__ctx_type_4 &_ctx, int32_t x);

typedef struct Filters__ctx_type_5 {
   int32_t w2;
   int32_t w1;
} Filters__ctx_type_5;

typedef Filters__ctx_type_5 Filters_biquad_type;

Filters__ctx_type_5 Filters__ctx_type_5_init();

Filters__ctx_type_5 Filters_biquad_init();

int32_t Filters_biquad(Filters__ctx_type_5 &_ctx, int32_t x, int32_t b0, int32_t b1, int32_t b2, int32_t a1, int32_t a2);

typedef struct Filters__ctx_type_6 {
   int32_t k;
   int32_t fc;
   Filters__ctx_type_5 _inst1;
   Filters__ctx_type_4 _inst0;
} Filters__ctx_type_6;

typedef Filters__ctx_type_6 Filters_lp6_type;

Filters__ctx_type_6 Filters__ctx_type_6_init();

Filters__ctx_type_6 Filters_lp6_init();

int32_t Filters_lp6(Filters__ctx_type_6 &_ctx, int32_t x, int32_t fc);

typedef struct Filters__ctx_type_7 {
   int32_t b2;
   int32_t b1;
   int32_t b0;
   int32_t a2;
   int32_t a1;
   Filters__ctx_type_5 _inst2;
   Filters__ctx_type_4 _inst1;
   Filters__ctx_type_4 _inst0;
} Filters__ctx_type_7;

typedef Filters__ctx_type_7 Filters_lp12_type;

Filters__ctx_type_7 Filters__ctx_type_7_init();

Filters__ctx_type_7 Filters_lp12_init();

int32_t Filters_lp12(Filters__ctx_type_7 &_ctx, int32_t x, int32_t fc, int32_t q);

typedef struct Filters__ctx_type_8 {
   Filters__ctx_type_5 _inst0;
} Filters__ctx_type_8;

typedef Filters__ctx_type_8 Filters_hp6_type;

Filters__ctx_type_8 Filters__ctx_type_8_init();

Filters__ctx_type_8 Filters_hp6_init();

int32_t Filters_hp6(Filters__ctx_type_8 &_ctx, int32_t x, int32_t fc);

typedef struct Filters__ctx_type_9 {
   Filters__ctx_type_5 _inst0;
} Filters__ctx_type_9;

typedef Filters__ctx_type_9 Filters_allp6_type;

Filters__ctx_type_9 Filters__ctx_type_9_init();

Filters__ctx_type_9 Filters_allp6_init();

int32_t Filters_allp6(Filters__ctx_type_9 &_ctx, int32_t x, int32_t fc);

typedef struct Filters__ctx_type_10 {
   int32_t b2;
   int32_t b1;
   int32_t b0;
   int32_t a2;
   int32_t a1;
   Filters__ctx_type_5 _inst2;
   Filters__ctx_type_4 _inst1;
   Filters__ctx_type_4 _inst0;
} Filters__ctx_type_10;

typedef Filters__ctx_type_10 Filters_hp12_type;

Filters__ctx_type_10 Filters__ctx_type_10_init();

Filters__ctx_type_10 Filters_hp12_init();

int32_t Filters_hp12(Filters__ctx_type_10 &_ctx, int32_t x, int32_t fc, int32_t q);

typedef struct Filters__ctx_type_11 {
   int32_t b2;
   int32_t b1;
   int32_t b0;
   int32_t a2;
   int32_t a1;
   Filters__ctx_type_5 _inst2;
   Filters__ctx_type_4 _inst1;
   Filters__ctx_type_4 _inst0;
} Filters__ctx_type_11;

typedef Filters__ctx_type_11 Filters_bp12_type;

Filters__ctx_type_11 Filters__ctx_type_11_init();

Filters__ctx_type_11 Filters_bp12_init();

int32_t Filters_bp12(Filters__ctx_type_11 &_ctx, int32_t x, int32_t fc, int32_t q);

typedef struct Filters__ctx_type_12 {
   int32_t b2;
   int32_t b1;
   int32_t b0;
   int32_t a2;
   int32_t a1;
   Filters__ctx_type_5 _inst2;
   Filters__ctx_type_4 _inst1;
   Filters__ctx_type_4 _inst0;
} Filters__ctx_type_12;

typedef Filters__ctx_type_12 Filters_notch12_type;

Filters__ctx_type_12 Filters__ctx_type_12_init();

Filters__ctx_type_12 Filters_notch12_init();

int32_t Filters_notch12(Filters__ctx_type_12 &_ctx, int32_t x, int32_t fc, int32_t q);

typedef struct Filters__ctx_type_13 {
   int32_t b2;
   int32_t b1;
   int32_t b0;
   int32_t a2;
   int32_t a1;
   Filters__ctx_type_5 _inst2;
   Filters__ctx_type_4 _inst1;
   Filters__ctx_type_4 _inst0;
} Filters__ctx_type_13;

typedef Filters__ctx_type_13 Filters_allp12_type;

Filters__ctx_type_13 Filters__ctx_type_13_init();

Filters__ctx_type_13 Filters_allp12_init();

int32_t Filters_allp12(Filters__ctx_type_13 &_ctx, int32_t x, int32_t fc, int32_t q);



#endif // FILTERS_H

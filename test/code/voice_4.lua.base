
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.pi()              return 3.1415926535897932384; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
function this.Util__ctx_type_0_init()
   local _ctx = {};
   _ctx.pre = false;
   return _ctx;

end

function this.Util_edge_init()
   return this.Util__ctx_type_0_init();
end

function this.Util_edge(_ctx,x)
   local ret = (x and (_ctx.pre == false));
   _ctx.pre = x;
   return ret;

end

function this.Util__ctx_type_1_init()
   local _ctx = {};
   _ctx.pre_x = 0.;
   return _ctx;

end

function this.Util_change_init()
   return this.Util__ctx_type_1_init();
end

function this.Util_change(_ctx,x)
   local v = (_ctx.pre_x ~= x);
   _ctx.pre_x = x;
   return v;

end

function this.Util_map(x,x0,x1,y0,y1)
   return ((((x + (- x0)) * (y1 + (- y0))) / (x1 + (- x0))) + y0);

end

function this.Util__ctx_type_3_init()
   local _ctx = {};
   _ctx.y1 = 0.;
   _ctx.x1 = 0.;
   return _ctx;

end

function this.Util_dcblock_init()
   return this.Util__ctx_type_3_init();
end

function this.Util_dcblock(_ctx,x0)
   local y0 = (x0 + (- _ctx.x1) + (_ctx.y1 * 0.995));
   _ctx.x1 = x0;
   _ctx.y1 = y0;
   return y0;

end

function this.Util__ctx_type_4_init()
   local _ctx = {};
   _ctx.x = 0.;
   return _ctx;

end

function this.Util_smooth_init()
   return this.Util__ctx_type_4_init();
end

function this.Util_smooth(_ctx,input)
   _ctx.x = (_ctx.x + ((input + (- _ctx.x)) * 0.005));
   return _ctx.x;

end

function this.Util__ctx_type_5_init()
   local _ctx = {};
   _ctx.x0 = 0.;
   return _ctx;

end

function this.Util_average2_init()
   return this.Util__ctx_type_5_init();
end

function this.Util_average2(_ctx,x1)
   local result = ((_ctx.x0 + x1) * 0.5);
   _ctx.x0 = x1;
   return result;

end

function this.Util_cubic_clipper(x)
   if (x <= (-0.666666666667)) then
      return (-0.666666666667);

   else

      local _cond_20 = false;
      _cond_20 = (x >= 0.666666666667);
      if _cond_20 then
         return 0.666666666667;

      else

         return (x + ((-0.333333333333) * x * x * x));

      end

   end

end

local Util_pitchToRate_1024_c0 = {0.189841680037,0.191325897588,0.198688508155,0.219424569866,0.26567713111,0.35643778531,0.520650689743,0.801559648679,1.26275806017,1.99656217812,3.13554377292,4.8683467577,7.46128055978,11.2877154635,16.867996304,24.9233048692,36.4485211631,52.8099028605,75.8766156939,108.197224933,153.232414338,215.672343711,301.846625705,420.29803823,582.505177958,803.812128967,1104.88016479,1513.1241264,2065.37395202,2810.23054964,3812.90288799,5159.52558025,6963.76146927};
local Util_pitchToRate_1024_c1 = {0.010913303747,0.0101757584611,0.00833370067546,0.00486693804793,(-0.000939454894394),(-0.0100609504806),(-0.0238203681558),(-0.0440021062837),(-0.0730021843736),(-0.114024950054),(-0.171340524952),(-0.250621463768),(-0.359381478667),(-0.507547848549),(-0.708208140825),(-0.978574790425),(-1.34124969555),(-1.82584797191),(-2.47112251767),(-3.32772084379),(-4.46165827276),(-5.95900581344),(-7.93162553989),(-10.5253117054),(-13.9292124557),(-18.3875875205),(-24.2197854202),(-31.8351508101),(-41.769556586),(-54.7064548238),(-71.5412264293),(-93.4225916399),(-121.823163138)};
local Util_pitchToRate_1024_c2 = {0.000355553647318,0.000447161637289,0.000562372320943,0.000707266905239,0.000889493413582,0.00111867037219,0.0014068945122,0.00176937926494,0.00222525787535,0.00279859310527,0.00351964697344,0.00442648109138,0.00556695817836,0.00700127157795,0.00880514558145,0.0110737757198,0.013926935271,0.01751519419,0.0220279639143,0.0277036097479,0.034841413067,0.0438182632294,0.055107155696,0.0693054512451,0.0871633154559,0.109617337367,0.13786232365,0.173376847616,0.218054168649,0.274226803392,0.344892057084,0.433780087926,0.54554303051};
function this.Util_pitchToRate_1024(pitch)
   local index = this.clip(this.int((0.244094488189 * pitch)),0,31);
   return (Util_pitchToRate_1024_c0[index+1] + (pitch * (Util_pitchToRate_1024_c1[index+1] + (Util_pitchToRate_1024_c2[index+1] * pitch))));

end

local Util_pitchToRate_c0 = {0.000185392265661,0.000186841696863,0.000194031746245,0.000214281806509,0.000259450323349,0.000348083774717,0.000508447939203,0.000782773094413,0.00123316216813,0.00194976775207,0.00306205446575,0.00475424488057,0.00728640679666,0.0110231596324,0.0164726526406,0.0243391649114,0.0355942589483,0.0515721707622,0.0740982575135,0.105661352474,0.149641029627,0.210617523155,0.294772095415,0.410447302959,0.56885271285,0.784972782194,1.07898453592,1.47766027968,2.01696675002,2.74436577113,3.72353797656,5.03859919947,6.80054830983};
local Util_pitchToRate_c1 = {1.06575231905e-05,9.93726412215e-06,8.13837956588e-06,4.75286918743e-06,(-9.17436420307e-07),(-9.82514695372e-06),(-2.32620782771e-05),(-4.29708069177e-05),(-7.12911956773e-05),(-0.000111352490288),(-0.000167324731399),(-0.000244747523211),(-0.00035095847526),(-0.000495652195849),(-0.000691609512524),(-0.000955639443775),(-0.00130981415581),(-0.00178305466006),(-0.00241320558366),(-0.00324972738652),(-0.00435708815699),(-0.00581934161469),(-0.0077457280663),(-0.0102786247123),(-0.0136027465387),(-0.017956628438),(-0.0236521341994),(-0.031089014463),(-0.0407905826035),(-0.0534242722888),(-0.0698644789349),(-0.0912329996483),(-0.118967932752)};
local Util_pitchToRate_c2 = {3.47220358709e-07,4.36681286415e-07,5.49191719671e-07,6.90690337148e-07,8.68645911701e-07,1.09245153534e-06,1.37392042207e-06,1.72790943841e-06,2.1731033939e-06,2.73300107936e-06,3.4371552475e-06,4.3227354408e-06,5.43648259606e-06,6.83717927534e-06,8.59877498188e-06,1.08142341013e-05,1.36005227256e-05,1.71046818262e-05,2.15116835101e-05,2.70543063944e-05,3.40248174482e-05,4.2791272685e-05,5.38155817344e-05,6.76811047315e-05,8.51204252499e-05,0.000107048181023,0.000134631175439,0.00016931332775,0.000212943524071,0.000267799612688,0.000336808649496,0.000423613367115,0.000532756865732};
function this.Util_pitchToRate(pitch)
   local index = this.clip(this.int((0.244094488189 * pitch)),0,31);
   return (Util_pitchToRate_c0[index+1] + (pitch * (Util_pitchToRate_c1[index+1] + (Util_pitchToRate_c2[index+1] * pitch))));

end

function this.Util_cvToPitch(cv)
   return ((cv * 120.) + 24.);

end

local Util_cvToRate_1024_c0 = {0.759366720147,0.76287682088,0.779736591571,0.825651541171,0.924648365923,1.11239844184,1.44068747342,1.98339240754,2.84443407951,4.16831030008,6.15399365185,9.07319481283,13.2943014604,19.3136163473,27.7961015161,39.62829044,55.9866571462,78.4267499503,108.998215386,150.387463988,206.118533087,280.781675017,380.357513386,512.612775405,687.616763647,918.3490275,1221.607949,1619.05223539,2138.6293218,2815.43667105,3696.1624076,4838.69411678,6318.21152};
local Util_cvToRate_1024_c1 = {5.24558308188,4.99894254853,4.40308922371,3.31911604895,1.56449675194,(-1.09925629984),(-4.98222642392),(-10.4858640391),(-18.1279555878),(-28.5740997639),(-42.677360032),(-61.5281235454),(-86.516770266),(-119.412133355),(-162.460317551),(-218.508269191),(-291.15678595),(-384.956977646),(-505.652296862),(-660.458538559),(-858.49494987),(-1111.17337632),(-1432.85844521),(-1841.54445918),(-2359.81604563),(-3015.79546669),(-3844.83813828),(-4891.10191925),(-6210.19727359),(-7868.99386779),(-9955.77800805),(-12575.7478745),(-15862.2346213)};
local Util_cvToRate_1024_c2 = {20.1255918184,24.4575723246,29.7220001999,36.1195822692,43.8942270126,53.3423434917,64.8241428839,78.7773664092,95.7339869863,116.340471033,141.382450964,171.814646006,208.797362823,253.740413251,308.357210756,374.730622127,455.389632248,553.410815849,672.536916058,817.290610669,993.216832855,1207.00062225,1466.80387492,1782.52927112,2166.24499736,2632.4875896,3199.07261962,3887.67302403,4724.8591793,5741.24530174,6977.44175505,8479.29002777,10304.4554863};
function this.Util_cvToRate_1024(cv)
   local index = this.clip(this.int((34.4444444444 * cv)),0,31);
   return (Util_cvToRate_1024_c0[index+1] + (cv * (Util_cvToRate_1024_c1[index+1] + (Util_cvToRate_1024_c2[index+1] * cv))));

end

local Util_cvToRate_c0 = {0.000741569062643,0.000741614411242,0.000741804288603,0.000742252395803,0.000743088394956,0.000744459465973,0.000746531994555,0.000749493376759,0.000753554075716,0.000758949578451,0.000765943041551,0.000774827118637,0.000785927670855,0.000799605266108,0.000816260506974,0.000836333691745,0.000860311194842,0.00088872896745,0.000922189292884,0.0009613246255,0.00100684713314,0.00105956789213,0.00112027587704,0.00118999058362,0.00126968375945,0.00136042036651,0.00146341605724,0.0015802758572,0.00171200068897,0.00186017347323,0.00202732748819,0.00221387469471,0.00242324163549,0.00265613706453,0.00291683889779,0.00320704837861,0.00352951656407,0.00388492780502,0.00427938700976,0.00471688443112,0.00519800950077,0.00573047548368,0.00631852127535,0.00695966784397,0.0076816476356,0.00845635103957,0.00930848563805,0.0102575900236,0.0112717725968,0.0124037615467,0.0136297909309,0.0149481690268,0.0163702610067,0.0180283364133,0.019750213838,0.0216328135458,0.0237925004771,0.0258545448202,0.028413603456,0.0309513124977,0.0338346288384,0.0370438278413,0.0404711540004,0.0442617797954,0.0479023445663,0.0517929941703,0.0566318569596,0.0616369368589,0.0679441687149,0.0728861199979,0.0794312603466,0.0863661579071,0.0931088254731,0.103538643071,0.110999516075,0.12077442553,0.132006921696,0.14361952086,0.152556099596,0.165987675768,0.176305713071,0.191720858873,0.209984838027,0.226697757209,0.251486748714,0.271212022485,0.275739365679,0.29951049868,0.342669114215,0.360211555691,0.375617535537,0.415542785923,0.477028848985,0.480246251843,0.518324887509,0.524654771317,0.636617964867,0.608643817054,0.698808713362,0.905254906283,0.753959541703,0.968786334953,0.93460949692,0.942714402404,0.900805444734,1.0839642753,1.51146188926,1.37638374315,1.35092276314,1.45219475207,1.39667077792,2.12943149811,2.01822114958,2.1320711487,2.64194234605,2.16108872692,2.09976398288,2.27870401118,3.05023461051,3.26907619338,3.39656237972,2.97005654385,3.89995571677,3.49384079761,4.4359293311,4.96546776832,6.75526326355,7.32738947903,3.89917391812};
local Util_cvToRate_c1 = {0.00513912879403,0.00512626868893,0.00509930490895,0.00505686073417,0.00499745713935,0.00491950588873,0.00482130247354,0.00470101855143,0.00455669336578,0.00438622578291,0.00418736558485,0.00395769841086,0.00369464466104,0.00339545190928,0.00305714271489,0.0026765705095,0.00225035997924,0.00177487687876,0.001246345441,0.000660558246906,1.31075933396e-05,(-0.000700558430086),(-0.00148563983064),(-0.00234732718301),(-0.00329152632479),(-0.00432393367047),(-0.00545174257822),(-0.00668042955662),(-0.00802029170769),(-0.00947432754938),(-0.011054647423),(-0.0127719043168),(-0.0146297273048),(-0.0166408852741),(-0.018821816977),(-0.0211674979865),(-0.0237176776141),(-0.0264617379495),(-0.0294116929601),(-0.0325962291901),(-0.0360266356988),(-0.0397066228021),(-0.0437127432142),(-0.0479579816919),(-0.0525753360976),(-0.0574648720916),(-0.0627984060055),(-0.0685448972251),(-0.0745527528505),(-0.0810901180697),(-0.0880415714529),(-0.0954497093324),(-0.103169488725),(-0.112078901198),(-0.121354872554),(-0.130772871758),(-0.142182492243),(-0.152165724188),(-0.164777215576),(-0.17689661749),(-0.191333885881),(-0.205553106055),(-0.221280015042),(-0.238829666269),(-0.254758885232),(-0.270439000783),(-0.292231524466),(-0.313960050568),(-0.341895055523),(-0.360715576548),(-0.385922376159),(-0.413282538938),(-0.43934035008),(-0.485224424381),(-0.510420009663),(-0.546029185741),(-0.59336468076),(-0.632486062631),(-0.667213609495),(-0.7127637426),(-0.749138439478),(-0.798818741195),(-0.863736589849),(-0.923015074505),(-1.01677917846),(-1.08188457982),(-1.08862743987),(-1.15711277682),(-1.31072991491),(-1.35597607556),(-1.39850067183),(-1.53500288984),(-1.7426231996),(-1.74441434686),(-1.85673040319),(-1.86335662855),(-2.23740606494),(-2.11120870709),(-2.37491896732),(-3.07803488977),(-2.53501341753),(-3.24651230846),(-3.03060292674),(-3.04549148361),(-2.91948671735),(-3.42608988484),(-4.69606678427),(-4.40456387752),(-4.13014684174),(-4.38263925111),(-4.1800477419),(-6.37128628061),(-5.87432859131),(-6.2576549978),(-7.60800503674),(-6.25242140205),(-5.99534604169),(-6.31906690143),(-8.40797235072),(-8.87096505492),(-9.56451102074),(-8.08733454442),(-10.7473176082),(-8.92996444244),(-11.9205552706),(-12.6731487667),(-18.0985788685),(-19.0957467048),(-10.0276980998)};
local Util_cvToRate_c2 = {0.0182548011488,0.0191665204942,0.0201237748553,0.021128838317,0.022184099004,0.0232920630713,0.024455365988,0.0256767667605,0.026959165693,0.0283056250765,0.0297193260899,0.0312036180529,0.0327620592944,0.0343983795071,0.0361163247224,0.0379201548045,0.0398140402491,0.0418022367704,0.0438902469547,0.0460824389151,0.0483839036816,0.0508007579842,0.0533376983183,0.0560014706765,0.0587992168668,0.0617357059521,0.0648164679712,0.0680560343057,0.0714534271734,0.0750201702913,0.0787729291932,0.0827028622062,0.0868361775664,0.0911652197147,0.0957232686162,0.100507085311,0.105540711407,0.110800050992,0.116325261617,0.122126055794,0.128195657116,0.134568214299,0.141399728151,0.148411390903,0.155909754848,0.163637717471,0.171857430749,0.180599528232,0.189439624235,0.198925586971,0.208870214381,0.219116718382,0.229507005367,0.241660033535,0.253651122828,0.266141339677,0.280625820927,0.293001798121,0.308347910773,0.32265455507,0.339777373778,0.357068726351,0.374907420566,0.394593407824,0.411669961097,0.427938403014,0.452631959007,0.475006349312,0.504551118404,0.523231560664,0.550196849878,0.57689535165,0.602279186745,0.648929741879,0.673693662157,0.707793997271,0.752358931538,0.789921751441,0.816901835344,0.856121380993,0.88813548803,0.934686180435,0.994476093082,1.04419934514,1.12744572441,1.18665154172,1.17216442899,1.2347382924,1.37149372463,1.39711367347,1.42577899321,1.53760691842,1.71357866805,1.69639823421,1.77961242369,1.774088233,2.08137270987,1.94673230573,2.17791493218,2.73877837267,2.26714427219,2.83332928026,2.63302125542,2.62432486851,2.4689071097,2.90022674255,3.8673706272,3.54060178376,3.34757757167,3.52217170052,3.31252088226,4.91238070538,4.56967048893,4.76229623232,5.72050436572,4.69421189282,4.42267646505,4.69332933902,6.03451219251,6.34953066048,6.65352247026,5.6266063064,7.35717991764,6.2544174182,8.21209396414,8.68817145202,11.9813756716,12.4840062974,6.60838756876};
function this.Util_cvToRate(cv)
   local index = this.clip(this.int((141.111111111 * cv)),0,127);
   return (Util_cvToRate_c0[index+1] + (cv * (Util_cvToRate_c1[index+1] + (Util_cvToRate_c2[index+1] * cv))));

end

function this.Util_pitchToCv(pitch)
   return (0.00833333333333 * ((-24.) + pitch));

end

local Util_cvToperiod_c0 = {674.246034776,671.553837727,662.76178188,646.759521901,623.799427712,594.871801992,561.298276875,524.476942143,485.731369226,446.229382316,406.94744034,368.66377436,331.968683025,297.284155733,264.887666444,234.936856737,207.493124397,182.543015866,160.016906779,139.804831794,121.769556579,105.757116937,91.6051155071,79.149088394,68.2272489259,58.6838945702,50.371733558,43.1533549488,36.902032908,31.5020247862,26.8484942477,22.8471656705,19.4137944411};
local Util_cvToperiod_c1 = {(-4656.65631086),(-4481.96057904),(-4198.68613255),(-3855.75154272),(-3487.13945482),(-3115.8588214),(-2756.93031878),(-2419.62514111),(-2109.13475329),(-1827.80833374),(-1576.06296307),(-1353.04709181),(-1157.11886446),(-986.186250154),(-837.94466494),(-710.039112868),(-600.171233528),(-506.166565653),(-426.013462738),(-357.88215123),(-300.130189887),(-251.29890433),(-210.104104957),(-175.423450149),(-146.28211351),(-121.837895062),(-101.366536594),(-84.2477263813),(-69.9520817395),(-58.0292593608),(-48.0972479058),(-39.8328333125),(-32.9631861669)};
local Util_cvToperiod_c2 = {14548.823162,11715.3695219,9433.74467508,7596.47729664,6117.02662156,4925.70611715,3966.40103985,3193.92526365,2571.89287904,2071.00430825,1667.66620793,1342.8801524,1081.3477512,870.750049392,701.167268045,564.611553133,454.650723814,366.105297558,294.804521096,237.38991552,191.157081924,153.928316161,123.950032495,99.8101644891,80.37165247,64.7188846329,52.1145689979,41.9650047624,33.792117225,27.2109390435,21.9114771264,17.6441110354,14.2078351192};
function this.Util_cvToperiod(cv)
   local index = this.clip(this.int((31. * cv)),0,31);
   return (Util_cvToperiod_c0[index+1] + (cv * (Util_cvToperiod_c1[index+1] + (Util_cvToperiod_c2[index+1] * cv))));

end

local Util_cvTokHz_c0 = {0.0327031956626,0.0329157760149,0.0339578485366,0.0368566350801,0.0432421259378,0.0556159052222,0.0777237842587,0.115068916026,0.175614259054,0.270739336253,0.416537388042,0.635566803598,0.959207146572,1.43081778941,2.109959525,3.07802092665,4.44569735701,6.36290872359,9.03192182114,12.7246766192,17.8056189134,24.7617346776,34.2419903781,47.1090421017,64.5069278521,87.9495573939,119.436233946,161.602273483,217.915147899,292.929618558,392.619239761,524.806644821,699.721497115};
local Util_cvTokHz_c1 = {0.225719191888,0.212293210117,0.179169381636,0.117604905736,0.0157801819103,(-0.142178074384),(-0.377466272128),(-0.718250312221),(-1.20179695141),(-1.87722845841),(-2.80907738384),(-4.08186733736),(-5.80600813072),(-8.12537311265),(-11.2270275603),(-15.3537053894),(-20.8197945237),(-28.0317982882),(-37.5145028842),(-49.9444141699),(-66.1924493548),(-87.3784044617),(-114.940396419),(-150.723337164),(-197.091583804),(-257.072283866),(-334.537673834),(-434.436788276),(-563.089816651),(-728.561857581),(-941.137257915),(-1213.92132821),(-1563.60330201)};
local Util_cvTokHz_c2 = {0.876337770753,1.08828690662,1.35149759677,1.67836784855,2.08429422425,2.58839706504,3.21442111597,3.99185397416,4.95731504247,6.1562804124,7.64522492346,9.49428229626,11.7905486396,14.6421849368,18.1835117495,22.5813361171,28.0428086641,34.825181012,43.2479230966,53.7077711535,66.697415176,82.8287060814,102.861475711,127.739327173,158.634081359,197.000973197,244.647197551,303.81703348,377.297556468,468.549917976,581.872375985,722.602755747,897.369877251};
function this.Util_cvTokHz(cv)
   local index = this.clip(this.int((31. * cv)),0,31);
   return (Util_cvTokHz_c0[index+1] + (cv * (Util_cvTokHz_c1[index+1] + (Util_cvTokHz_c2[index+1] * cv))));

end

function this.Tricore__ctx_type_0_init()
   local _ctx = {};
   _ctx.reset_state = false;
   _ctx.reset_phase = 0.;
   _ctx.rate = 0.;
   _ctx.phase = 0.;
   _ctx.direction = false;
   _ctx._inst26 = this.Util__ctx_type_0_init();
   _ctx._inst25 = this.Util__ctx_type_0_init();
   _ctx._inst23 = this.Util__ctx_type_1_init();
   this.Tricore_default(_ctx);
   return _ctx;

end

function this.Tricore_process_init()
   return this.Tricore__ctx_type_0_init();
end

function this.Tricore_process(_ctx,cv,reset,disable)
   local out = 0.;
   if this.Util_change(_ctx._inst23,cv) then
      _ctx.rate = (4. * this.Util_cvToRate_1024(cv));

   end
   local new_phase = 0.0;
   local _if_39 = 0.0;
   if _ctx.direction then
      _if_39 = _ctx.rate;
   else

      _if_39 = (- _ctx.rate);
   end
   new_phase = (_ctx.phase + _if_39);
   local bdisable = (disable > 0.5);
   if (this.Util_edge(_ctx._inst25,(reset > 0.)) or this.Util_edge(_ctx._inst26,bdisable)) then
      _ctx.reset_phase = _ctx.phase;
      _ctx.reset_state = true;
      new_phase = 0.;

   end
   if (new_phase > 1024.) then
      new_phase = (1024. + (- (new_phase + (-1024.))));
      _ctx.direction = false;

   else

      local _cond_41 = false;
      _cond_41 = (new_phase < (-1024.));
      if _cond_41 then
         _ctx.direction = true;

      end

   end
   if bdisable then
      _ctx.phase = 0.;
   else

      _ctx.phase = new_phase;
   end
   if _ctx.reset_state then
      local _cond_44 = false;
      _cond_44 = ((this.abs(_ctx.reset_phase) > 10.) or bdisable);
      if _cond_44 then
         local reset_speed = 0.0;
         if bdisable then
            reset_speed = 0.01;
         else

            reset_speed = 0.5;
         end
         _ctx.reset_phase = (_ctx.reset_phase + (- (_ctx.reset_phase * reset_speed)));

      else

         local _cond_43 = false;
         _cond_43 = (_ctx.reset_phase > 10.);
         if (not _cond_43) then
            _ctx.reset_phase = 0.;
         end
         _ctx.reset_state = false;
         _ctx.direction = true;

      end
      out = _ctx.reset_phase;

   end
   out = (out + _ctx.phase);
   return (out * 0.0009765625);

end

function this.Tricore_noteOn_init()
   return this.Tricore__ctx_type_0_init();
end

function this.Tricore_noteOn(_ctx,note,velocity,channel)

end

function this.Tricore_noteOff_init()
   return this.Tricore__ctx_type_0_init();
end

function this.Tricore_noteOff(_ctx,note,channel)

end

function this.Tricore_controlChange_init()
   return this.Tricore__ctx_type_0_init();
end

function this.Tricore_controlChange(_ctx,control,value,channel)

end

function this.Tricore_default_init()
   return this.Tricore__ctx_type_0_init();
end

function this.Tricore_default(_ctx)
   _ctx.rate = 0.759366720147;

end

local Saturate_soft_table_c0 = {(-1.99442948622),(-3.29602222325),(-1.95735308569),(-6.96997402259),(-4.5016368716),(-3.64755019377),(-2.34564838815),(-1.67596528429),(-3.68072669179),(-1.6505829813),(-3.94908327918),(-2.51302977349),(-1.97220029257),(-1.69656817205),(-3.45157302084),(-3.98480511806),(-3.28499255382),(-1.80492803321),(-1.1509141734),(-2.17302389146),(-1.95869820251),(-0.666249936738),(-2.77567563864),(-1.37195336516),(-1.94297083892),(-2.14732008125),(-0.624606498401),(-1.45858941521),(-1.73374108682),(-1.11393686864),(-1.11026698927),(-0.729058454308),(-0.708931122412),(-0.779315245018),(-0.459755240619),(-0.877372481889),(-0.861862972466),(-0.270292867644),(-0.189111170796),(-0.194058937544),(-0.224140762235),0.0466310863267,(-0.155450878694),(-0.217023688718),(-0.0356694637449),0.0350635841314,0.054384024319,0.1331112427,0.105386596479,0.136409623243,0.22075054879,0.106634970594,0.237853800514,0.266854347428,0.384590931935,0.256304136899,0.37074676629,0.367433066553,0.358462292643,0.414500830593,0.401188285556,0.415461316836,0.427360774032,0.459412171826,0.435036879244,0.448908686223,0.460745193654,0.456058502969,0.460611456918,0.443624892556,0.450369248603,0.45256831553,0.446463335051,0.43261116252,0.419476089948,0.407863815344,0.400594616738,0.389948420634,0.373614041542,0.366231350923,0.349693003485,0.33600629948,0.320802867358,0.304558436565,0.289422592479,0.27422919464,0.258424792431,0.243253166902,0.227321843373,0.211967331777,0.196756373629,0.181567949074,0.167403208705,0.1532480578,0.139657708615,0.126634849698,0.114321601824,0.102430921654,0.0912044490706,0.0806411194139,0.0707403965425,0.0615515921809,0.0530709657337,0.0453097121194,0.0382423531205,0.03187813057,0.0261977052705,0.0211863135988,0.0168166621878,0.0130611087945,0.00988573650903,0.0072539690874,0.00512295750823,0.0034470794389,0.00217726799089,0.00126127369989,0.000644258089768,0.000269141045708,7.70406248778e-05,7.71266356131e-06,0.,(-7.71266356131e-06),(-7.70406235899e-05),(-0.000269141045708),(-0.000644257901023),(-0.00126127369989),(-0.00217726865111),(-0.00344706879906),(-0.00512293380567),(-0.0072539690874),(-0.00988573749362),(-0.0130609369758),(-0.0168163110708),(-0.0211863135988),(-0.0261977052705),(-0.0318773026793),(-0.0382471275855),(-0.0453083116013),(-0.0530762646104),(-0.0615515921809),(-0.0707621458137),(-0.0806411194139),(-0.0911853439602),(-0.102423343999),(-0.114331732208),(-0.126742510954),(-0.139657708615),(-0.1532480578),(-0.167403208705),(-0.181605426733),(-0.196744644918),(-0.2119103442),(-0.227032077477),(-0.242599912381),(-0.258325163082),(-0.273487659895),(-0.289422592479),(-0.304558436565),(-0.320802867358),(-0.334635617892),(-0.349682257598),(-0.363391724735),(-0.376501874489),(-0.386963451223),(-0.398010289402),(-0.410428516145),(-0.425073946877),(-0.426378343334),(-0.446463462649),(-0.450842029248),(-0.450369248603),(-0.437144898919),(-0.459733923817),(-0.457839700568),(-0.442259667725),(-0.437812107761),(-0.428180352712),(-0.431313053239),(-0.421050617821),(-0.390659853743),(-0.407288030197),(-0.414500830593),(-0.352222327943),(-0.343467764716),(-0.356996186485),(-0.268045941775),(-0.297010128474),(-0.28416271953),(-0.237853794286),(-0.203033224723),(-0.137941797118),(-0.193475926033),(-0.159502181996),(-0.0249312791129),0.0693811662059,0.210181430273,0.0419693800504,0.259262820909,0.162589798187,0.224609645637,0.227543419343,0.215489883849,0.183119733847,0.582060887158,0.823353883985,0.532637322496,0.430851337995,0.299538008665,0.7974256241,0.729058454308,0.645412555983,1.11393686864,1.73374108682,0.830588650279,1.77753777339,1.78801602876,2.08015946226,2.30046142306,2.77567563864,1.00477191684,2.11609896857,2.61880554887,1.25537209003,1.90276240394,2.5140855246,0.680704418453,2.68534124913,4.24118124455,1.84203310573,2.51302977349,3.54478694574,4.54391298437,3.68072669179,3.36437465268,4.25735557219,2.88699116395,(-0.762556518952),2.53654346318,1.43466481045,3.29602222325,1.99442948622,8.25983368914};
local Saturate_soft_table_c1 = {0.77653413386,0.538489365372,0.509739393437,0.87757694615,0.810650595784,0.818217829445,0.79628947012,0.666289756522,0.732831943467,0.798550206891,0.787790490616,0.733871138596,0.821887688624,0.619833039051,0.954943971745,0.797615405776,0.81892619581,0.868061021847,0.928272455429,0.877033954028,0.963746458565,0.893659909703,0.981250297849,0.803516090054,0.945638993344,0.966559046217,0.983884709502,0.941799598324,0.943520484769,0.947097800152,0.948192914031,0.960796094427,0.993097941162,0.989633634188,0.99750917924,1.04569109818,1.03167257905,1.0507890255,1.07413723998,1.03816719462,1.05121971746,1.0711683416,1.10280954392,1.07404516233,1.08728169808,1.10312126593,1.09279720109,1.0991508293,1.12357759158,1.12676410981,1.13632755383,1.13386431002,1.13961456085,1.13969169337,1.142320729,1.14751175733,1.15679851034,1.15955769503,1.16810920159,1.1671557164,1.17710906157,1.16645523075,1.16848714352,1.16727985547,1.17180340938,1.17673486812,1.17314907482,1.17338156674,1.17409445259,1.17366009278,1.17229861645,1.17334991613,1.16943230242,1.16623417082,1.16631786655,1.16497145854,1.16147439573,1.15820808103,1.15650484457,1.15308129726,1.1491883689,1.14563230166,1.14171074415,1.13762041689,1.13349816348,1.12899930805,1.1245193589,1.11996804287,1.11504763256,1.1101086351,1.10525877884,1.10010583848,1.09506123232,1.08994385375,1.08481387672,1.07967422503,1.0745676328,1.06949995633,1.06448302885,1.05955861304,1.0547187401,1.04999030014,1.04538209798,1.04092354516,1.03662352828,1.03250110154,1.02856552739,1.02483690624,1.02132590445,1.018046055,1.01500933083,1.01222716454,1.00970941916,1.0074654381,1.00550358962,1.00383108551,1.00245411875,1.00137780671,1.00060614335,1.0001419952,0.999987087199,1.0001419952,1.00060614335,1.00137780671,1.00245411889,1.00383108551,1.00550359025,1.00746544569,1.00970940381,1.01222716454,1.01500950808,1.01804604093,1.02132544616,1.02483690624,1.02856552739,1.03250026352,1.03662436016,1.04092109553,1.04538381112,1.04999030014,1.05471872047,1.05955861304,1.06449020852,1.06950871682,1.07457017088,1.07967959588,1.08481387672,1.08994385375,1.09506123232,1.10017845684,1.10514507624,1.11010904312,1.11506591512,1.11994357042,1.12451596928,1.12903464751,1.13349816348,1.13762041689,1.14171074415,1.14534982472,1.14918702552,1.15281296187,1.15645768026,1.15850888274,1.16189965918,1.16504358021,1.16512840509,1.16936637962,1.16943220644,1.16887575379,1.17229861645,1.17419375559,1.17185365424,1.17513985124,1.17186936178,1.17405390551,1.16857724082,1.16903612326,1.16607946337,1.16450057633,1.17236522126,1.1671557164,1.16003916639,1.15869438764,1.15161275644,1.15162107911,1.14007808977,1.13947626581,1.13395918348,1.13849057525,1.1295880473,1.12092416541,1.1214516925,1.09238941015,1.13484155648,1.11721552816,1.08670009464,1.09812628072,1.08492426357,1.05585655306,1.05122025968,1.08744775203,1.05608655685,1.03714842583,1.00054560074,1.00457053644,1.0286797173,0.983390890629,0.992932963298,0.960796094427,0.952739437555,0.947097800152,0.943520484769,0.930073497257,0.945999771462,0.917593372713,0.890010555653,0.980630879003,0.981250297849,0.863317245432,0.885483103721,0.83952001901,0.825946270808,0.898094834152,0.917159735538,0.740098800816,0.682164481677,0.875396389318,0.640776741413,0.733871138596,0.782642794362,0.706489616245,0.732831943467,0.782459210244,0.746117561379,0.782130862746,0.631627622141,0.836553342124,0.347354041747,0.538489365372,0.77653413386,0.815811972258};
local Saturate_soft_table_c2 = {0.0256667519246,0.0101865649922,0.00223506457263,0.018463540486,0.0105764196077,0.0118802511161,0.011092642295,0.0111226754801,0.0113125406742,0.0128444894088,0.0133478331796,0.00682573343647,0.0151343556662,0.009632182563,0.0191880535566,0.0121069560478,0.0123399982081,0.0131208399627,0.020294409548,0.0121452000394,0.0183423252399,0.0164258114253,0.0177428942927,0.0132130618746,0.0176678011455,0.0168262861515,0.0196575908212,0.0179338873886,0.0156672081916,0.0162762930328,0.0154704926119,0.0164800371479,0.0169985434566,0.0180303793973,0.0187228516872,0.0208181499497,0.0183528589463,0.019745440466,0.0212473805578,0.0199995599465,0.0198288568458,0.0217277307917,0.0225614661276,0.0202848269277,0.021843525184,0.0214928537216,0.0214465371944,0.0214845928234,0.0216830007946,0.0219488446543,0.0224419420045,0.0221257587015,0.0224333723651,0.0229746644205,0.023014374881,0.0230214250232,0.023397999516,0.0233036180074,0.0237136684427,0.0238214261713,0.0242164390461,0.0235925889593,0.023899409214,0.0237342675362,0.02394948831,0.0241609932995,0.0240793567925,0.0239823765653,0.0241419708474,0.0239650807591,0.0239197550977,0.0241755060467,0.0238473169399,0.0237432000437,0.0236459643766,0.0236358319111,0.0233698941941,0.0232425847178,0.0231288560515,0.0229378090653,0.0226947320917,0.0224579933229,0.0221758797547,0.0219227760792,0.0216310007064,0.0213224079847,0.020998609528,0.0206559604439,0.0202624056054,0.019871893761,0.0194747935134,0.0190356095725,0.018589217041,0.0181162307477,0.0176362014653,0.0171319171045,0.0166099225883,0.0160668373868,0.0155061949139,0.0149303461773,0.0143392373826,0.0137293466955,0.0131045972155,0.0124652962218,0.0118108087175,0.0111430779548,0.0104621104996,0.00976848456577,0.00906332006217,0.00834733069127,0.00762119931859,0.00688595493179,0.00614229950143,0.00539113404362,0.00463337572043,0.00386991503671,0.00310168767717,0.00232963002533,0.00155469122989,0.000777827493955,0.,(-0.000777827493955),(-0.00155469122014),(-0.00232963002533),(-0.0031016874231),(-0.00386991503671),(-0.00463337572043),(-0.00539113404362),(-0.00614230707139),(-0.00688595493179),(-0.00762124373851),(-0.00834726787195),(-0.00906327430933),(-0.00976848456577),(-0.0104621104996),(-0.0111429399057),(-0.0118113805088),(-0.0124651835364),(-0.0131054467229),(-0.0137293466955),(-0.0143392373826),(-0.0149303461773),(-0.0155060527883),(-0.0160676720826),(-0.0166099225883),(-0.0171330007601),(-0.0176362014653),(-0.0181162307477),(-0.018589217041),(-0.0190370399881),(-0.0194736323217),(-0.0198813093757),(-0.0202902923202),(-0.0206528551195),(-0.0210036203867),(-0.0213200498274),(-0.0216310007064),(-0.0219227760792),(-0.0221758797547),(-0.0224134706599),(-0.0226947320917),(-0.0229341074643),(-0.0230738155936),(-0.023185998343),(-0.0233698904603),(-0.023550651371),(-0.0236028399666),(-0.0237427974992),(-0.0239842281871),(-0.0239385781971),(-0.0239197550977),(-0.0239684695454),(-0.0240104534032),(-0.0242178435425),(-0.0239314074548),(-0.0240342815106),(-0.0238266422793),(-0.0238006454094),(-0.023419699965),(-0.023443645455),(-0.0238386260796),(-0.0238214261713),(-0.0233895597845),(-0.0231485273046),(-0.0233086865893),(-0.0229646404545),(-0.0230885054112),(-0.0228936045411),(-0.0228508862747),(-0.022658463202),(-0.0222060244173),(-0.0217241329503),(-0.022306046124),(-0.02143785547),(-0.0220781329967),(-0.0212895811338),(-0.0206025099488),(-0.0202144913737),(-0.0213584246881),(-0.0210693242313),(-0.0198422049109),(-0.0221474041767),(-0.0212473805578),(-0.019295806167),(-0.0165366037029),(-0.0160253631565),(-0.019138950409),(-0.0180225654486),(-0.0173338783095),(-0.0164800371479),(-0.0150523572903),(-0.0162762930328),(-0.0156672081916),(-0.0193597735577),(-0.0147418840309),(-0.0154195078977),(-0.0159724216762),(-0.0160364207185),(-0.0177428942927),(-0.0164258114253),(-0.0138953007604),(-0.0121452000394),(-0.0170830147105),(-0.0175485805175),(-0.0187134671106),(-0.0120722163725),(-0.00950893243851),(-0.01602244708),(-0.00894243222319),(-0.00682573343647),(-0.0123973264166),(-0.008246006116),(-0.0113125406742),(-0.00924456078064),(-0.0117269536469),(-0.0118802511161),(-0.013267451719),(-0.0117673274085),(-0.00247796998809),(-0.0101865649922),(-0.0256667519246),(-0.00985188720949)};
function this.Saturate_soft_table(x)
   local index = this.clip(this.int((5. * (x + 24.))),0,240);
   return (Saturate_soft_table_c0[index+1] + (x * (Saturate_soft_table_c1[index+1] + (Saturate_soft_table_c2[index+1] * x))));

end

function this.Saturate_soft_process(x)
   return this.Saturate_soft_table(x);

end

function this.Saturate_soft_noteOn(note,velocity,channel)

end

function this.Saturate_soft_noteOff(note,channel)

end

function this.Saturate_soft_controlChange(control,value,channel)

end

function this.Saturate_soft_default()

end

local Svf_calc_g_c0 = {0.0023297121342,0.0023298546088,0.00233045116179,0.00233185902468,0.00233448558375,0.00233879327418,0.0023453048874,0.00235460924575,0.00236736767058,0.00238432013822,0.00240629360193,0.002434207746,0.00246908665839,0.00251206356018,0.00256439756767,0.00262747265673,0.00270281774316,0.0027921177244,0.0028972661721,0.00302025178831,0.00316331413798,0.00332900403406,0.00351980349692,0.00373891953596,0.00398941010801,0.00427462713873,0.00459839740114,0.00496577265212,0.00537990890588,0.00584579260787,0.0063713999059,0.0069580451224,0.00761651836536,0.00834907594177,0.00916919581399,0.0100822648036,0.0110969830128,0.0122155609949,0.0134572554814,0.0148347017642,0.0163498579969,0.0180270962783,0.0198799290226,0.0219006986646,0.0241768427709,0.0266202544363,0.0293089883446,0.0323048435502,0.0355079178358,0.0390846801181,0.0429610823913,0.0471324939149,0.0516353554553,0.0568881974804,0.0623493888405,0.0683252922473,0.0751870205153,0.0817510721373,0.089899860171,0.0979980528732,0.107212749674,0.117479120452,0.128466812842,0.140644579547,0.152383737836,0.164957129504,0.180620393302,0.196876276419,0.217382629717,0.233608172438,0.255074025004,0.277937029747,0.300344697813,0.33490230023,0.360033809358,0.392927257799,0.431043914892,0.470667642697,0.502125025978,0.548705970545,0.585845298165,0.640389558307,0.705686724873,0.766946901711,0.857199425494,0.93192554928,0.955894202657,1.04766666601,1.2112375625,1.28730236163,1.35996068367,1.5259002128,1.77755942408,1.82121322738,2.00069524532,2.06718387093,2.56203124918,2.50807997661,2.9491133962,3.93656917768,3.38432136826,4.50166697146,4.47960675528,4.70931877309,4.7176811614,5.93056787761,8.66477420449,8.45362937601,8.69759301729,9.96925644992,10.3115369418,17.0261542312,17.4424817486,20.3644642456,27.6589949061,25.5267426972,27.7606895081,33.9374150163,52.2926626709,65.3568200435,82.5193600308,85.6227265382,140.913993762,153.280902531,265.720234175,385.48840874,776.142792682,1249.26974206,1090.24427776};
local Svf_calc_g_c1 = {0.0161451367461,0.0161047333429,0.01602001908,0.0158866680182,0.0157000326215,0.015455122023,0.0151465797884,0.0147686601065,0.0143152007629,0.0137795980412,0.0131547792709,0.0124331554027,0.0116066174249,0.0106665123641,0.00960347913225,0.00840762386824,0.00706833237394,0.00557417493783,0.00391327480231,0.00207239632248,3.76710473091e-05,(-0.00220522640589),(-0.00467266246102),(-0.00738097956896),(-0.010348774188),(-0.0135939924143),(-0.017139293249),(-0.0210019531832),(-0.0252144078906),(-0.0297861725721),(-0.0347554194402),(-0.0401557527044),(-0.0459987410862),(-0.0523246923321),(-0.0591855001146),(-0.0665656315621),(-0.0745903295526),(-0.0832265820675),(-0.0925125772499),(-0.102539021932),(-0.113341960998),(-0.124933817116),(-0.137556231659),(-0.150936337216),(-0.165493741995),(-0.180915375274),(-0.197743394453),(-0.215882238489),(-0.234856695826),(-0.255513474499),(-0.277492679877),(-0.300931069874),(-0.325375765411),(-0.353601284767),(-0.38301541084),(-0.412920437954),(-0.449156971422),(-0.480946834656),(-0.521103935998),(-0.559782900418),(-0.605883660992),(-0.651412715678),(-0.701831393926),(-0.758183686247),(-0.809563133935),(-0.860344636801),(-0.930806443815),(-1.00132870485),(-1.09200666522),(-1.15399043149),(-1.23684420942),(-1.32710737912),(-1.41378889456),(-1.56502871132),(-1.65061740296),(-1.77075785763),(-1.9301611262),(-2.06462943704),(-2.18600775602),(-2.34485716672),(-2.47581970719),(-2.65329926804),(-2.88486956162),(-3.10113018841),(-3.43819193638),(-3.68539774019),(-3.73759920032),(-4.00837409768),(-4.58320202339),(-4.79111232019),(-5.00022422995),(-5.5571691188),(-6.39367776947),(-6.49846620701),(-7.03229584441),(-7.18826711451),(-8.79933645555),(-8.48863459796),(-9.78092763312),(-12.9994400844),(-11.0254261076),(-14.5499139582),(-14.0690833901),(-14.666232081),(-14.6270712536),(-17.9764140995),(-25.8189031368),(-25.4207355053),(-25.3063351034),(-28.5841062303),(-29.2006617606),(-47.7906076617),(-47.9486878195),(-55.645057671),(-74.3353335669),(-68.008779141),(-72.9047835726),(-87.4977659213),(-133.243614696),(-164.218550555),(-206.496450469),(-210.634553465),(-343.192699241),(-365.869108023),(-630.182525015),(-900.343072308),(-1797.10078327),(-2855.00130287),(-2461.63660429)};
local Svf_calc_g_c2 = {0.0573501300079,0.0602145352275,0.0632220172305,0.066379724093,0.0696951627604,0.073176211679,0.0768311563542,0.0806686713304,0.0846978761337,0.0889284004382,0.093370248865,0.0980339559416,0.102930714761,0.108072259014,0.11347037632,0.119138471583,0.125089672381,0.131337378108,0.137898910082,0.144788030484,0.152020779712,0.159616426863,0.16758978818,0.175962128085,0.184755966211,0.193986379151,0.203670851148,0.213855162994,0.224536394339,0.235750904434,0.247551269649,0.259909927386,0.272909484503,0.286526183281,0.300864972736,0.315916033605,0.331755456505,0.348308001341,0.365700453043,0.383964159386,0.40307856811,0.423152004351,0.444676217125,0.466775562718,0.490415719048,0.514789707246,0.540724355689,0.56831822198,0.596238524345,0.626212277345,0.657654175881,0.690074400632,0.722978785501,0.761475807007,0.799505849249,0.839155423178,0.885159118277,0.924569200463,0.973439733066,1.01911215545,1.07378921824,1.12911328395,1.18631431535,1.24953683361,1.30466156102,1.35742200497,1.43716366546,1.50985073255,1.60573871651,1.66734416312,1.75578736365,1.84397434057,1.92846107637,2.08201051632,2.16595303869,2.28092755507,2.43099543861,2.5596961702,2.65552337994,2.79288514487,2.9081948243,3.07327453387,3.2852475834,3.46716931009,3.76507193392,3.98687576651,3.96566931407,4.2078989399,4.71354140402,4.84556418223,4.99439963214,5.44684284503,6.14478770014,6.16334260812,6.56154545864,6.64197548387,7.93896036986,7.56792223599,8.63824413718,11.1489857496,9.44093219236,12.1564274365,11.6407071496,11.9822421086,11.7104534468,14.2906481727,20.0003629975,19.2465609661,19.0903252208,21.2625342434,21.3493873767,34.1272426697,34.0377817169,38.7085975703,50.9117664908,46.0369729342,48.4996662573,57.6487441793,85.9083083809,104.562189951,129.166100211,130.220198365,209.111403935,220.875545823,375.022130233,528.949351878,1040.36805771,1632.109419,1391.00545208};
function this.Svf_calc_g(cv)
   local index = this.clip(this.int((141.111111111 * cv)),0,127);
   return (Svf_calc_g_c0[index+1] + (cv * (Svf_calc_g_c1[index+1] + (Svf_calc_g_c2[index+1] * cv))));

end

function this.Svf__ctx_type_1_init()
   local _ctx = {};
   _ctx.z2 = 0.;
   _ctx.z1 = 0.;
   _ctx.inv_den = 0.;
   _ctx.g = 0.;
   _ctx._inst54 = this.Util__ctx_type_1_init();
   _ctx._inst53 = this.Util__ctx_type_1_init();
   _ctx.R = 0.;
   this.Svf_default(_ctx);
   return _ctx;

end

function this.Svf_process_init()
   return this.Svf__ctx_type_1_init();
end

function this.Svf_process(_ctx,x,cv,q,sel)
   q = (q + 0.5);
   if (this.Util_change(_ctx._inst53,cv) or this.Util_change(_ctx._inst54,q)) then
      _ctx.g = this.Svf_calc_g(cv);
      _ctx.R = (1. / (2. * (q + 1e-18)));
      _ctx.inv_den = (1. / (1. + (2. * _ctx.R * _ctx.g) + (_ctx.g * _ctx.g)));

   end
   local high = ((x + (- (((2. * _ctx.R) + _ctx.g) * _ctx.z1)) + (- _ctx.z2)) * _ctx.inv_den);
   local band = ((_ctx.g * high) + _ctx.z1);
   local low = ((_ctx.g * band) + _ctx.z2);
   local notch = (low + high);
   _ctx.z1 = ((_ctx.g * high) + band);
   _ctx.z2 = ((_ctx.g * band) + low);
   local output = 0.0;
   if (sel == 0) then
      output = low;
   else

      local _cond_62 = false;
      _cond_62 = (sel == 1);
      if _cond_62 then
         output = high;
      else

         local _cond_63 = false;
         _cond_63 = (sel == 2);
         if _cond_63 then
            output = band;
         else

            output = notch;
         end

      end

   end
   return this.Saturate_soft_process(output);

end

function this.Svf_noteOn_init()
   return this.Svf__ctx_type_1_init();
end

function this.Svf_noteOn(_ctx,note,velocity,channel)

end

function this.Svf_noteOff_init()
   return this.Svf__ctx_type_1_init();
end

function this.Svf_noteOff(_ctx,note,channel)

end

function this.Svf_controlChange_init()
   return this.Svf__ctx_type_1_init();
end

function this.Svf_controlChange(_ctx,control,value,channel)

end

function this.Svf_default_init()
   return this.Svf__ctx_type_1_init();
end

function this.Svf_default(_ctx)
   _ctx.g = 0.0023297121342;
   _ctx.R = 1.;
   _ctx.inv_den = (1. / (1. + (_ctx.g * _ctx.g)));

end

local Saturate_table_c0 = {(-1.10577106476),(-0.815258026123),(-0.630082130432),(-1.48389148712),(-1.07077503204),(-1.0193772316),(-0.936174869537),(-0.810448169708),(-0.959206581116),(-0.910904884338),(-1.0822520256),(-0.898240566254),(-1.07395029068),(-0.780700683594),(-1.19838666916),(-1.03335189819),(-1.03420305252),(-0.933932781219),(-1.06662511826),(-0.975377559662),(-1.07643890381),(-0.929947853088),(-1.15321016312),(-0.897446632385),(-1.04687905311),(-1.06961798668),(-1.02244091034),(-1.03174114227),(-1.00522279739),(-0.990733623505),(-0.970107555389),(-0.946643590927),(-0.978151798248),(-0.98970079422),(-0.970354080197),(-1.03865623474),(-1.01384615898),(-1.00151729583),(-1.00034689902),(-0.975999355307),(-0.983445763573),(-0.996186256383),(-1.03371119496),(-0.997049212408),(-1.00128126137),(-0.999516606229),(-0.986681699607),(-0.983708977488),(-0.997409939457),(-0.998217224625),(-1.00187146598),(-0.99975728895),(-0.998635767526),(-0.998777089528),(-0.990494546417),(-1.0048036534),(-1.00023203488),(-0.998589209031),(-1.00924460823),(-1.0014419971),(-1.0081945396),(-1.00002529452),(-0.999881243357),(-0.995475303978),(-1.00063688284),(-1.00368659412),(-1.00071538116),(-0.999318922262),(-1.00075405587),(-1.0003815877),(-0.999212770203),(-1.00138168023),(-0.999309021016),(-0.998013377246),(-1.00002318913),(-1.00173600789),(-0.999777263545),(-0.999124829797),(-1.00060558465),(-1.0000707209),(-0.999909887782),(-0.999794734981),(-0.999824757321),(-0.999952100131),(-0.999874569046),(-0.999763752722),(-0.999711224224),(-0.999651363321),(-0.999309947706),(-0.999147833714),(-0.99891237009),(-0.998481489395),(-0.997853821865),(-0.997005867309),(-0.995880387388),(-0.994259103758),(-0.992035708149),(-0.989011006445),(-0.984877264018),(-0.979276339037),(-0.971697674018),(-0.961487378928),(-0.947820996866),(-0.929662084207),(-0.905713478612),(-0.87442195626),(-0.833985148345),(-0.782442396873),(-0.717865969441),(-0.638728127539),(-0.544526846462),(-0.436707854302),(-0.319822441986),(-0.20255157126),(-0.0977039494215),(-0.0197582298823),0.0211020338112,0.026670634145,0.0132847925237,0.00178842066127,0.,(-0.00178842066127),(-0.0132847925225),(-0.026670634145),(-0.0211020336482),0.0197582298823,0.0977039489688,0.202551577999,0.319822455677,0.436707854302,0.54452694214,0.638728129487,0.717865776057,0.782442396873,0.833985148345,0.874421411595,0.905713680387,0.929660741169,0.947823093156,0.961487378928,0.971692107678,0.979276339037,0.98488173573,0.989020249466,0.992033530092,0.994251999765,0.995880387388,0.997005867309,0.997853821865,0.99850554459,0.9988527562,0.999219323817,0.999543472121,0.999756241006,0.999726758645,0.999876725676,0.999874569046,0.999952100131,0.999824757321,0.999735112242,0.999911377897,1.00019769946,1.00022949428,0.999506016373,1.00010111046,1.00041584518,0.998845507646,1.00075801659,0.999309006115,0.997563322682,0.999212770203,1.0021056514,0.998844055744,1.00113096243,0.998686052506,1.00284336752,0.999355621613,0.998352300971,0.996552920197,0.998541973468,1.00357774273,1.0014419971,1.00187765305,1.00087522597,0.99757879375,1.00370728556,0.998593685154,0.997192202023,0.998635767526,1.00662565136,1.00144493515,0.985527634179,1.0004185435,0.993092655925,1.02830982193,1.02044820775,0.986689805915,1.01565921302,1.00289988514,0.988349199271,0.98372662066,1.0234696865,0.999861001959,0.996964216227,0.982973098753,0.954218864443,0.997253417967,0.951947927475,0.985074520111,0.946643590927,0.93413734436,0.990733623506,1.00522279739,0.983894586563,0.995139122009,0.989118814468,1.00418543815,1.0662279129,1.15321016312,0.955039024353,0.978420734406,1.00814437866,0.951477527618,1.04804372787,1.14867544174,0.794210910797,0.858288764954,1.24589538574,0.784815311432,0.898240566254,1.05349111557,1.0278801918,0.959206581116,0.929448604584,1.07051181793,0.966084957123,0.702958106995,0.925413131714,0.523180484772,0.815258026123,1.10577106476,1.28795719147};
local Saturate_table_c1 = {(-0.0100769996643),(-0.00159281492233),0.00243684649467,(-0.00595062971115),0.00546038150787,0.00528347492218,0.00303047895432,(-0.000875234603882),0.00317186117172,0.00100368261337,(-0.000502467155457),0.00128662586212,(-0.00791084766388),(-0.0029608309269),(-9.88841056824e-05),0.00322100520134,0.000847488641739,0.00371709465981,(-0.00555008649826),0.00296711921692,0.000331342220306,(-0.00118160247803),5.90085983276e-06,(-0.00173324346542),0.000412106514204,0.00123479962349,(-0.00305420160294),(-0.00215065479256),0.00163555145286,(-0.000953108072054),0.000614762306213,0.000908225774992,0.00048494339012,(-0.000483691692352),(-0.000554740428697),7.38501548767e-05,0.00081250071571,(-0.000901550054095),0.000310897828285,(-0.000621259211584),(-0.000185772775012),(-0.00190280377547),(-0.00136347114608),(-0.00011076032547),(-0.000981390467359),(-0.000211283551607),(-0.000209435801253),(-0.000192612381625),0.000688269776219,0.000475272597441,7.86782218256e-05,0.000946849715547,0.000260502293941,(-0.000146910263084),(-0.000299393712567),(-0.000187910479326),(-7.60844247907e-05),0.00028759373231,(-3.86591100323e-05),3.68534238078e-05,0.000336129690368,(-3.89902345432e-05),(-1.43036213558e-05),(-5.97480318447e-05),5.88862203585e-05,1.93624466647e-05,(-0.000176798354687),6.76964953072e-05,(-8.52955515711e-05),0.000163251573667,9.59315818818e-05,(-4.75127202435e-05),(-8.68375510663e-05),(-9.07495416413e-06),3.13012907327e-05,(-6.84370795625e-05),1.07318968503e-05,1.32530183237e-05,3.6496821167e-05,(-2.51783774274e-05),(-9.4404582569e-06),8.39972949507e-06,5.65299922073e-06,8.16137651327e-06,3.55001900516e-05,3.61079578397e-05,6.93046778224e-05,0.00010193158289,0.000174094746967,0.000226781082461,0.000340301193205,0.000481000262539,0.00069745455005,0.00101223143974,0.00144869245139,0.00208313152592,0.00298576586056,0.00428098178458,0.00612486085572,0.00874775683934,0.0124680287038,0.0177336640594,0.0251594860152,0.035593666077,0.0501903718677,0.0704954991007,0.0985454087603,0.136951956587,0.188925753488,0.258164958415,0.348441158295,0.462649957986,0.601023396794,0.758326593995,0.920489408539,1.06269069038,1.15321373684,1.16781524603,1.11212351167,1.03336916564,0.996707332772,1.03336916564,1.11212351166,1.16781524603,1.15321373688,1.06269069038,0.920489408974,0.758326598813,0.601023387906,0.462649957986,0.348441219058,0.258164975096,0.188925673051,0.136951956587,0.0985454087603,0.0704954748462,0.0501901165008,0.0355934482345,0.0251589612519,0.0177336640594,0.0124680231231,0.00874775683934,0.00612653857053,0.00428118876874,0.0029863115389,0.00208094018933,0.00144869245139,0.00101223143974,0.00069745455005,0.000488195080834,0.000331923578869,0.000215606136976,0.000144180734651,9.8005142263e-05,6.87738254328e-05,4.14984431245e-05,3.55001900516e-05,8.16137651327e-06,5.65299922073e-06,7.13774466021e-06,(-9.62672277183e-06),(-2.42465345082e-05),3.03649940179e-05,5.16756597335e-05,6.40109958567e-05,7.73621352437e-05,(-4.52054021025e-05),9.830020349e-05,(-8.68487269372e-05),(-4.73312308031e-05),9.59315818818e-05,9.80144126288e-05,(-8.51504332786e-05),1.54009851485e-05,0.00016378987857,(-2.59743903825e-05),(-4.43490609996e-05),0.000120071730862,0.000191540984815,0.000208912910466,0.000311758824864,3.68534238078e-05,4.33270638496e-05,0.000205257366133,(-0.000148526423345),0.000195943433027,(-0.000506743370579),(-0.000166639400504),(-0.000252321168546),(-0.000190079079175),0.000250339598097,0.000709608257694,(-0.000248387413649),(-0.000779107185053),0.000463217516653,0.000991627586927,0.000379383572636,0.000522702938042,1.7285351305e-05,(-0.000424727794552),(-0.000185728071529),(-0.000663563607759),(-0.00115394592171),0.000593274832227,0.000725835562207,0.00169306993484,(-0.000572204589844),(-0.000974833965302),0.000472038984526,0.000908225774992,0.000966548919678,(-0.000953108072054),0.00163555145286,(-0.00304415822006),0.00320902466774,0.00175756216049,0.000387668609847,0.00378301739693,5.90085983276e-06,(-0.00343054533005),0.00288432836533,0.000209718942642,(-0.00385281443596),(-0.00203746557236),(-0.00458288192749),(-0.000941962003708),0.000919014215469,(-0.00495398044586),(-0.000849992036819),0.00128662586212,(-0.000868737697601),0.000655770301819,0.00317186117172,0.00731235742569,(-0.000495076179504),0.00275492668152,(-0.00704824924469),0.00796586275101,(-0.00413551926613),(-0.00159281492233),(-0.0100769996643),0.00925195217133};
local Saturate_table_c2 = {0.000801004469395,0.000108684413135,(-0.000353774055839),0.00024532340467,(-5.9531070292e-05),1.59563496709e-05,(-5.52888959646e-05),2.53049656749e-05,2.42041423917e-05,1.90082937479e-05,3.79756093025e-05,(-0.000341020524502),(-4.42750751972e-06),(-8.63075256348e-05),0.000247326679528,(-2.68677249551e-05),(-8.05463641882e-05),(-4.12920489907e-05),0.000247649848461,(-0.000148752704263),0.000148244202137,6.32274895906e-05,6.35264441371e-05,(-8.18455591798e-05),9.82740894031e-05,1.5308149159e-05,0.000124632380903,5.94947487187e-05,(-5.56241720915e-05),(-6.70598819781e-05),(-0.000110040418804),(-5.14592975236e-05),(-7.18263909292e-05),(-1.11004337668e-05),2.35745683383e-05,0.000124004669487,(-4.60352748419e-05),(-2.37859784846e-06),9.89004038559e-05,2.73324549482e-05,(-6.29341225533e-06),7.91805797178e-05,0.000101404264704,(-2.69226728093e-05),5.86826357107e-05,1.01234768195e-05,1.55679887897e-05,8.06060619141e-07,(-1.41342156539e-05),(-8.36001500204e-06),3.12365906296e-06,(-1.12578226776e-05),(-1.49584306115e-05),1.8947302415e-05,7.92603609057e-06,(-5.52784231189e-06),8.10905977744e-06,(-4.98019684159e-06),5.2960418131e-06,1.37771675668e-05,3.39519986596e-05,(-1.86017551584e-05),4.45442121588e-06,(-1.42728982837e-05),(-2.12957745305e-06),6.48928907054e-06,3.03111761468e-07,(-6.16845751011e-06),6.86138493222e-06,(-5.2401095374e-06),(-6.26650277979e-06),2.12212597432e-05,(-3.26180634858e-06),(-1.62243054547e-08),(-3.33253021267e-06),6.13793256576e-06,(-5.37321630389e-06),(-1.83463313874e-07),5.08240391639e-06,5.03752745828e-06,2.76811333322e-06,2.49300127564e-06,(-1.38122860704e-06),1.75968104088e-06,2.45123445097e-06,3.95883575521e-06,6.76664856769e-06,1.02331492045e-05,1.10807810358e-05,1.64651018508e-05,2.69199497396e-05,3.80055661466e-05,5.71398160432e-05,8.43089872475e-05,0.00012733353509,0.000189932799636,0.000283092479229,0.000421081060672,0.000626659350395,0.000933251555708,0.00138988817124,0.00206834846855,0.00307739414243,0.00457655049695,0.0068005879114,0.0100945268542,0.0149591212842,0.0221136334332,0.0325713074114,0.0477159733735,0.0693445009869,0.099588708723,0.140541484206,0.19329160765,0.255993897768,0.320850540636,0.370984774052,0.3804715946,0.322614518938,0.187810383488,0.,(-0.187810383488),(-0.322614518929),(-0.3804715946),(-0.370984773761),(-0.320850540636),(-0.255993897768),(-0.19329160765),(-0.14054148855),(-0.099588708723),(-0.0693445339939),(-0.0477159402051),(-0.0325712749887),(-0.0221136334332),(-0.0149591212842),(-0.0100944745281),(-0.00680077478849),(-0.00457651513373),(-0.00307763253646),(-0.00206834846855),(-0.00138988817124),(-0.000933251555708),(-0.000626626240368),(-0.000421244065187),(-0.000283092479229),(-0.000190107037952),(-0.00012733353509),(-8.43089872475e-05),(-5.71398160432e-05),(-3.81631768249e-05),(-2.69185195094e-05),(-1.78645088909e-05),(-1.50874199605e-05),(-9.73407871641e-06),(-7.54895750532e-06),(-3.59911306447e-06),(-2.45123445097e-06),(-1.75968104088e-06),1.38122860704e-06,2.93899082493e-06,(-2.76811333322e-06),(-5.27132839778e-06),2.08342403596e-06,7.40819766065e-06,5.37368196518e-06,1.56766031978e-06,7.17937911077e-06,5.44996915153e-06,(-1.27227156668e-05),(-4.51537719215e-06),6.26650277979e-06,7.41707029306e-06,2.52239622256e-06,(-1.43131937165e-05),5.69088729918e-06,1.9897068384e-06,1.01405829724e-05,7.47890010189e-06,3.4876031016e-05,2.44481335798e-05,(-5.69101448633e-06),(-1.37771675668e-05),8.54946582507e-06,1.97756529232e-05,(-8.07739468911e-06),1.0827999084e-05,(-1.47861581752e-05),(-1.15246614953e-05),(-2.29021603531e-05),(-5.84777912138e-06),2.65240356612e-06,1.34534181768e-05,(-2.56681829001e-05),3.24891787074e-06,(-1.27321115642e-05),7.2303223746e-06,1.92755830568e-05,5.94737937689e-05,(-5.58318571464e-05),(-7.67819584269e-05),5.19165764956e-06,(-0.000126290135121),(-9.89004038559e-05),(-9.6787698709e-06),0.00014694454147,0.000167402904474,(-1.0938383646e-05),1.17151066661e-05,4.559382797e-05,5.14592975236e-05,0.000142393633723,6.70598819781e-05,5.56241720915e-05,(-0.000168143771596),8.74008983374e-05,1.70571729541e-05,(-4.32124361467e-05),4.46755439043e-06,(-6.35264441371e-05),(-6.32274895906e-05),3.81488353014e-05,0.000148752704263,(-0.000167308375239),(-0.000148515217006),(-0.000173106789589),2.93776392937e-05,0.000109757296741,(-3.92682850361e-05),0.000121377408504,0.000341020524502,2.964399755e-05,0.000207996927202,(-2.42041423917e-05),0.000107062980533,1.0714866221e-05,(-1.59563496709e-05),(-0.0001285020262),(-3.90335917473e-05),0.000264163129032,(-0.000108684413135),(-0.000801004469395),3.44216823578e-05};
function this.Saturate_table(x)
   local index = this.clip(this.int((5. * (x + 24.))),0,240);
   return (Saturate_table_c0[index+1] + (x * (Saturate_table_c1[index+1] + (Saturate_table_c2[index+1] * x))));

end

function this.Saturate_process(x)
   return this.Saturate_table(x);

end

function this.Saturate_noteOn(note,velocity,channel)

end

function this.Saturate_noteOff(note,channel)

end

function this.Saturate_controlChange(control,value,channel)

end

function this.Saturate_default()

end

function this.Lfo__ctx_type_0_init()
   local _ctx = {};
   _ctx.x4 = 0.;
   _ctx.x3 = 0.;
   _ctx.x2 = 0.;
   return _ctx;

end

function this.Lfo_soft_init()
   return this.Lfo__ctx_type_0_init();
end

function this.Lfo_soft(_ctx,x1)
   local o = ((x1 + _ctx.x2 + _ctx.x3 + _ctx.x4) * 0.25);
   local _tmp_81_0 = x1;
   local _tmp_81_1 = _ctx.x2;
   local _tmp_81_2 = _ctx.x3;
   _ctx.x2 = _tmp_81_0;
   _ctx.x3 = _tmp_81_1;
   _ctx.x4 = _tmp_81_2;
   return o;

end

function this.Lfo__ctx_type_1_init()
   local _ctx = {};
   _ctx.rate = 0.;
   _ctx.phase = 0.;
   _ctx._inst76 = this.Lfo__ctx_type_0_init();
   _ctx._inst74 = this.Util__ctx_type_0_init();
   _ctx._inst72 = this.Util__ctx_type_1_init();
   return _ctx;

end

function this.Lfo_process_init()
   return this.Lfo__ctx_type_1_init();
end

function this.Lfo_process(_ctx,cv,shape,reset)
   if this.Util_change(_ctx._inst72,cv) then
      _ctx.rate = this.Util_cvToRate((cv + (-0.3)));

   end
   _ctx.phase = (_ctx.phase + _ctx.rate);
   if (_ctx.phase > 2.) then
      _ctx.phase = (_ctx.phase + (-2.));
   end
   local breset = (reset > 0.);
   if this.Util_edge(_ctx._inst74,breset) then
      _ctx.phase = 0.;

   end
   local tmp = (_ctx.phase + (-1.));
   local o = 0.0;
   if (shape < 1.) then
      o = tmp;
   else

      local _cond_86 = false;
      _cond_86 = (shape < 2.);
      if _cond_86 then
         o = ((this.abs(tmp) * 2.) + (-1.));
      else

         local _cond_87 = false;
         _cond_87 = (tmp > 0.);
         if _cond_87 then
            o = 1.;
         else

            o = 0.;
         end

      end

   end
   return this.Lfo_soft(_ctx._inst76,o);

end

function this.Lfo_noteOn_init()
   return this.Lfo__ctx_type_1_init();
end

function this.Lfo_noteOn(_ctx,note,velocity,channel)

end

function this.Lfo_noteOff_init()
   return this.Lfo__ctx_type_1_init();
end

function this.Lfo_noteOff(_ctx,note,channel)

end

function this.Lfo_controlChange_init()
   return this.Lfo__ctx_type_1_init();
end

function this.Lfo_controlChange(_ctx,control,value,channel)

end

function this.Lfo_default_init()
   return this.Lfo__ctx_type_1_init();
end

function this.Lfo_default(_ctx)

end

local Tables_nsine_c0 = {0.,(-5.90418441495e-05),(-0.000294355284162),(-0.000820613405635),(-0.00174824530631),(-0.00318177437696),(-0.00521819226454),(-0.0079453784365),(-0.01144057506),(-0.0157689266592),(-0.020982093723),(-0.0271169490987),(-0.0341943656348),(-0.042218103117),(-0.0511738020973),(-0.0610280917185),(-0.0717278181245),(-0.0831993994843),(-0.0953483130839),(-0.108058719318),(-0.121193226793),(-0.134592802077),(-0.148076826967),(-0.161443305451),(-0.174469221815),(-0.186911050643),(-0.198505418722),(-0.208969918115),(-0.218004068951),(-0.22529042972),(-0.230495852138),(-0.233272876911),(-0.233261266008),(-0.230089666352),(-0.223377399128),(-0.212736368255),(-0.197773080894),(-0.178090772224),(-0.153291626179),(-0.12297908315),(-0.086760225221),(-0.0442482289322),0.00493512487765,0.0611568950799,0.124770389357,0.196112550088,0.275501328958,0.36323306251,0.459579861053,0.564787023575,0.679070491332,0.80261435294,0.935568413718,1.0780458421,1.23012090577,1.39182681003,1.56315365078,1.74404649417,1.93440359469,2.13407476326,2.34285989616,2.56050767554,2.78671445157,3.02112331572,3.2633233741,3.51284922923,3.76918067786,4.03174263162,4.29990526687,4.57298440873,4.85024215432,5.13088773838,5.41407864429,5.69892196235,5.98447599622,6.26975211741,6.55371686698,6.83529430235,7.1133685864,7.38678681475,7.65436207638,7.91487674168,8.16708597091,8.4097214353,8.64149524171,8.86110405138,9.0672333817,9.25856207956,9.43376695367,9.59152755261,9.73053107428,9.8494773919,9.94708418097,10.0220921306,10.0732702224,10.0994210595,10.0993862268,10.0720516651,10.0163530388,9.93128107889,9.81588688025,9.66928713478,9.49066927922,9.27929653768,9.03451283887,8.7557475876,8.44252027052,8.09444487609,7.71123410928,7.29270338139,6.83877455635,6.34947943448,5.82496295645,5.2654861094,4.67142851902,4.04329071125,3.38169602896,2.68739218875,1.96125246506,1.20427648902,0.417590650701,(-0.397551904965),(-1.23977169848),(-2.10756375885),(-2.99929889707),(-3.91322541464),(-4.84747125103),(-5.80004657308),(-6.76884680657)};
local Tables_nsine_c1 = {6.28444668982,6.2995636808,6.3296883534,6.37460252779,6.43398003013,6.50738800342,6.5942886485,6.69404138917,6.80590545432,6.92904286812,7.06252183832,7.20532053113,7.35633121991,7.51436479368,7.67815560998,7.84636667581,8.01759513889,8.19037807064,8.36319852101,8.53449182466,8.70265213679,8.86603917626,9.02298515277,9.17180185434,9.31078787052,9.43823592643,9.55244030205,9.65170431101,9.73434781272,9.79871473147,9.84318055607,9.86615979348,9.86611334988,9.84155581293,9.7910626091,9.71327700994,9.60691696212,9.47078171606,9.30375822857,9.10482731586,8.87306953342,8.60767076063,8.30792746844,7.9732516493,7.60317538995,7.19735506832,6.75557515687,6.27775161636,5.76393486473,5.21431230729,4.62921041589,4.00909634562,3.35457907986,2.66641009503,1.94548353841,1.19283591395,0.40964527229,(-0.402770097242),(-1.24295347286),(-2.10931200415),(-3.00011951049),(-3.9135197699),(-4.84753029286),(-5.80004657308),(-6.76884680657),(-7.75159706875),(-8.74585693689),(-9.74908554509),(-10.7586480561),(-11.771822534),(-12.7858071997),(-13.7977280506),(-14.8046468226),(-15.8035692747),(-16.7914537717),(-17.7652201421),(-18.7217587855),(-19.6579400033),(-20.5706235272),(-21.4566682163),(-22.3129418941),(-23.1363312981),(-23.9237521103),(-24.6721590393),(-25.3785559229),(-26.0400058209),(-26.6536410662),(-27.2166732421),(-27.7264030569),(-28.1802300814),(-28.5756623202),(-28.9103255841),(-29.1819726354),(-29.388492072),(-29.5279169251),(-29.5984329368),(-29.5983864932),(-29.5262921819),(-29.3808399497),(-29.1609018326),(-28.8655382353),(-28.4940037342),(-28.0457523836),(-27.5204425023),(-26.9179409212),(-26.238326674),(-25.4818941131),(-24.6491554354),(-23.7408426046),(-22.7579086576),(-21.7015283844),(-20.5730983716),(-19.3742364053),(-18.1067802246),(-16.7727856255),(-15.3745239111),(-13.9144786909),(-12.3953420284),(-10.8200099449),(-9.19157728222),(-7.51333193369),(-5.78874845403),(-4.02148105771),(-2.21535602182),(-0.374363506846),1.49735118646,3.39549690495,5.31564645633,7.25324692331};
local Tables_nsine_c2 = {(-0.484400116746),(-1.45203338793),(-2.4161685835),(-3.37448301732),(-4.32466802598),(-5.26443453057),(-6.19151855127),(-7.10368666145),(-7.99874136827),(-8.87452640652),(-9.72893193335),(-10.559899611),(-11.3654275655),(-12.1435752096),(-12.8924679173),(-13.6103015405),(-14.2953467553),(-14.9459532275),(-15.5605535893),(-16.1376672146),(-16.6759037861),(-17.1739666447),(-17.6306559134),(-18.0448713878),(-18.4156151864),(-18.741994155),(-19.0232220181),(-19.2586212731),(-19.4476248227),(-19.5897773406),(-19.684736369),(-19.7322731434),(-19.7322731434),(-19.684736369),(-19.5897773406),(-19.4476248227),(-19.2586212731),(-19.0232220181),(-18.741994155),(-18.4156151864),(-18.0448713877),(-17.6306559134),(-17.1739666447),(-16.6759037861),(-16.1376672146),(-15.5605535893),(-14.9459532275),(-14.2953467553),(-13.6103015405),(-12.8924679173),(-12.1435752096),(-11.3654275655),(-10.559899611),(-9.72893193335),(-8.87452640654),(-7.99874136827),(-7.10368666146),(-6.19151855125),(-5.26443453057),(-4.32466802598),(-3.3744830173),(-2.4161685835),(-1.45203338794),(-0.484400116746),0.484400116746,1.45203338794,2.4161685835,3.3744830173,4.32466802598,5.26443453057,6.19151855125,7.10368666145,7.99874136827,8.87452640654,9.72893193334,10.559899611,11.3654275655,12.1435752096,12.8924679173,13.6103015405,14.2953467552,14.9459532275,15.5605535893,16.1376672146,16.6759037861,17.1739666447,17.6306559134,18.0448713878,18.4156151864,18.741994155,19.0232220181,19.2586212731,19.4476248227,19.5897773406,19.684736369,19.7322731434,19.7322731434,19.684736369,19.5897773406,19.4476248227,19.2586212731,19.0232220181,18.741994155,18.4156151864,18.0448713877,17.6306559134,17.1739666447,16.6759037861,16.1376672146,15.5605535893,14.9459532275,14.2953467553,13.6103015405,12.8924679173,12.1435752096,11.3654275655,10.559899611,9.72893193335,8.87452640653,7.99874136827,7.10368666143,6.19151855126,5.26443453057,4.32466802598,3.37448301732,2.41616858347,1.45203338793,0.484400116746,(-0.484400116746)};
function this.Tables_nsine(x)
   local index = this.clip(this.int((127. * x)),0,127);
   return (Tables_nsine_c0[index+1] + (x * (Tables_nsine_c1[index+1] + (Tables_nsine_c2[index+1] * x))));

end

function this.Phase__ctx_type_0_init()
   local _ctx = {};
   _ctx.rate = 0.;
   _ctx.phase = 0.;
   _ctx._inst92 = this.Util__ctx_type_0_init();
   _ctx._inst90 = this.Util__ctx_type_1_init();
   this.Phase_default(_ctx);
   return _ctx;

end

function this.Phase_process_init()
   return this.Phase__ctx_type_0_init();
end

function this.Phase_process(_ctx,cv,reset)
   if this.Util_change(_ctx._inst90,cv) then
      _ctx.rate = this.Util_cvToRate_1024(cv);

   end
   if this.Util_edge(_ctx._inst92,(reset > 0.5)) then
      _ctx.phase = 0.;
   else

      _ctx.phase = (_ctx.phase + _ctx.rate);
   end
   if (_ctx.phase > 1024.) then
      _ctx.phase = (_ctx.phase + (-1024.));
   end
   return (_ctx.phase * 0.0009765625);

end

function this.Phase_noteOn_init()
   return this.Phase__ctx_type_0_init();
end

function this.Phase_noteOn(_ctx,note,velocity,channel)

end

function this.Phase_noteOff_init()
   return this.Phase__ctx_type_0_init();
end

function this.Phase_noteOff(_ctx,note,channel)

end

function this.Phase_controlChange_init()
   return this.Phase__ctx_type_0_init();
end

function this.Phase_controlChange(_ctx,control,value,channel)

end

function this.Phase_default_init()
   return this.Phase__ctx_type_0_init();
end

function this.Phase_default(_ctx)
   _ctx.rate = 0.759366720147;

end

function this.Blit__ctx_type_0_init()
   local _ctx = {};
   _ctx.scale = 0.;
   _ctx.m = 0;
   _ctx._inst101 = this.Util__ctx_type_1_init();
   this.Blit_pulse_start(_ctx);
   return _ctx;

end

function this.Blit_pulse_train_init()
   return this.Blit__ctx_type_0_init();
end

function this.Blit_pulse_train(_ctx,cv,phase)
   if this.Util_change(_ctx._inst101,cv) then
      _ctx.m = ((2 * this.int(this.Util_cvToperiod(cv))) + 1);
      _ctx.scale = (2. * this.Util_cvToperiod(cv));

   end
   local pi_phase = (phase * 0.5);
   local denominator = this.Tables_nsine(pi_phase);
   local out = 0.;
   if (denominator <= 1e-18) then
      out = 1.;

   else

      local m_phase = 0.0;
      m_phase = ((this.real(_ctx.m) * pi_phase) % 1.);
      local numerator = 0.0;
      numerator = this.Tables_nsine(m_phase);
      out = (numerator / (_ctx.scale * denominator));

   end
   return out;

end

function this.Blit_pulse_start_init()
   return this.Blit__ctx_type_0_init();
end

function this.Blit_pulse_start(_ctx)
   _ctx.m = 1349;
   _ctx.scale = 1349.49206955;

end

function this.Blit__ctx_type_1_init()
   local _ctx = {};
   _ctx.state_saw = 0.;
   _ctx.state_pulse = 0.;
   _ctx.rate = 0.;
   _ctx.output = 0.;
   _ctx._inst117 = this.Util__ctx_type_3_init();
   _ctx._inst114 = this.Blit__ctx_type_0_init();
   _ctx._inst113 = this.Blit__ctx_type_0_init();
   _ctx._inst111 = this.Phase__ctx_type_0_init();
   _ctx._inst109 = this.Util__ctx_type_1_init();
   this.Blit_init(_ctx);
   return _ctx;

end

function this.Blit_osc_blit_init()
   return this.Blit__ctx_type_1_init();
end

function this.Blit_osc_blit(_ctx,cv,pw,wave)
   local fixed_cv = 0.;
   if (wave < 1.) then
      fixed_cv = cv;

   else

      fixed_cv = (cv + (-0.1));

   end
   if this.Util_change(_ctx._inst109,fixed_cv) then
      _ctx.rate = this.Util_cvToRate(fixed_cv);

   end
   local phase = this.Phase_process(_ctx._inst111,fixed_cv,0.);
   local shift05 = (0.5 + (pw * 0.49));
   local shift = (phase + shift05);
   if (shift > 1.) then
      shift = (shift + (-1.));

   end
   local pulse1 = this.Blit_pulse_train(_ctx._inst113,fixed_cv,phase);
   local pulse2 = this.Blit_pulse_train(_ctx._inst114,fixed_cv,shift);
   _ctx.state_pulse = ((_ctx.state_pulse * 0.9995) + pulse1 + (- pulse2));
   _ctx.state_saw = ((_ctx.state_saw * 0.9995) + (((pulse1 + pulse2 + ((-2.) * _ctx.rate)) / shift05) * 0.5));
   if (wave < 1.) then
      _ctx.output = _ctx.state_pulse;

   else

      _ctx.output = (2. * _ctx.state_saw);

   end
   _ctx.output = this.Util_dcblock(_ctx._inst117,_ctx.output);
   return _ctx.output;

end

function this.Blit_init_init()
   return this.Blit__ctx_type_1_init();
end

function this.Blit_init(_ctx)
   _ctx.rate = 0.000741569062643;

end

function this.Blit__ctx_type_2_init()
   local _ctx = {};
   _ctx._inst120 = this.Blit__ctx_type_1_init();
   return _ctx;

end

function this.Blit_process_init()
   return this.Blit__ctx_type_2_init();
end

function this.Blit_process(_ctx,cv,pw,wave)
   return this.Blit_osc_blit(_ctx._inst120,cv,pw,wave);

end

function this.Blit_noteOn_init()
   return this.Blit__ctx_type_2_init();
end

function this.Blit_noteOn(_ctx,note,velocity,channel)

end

function this.Blit_noteOff_init()
   return this.Blit__ctx_type_2_init();
end

function this.Blit_noteOff(_ctx,note,channel)

end

function this.Blit_controlChange_init()
   return this.Blit__ctx_type_2_init();
end

function this.Blit_controlChange(_ctx,control,value,channel)

end

function this.Blit_default_init()
   return this.Blit__ctx_type_2_init();
end

function this.Blit_default(_ctx)

end

function this.Adsr__ctx_type_0_init()
   local _ctx = {};
   _ctx.target = 0.;
   _ctx.state = 0;
   _ctx.scale = 0.;
   _ctx.rate = 0.;
   _ctx.out = 0.;
   _ctx._inst140 = this.Util__ctx_type_4_init();
   _ctx._inst133 = this.Util__ctx_type_0_init();
   return _ctx;

end

function this.Adsr_do_init()
   return this.Adsr__ctx_type_0_init();
end

function this.Adsr_do(_ctx,gate,a,d,s,r)
   local a_rate = (1. / ((100. * a) + 0.01));
   local d_rate = (1. / ((100. * d) + 0.01));
   local r_rate = (1. / ((100. * r) + 0.01));
   _ctx.out = (_ctx.out + ((_ctx.target + (- _ctx.out)) * _ctx.rate * 0.004));
   local bgate = (gate > 0.);
   if (_ctx.state == 0) then
      local _cond_151 = false;
      _cond_151 = this.Util_edge(_ctx._inst133,bgate);
      if _cond_151 then
         _ctx.state = 1;
         _ctx.scale = (gate * 0.2);

      end
      _ctx.rate = r_rate;
      _ctx.target = 0.;

   end
   if (_ctx.state == 1) then
      local _cond_153 = false;
      _cond_153 = (bgate == false);
      if _cond_153 then
         _ctx.state = 0;

      end
      local _cond_154 = false;
      _cond_154 = (_ctx.out > 1024.);
      if _cond_154 then
         _ctx.state = 2;

      end
      _ctx.rate = a_rate;
      _ctx.target = 1228.8;

   end
   if (_ctx.state == 2) then
      local _cond_156 = false;
      _cond_156 = (bgate == false);
      if _cond_156 then
         _ctx.state = 0;

      end
      _ctx.rate = d_rate;
      _ctx.target = (s * 1024.);

   end
   return (this.Util_smooth(_ctx._inst140,_ctx.scale) * this.clip((_ctx.out * 0.0009765625),0.,1.));

end

function this.Adsr__ctx_type_1_init()
   local _ctx = {};
   _ctx.knob4 = 0.;
   _ctx.knob3 = 0.;
   _ctx.knob2 = 0.;
   _ctx.knob1 = 0.;
   _ctx._inst142 = this.Adsr__ctx_type_0_init();
   return _ctx;

end

function this.Adsr_process_init()
   return this.Adsr__ctx_type_1_init();
end

function this.Adsr_process(_ctx,gate)
   return this.Adsr_do(_ctx._inst142,gate,_ctx.knob1,_ctx.knob2,_ctx.knob3,_ctx.knob4);

end

function this.Adsr_noteOn_init()
   return this.Adsr__ctx_type_1_init();
end

function this.Adsr_noteOn(_ctx,note,velocity,channel)

end

function this.Adsr_noteOff_init()
   return this.Adsr__ctx_type_1_init();
end

function this.Adsr_noteOff(_ctx,note,channel)

end

function this.Adsr_controlChange_init()
   return this.Adsr__ctx_type_1_init();
end

function this.Adsr_controlChange(_ctx,control,value,channel)
   if (control == 1) then
      _ctx.knob1 = (this.real(value) * 0.00787401574803);

   end
   if (control == 2) then
      _ctx.knob2 = (this.real(value) * 0.00787401574803);

   end
   if (control == 3) then
      _ctx.knob3 = (this.real(value) * 0.00787401574803);

   end
   if (control == 4) then
      _ctx.knob4 = (this.real(value) * 0.00787401574803);

   end

end

function this.Adsr_default_init()
   return this.Adsr__ctx_type_1_init();
end

function this.Adsr_default(_ctx)
   _ctx.knob1 = 0.;
   _ctx.knob2 = 0.5;
   _ctx.knob3 = 1.;
   _ctx.knob4 = 0.5;

end

function this.Voice_4__ctx_type_0_init()
   local _ctx = {};
   _ctx.sustain = 0.;
   _ctx.release = 0.;
   _ctx.pw4 = 0.;
   _ctx.pw3 = 0.;
   _ctx.pw2 = 0.;
   _ctx.pw1 = 0.;
   _ctx.lfo_shape = 0.;
   _ctx.lfo_reset = 0.;
   _ctx.lfo_rate = 0.;
   _ctx.lfo_pw = 0.;
   _ctx.lfo_flt = 0.;
   _ctx.lfo_cv = 0.;
   _ctx.level4 = 0.;
   _ctx.level3 = 0.;
   _ctx.level2 = 0.;
   _ctx.level1 = 0.;
   _ctx.flt_shape = 0;
   _ctx.flt_res = 0.;
   _ctx.flt_cut = 0.;
   _ctx.decay = 0.;
   _ctx.attack = 0.;
   _ctx._inst169 = this.Adsr__ctx_type_0_init();
   _ctx._inst168 = this.Svf__ctx_type_1_init();
   _ctx._inst167 = this.Tricore__ctx_type_0_init();
   _ctx._inst166 = this.Blit__ctx_type_2_init();
   _ctx._inst165 = this.Blit__ctx_type_2_init();
   _ctx._inst164 = this.Blit__ctx_type_2_init();
   _ctx._inst163 = this.Lfo__ctx_type_1_init();
   return _ctx;

end

function this.Voice_4_process_init()
   return this.Voice_4__ctx_type_0_init();
end

function this.Voice_4_process(_ctx,cv,vel,gate)
   local lfo = this.Lfo_process(_ctx._inst163,_ctx.lfo_rate,_ctx.lfo_shape,(gate * _ctx.lfo_reset));
   local mod_pw = (_ctx.lfo_pw * lfo);
   local mod_cv = (_ctx.lfo_cv * lfo);
   local mod_flt = (_ctx.lfo_flt * lfo);
   local o1 = this.Blit_process(_ctx._inst164,(cv + 0.0001 + mod_cv),(_ctx.pw1 + mod_pw),0.);
   local o2 = this.Blit_process(_ctx._inst165,(cv + 0.0002 + mod_cv),(_ctx.pw2 + mod_pw),1.);
   local o3 = this.Blit_process(_ctx._inst166,(cv + _ctx.pw3 + mod_cv),(_ctx.pw1 + mod_pw),0.);
   local sub = this.Saturate_process((((5. * _ctx.pw4) + 2.) * this.Tricore_process(_ctx._inst167,(cv + mod_cv),0.,1.)));
   local o = ((_ctx.level1 * o1) + (_ctx.level2 * o2) + (_ctx.level3 * o3) + (_ctx.level4 * sub));
   local f = this.Svf_process(_ctx._inst168,o,(_ctx.flt_cut + mod_flt),_ctx.flt_res,_ctx.flt_shape);
   local env = this.Adsr_do(_ctx._inst169,gate,_ctx.attack,_ctx.decay,_ctx.sustain,_ctx.release);
   return (env * f);

end

function this.Voice_4_noteOn_init()
   return this.Voice_4__ctx_type_0_init();
end

function this.Voice_4_noteOn(_ctx,note,velocity,channel)

end

function this.Voice_4_noteOff_init()
   return this.Voice_4__ctx_type_0_init();
end

function this.Voice_4_noteOff(_ctx,note,channel)

end

function this.Voice_4_controlChange_init()
   return this.Voice_4__ctx_type_0_init();
end

function this.Voice_4_controlChange(_ctx,control,value,channel)
   if (control == 30) then
      _ctx.level1 = (this.real(value) * 0.00787401574803);

   end
   if (control == 31) then
      _ctx.level2 = (this.real(value) * 0.00787401574803);

   end
   if (control == 32) then
      _ctx.level3 = (this.real(value) * 0.00787401574803);

   end
   if (control == 33) then
      _ctx.level4 = (this.real(value) * 0.00787401574803);

   end
   if (control == 34) then
      _ctx.pw1 = (this.real(value) * 0.00787401574803);

   end
   if (control == 35) then
      _ctx.pw2 = (this.real(value) * 0.00787401574803);

   end
   if (control == 36) then
      _ctx.pw3 = (0.000787401574803 * this.real(value));

   end
   if (control == 37) then
      _ctx.pw4 = (this.real(value) * 0.00787401574803);

   end
   if (control == 38) then
      _ctx.lfo_rate = this.Util_map(this.real(value),0.,127.,(-0.4),0.1);

   end
   if (control == 39) then
      _ctx.lfo_shape = (0.0236220472441 * this.real(value));

   end
   if (control == 40) then
      _ctx.lfo_pw = this.Util_map(this.real(value),0.,127.,(-1.),1.);

   end
   if (control == 41) then
      _ctx.lfo_cv = this.Util_map(this.real(value),0.,127.,(-0.1),0.1);

   end
   if (control == 42) then
      _ctx.lfo_flt = this.Util_map(this.real(value),0.,127.,(-0.3),0.3);

   end
   if (control == 43) then
      local _cond_208 = false;
      _cond_208 = (value > 0);
      if _cond_208 then
         _ctx.lfo_reset = 1.;
      else

         _ctx.lfo_reset = 0.;
      end

   end
   if (control == 44) then
      _ctx.flt_cut = this.Util_map(this.real(value),0.,127.,(-0.2),0.5);

   end
   if (control == 45) then
      _ctx.flt_res = (this.real(value) * 0.00787401574803);

   end
   if (control == 46) then
      _ctx.flt_shape = ((value * 4) / 127);

   end
   if (control == 47) then
      _ctx.attack = (this.real(value) * 0.00787401574803);

   end
   if (control == 48) then
      _ctx.decay = (this.real(value) * 0.00787401574803);

   end
   if (control == 49) then
      _ctx.sustain = (this.real(value) * 0.00787401574803);

   end
   if (control == 50) then
      _ctx.release = (this.real(value) * 0.00787401574803);

   end

end

function this.Voice_4_default_init()
   return this.Voice_4__ctx_type_0_init();
end

function this.Voice_4_default(_ctx)

end


function this.process(ctx,cv,vel,gate) return this.Voice_4_process(ctx,cv,vel,gate) end
function this.noteOn(ctx,note,velocity,channel) return this.Voice_4_noteOn(ctx,note,velocity,channel) end
function this.noteOff(ctx,note,channel) return this.Voice_4_noteOff(ctx,note,channel) end
function this.controlChange(ctx,control,value,channel) return this.Voice_4_controlChange(ctx,control,value,channel) end
function this.init() return this.Voice_4_process_init() end
function this.default(ctx) return this.Voice_4_default(ctx) end
this.config = { inputs = 4, outputs = 1, noteon_inputs = 4, noteoff_inputs = 3, controlchange_inputs = 4, is_active = true }
return this

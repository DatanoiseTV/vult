

function ternary(cond,then_,else_) if cond then return then_() else return else_() end end
function ternary_value(cond,then_,else_) if cond then return then_ else return else_ end end
function eps()              return 1e-18; end
function pi()               return 3.1415926535897932384; end
function random()           return math.random(); end
function irandom()          return math.floor(math.random() * 4294967296); end
function clip(x,low,high)   if x < low then return low else if x > high then return high else return x end end end
function real(x)            return x; end
function int(x)             local int_part,_ = math.modf(x) return int_part; end
function sin(x)             return math.sin(x); end
function cos(x)             return math.cos(x); end
function abs(x)             return math.abs(x); end
function exp(x)             return math.exp(x); end
function floor(x)           return math.floor(x); end
function tan(x)             return math.tan(x); end
function tanh(x)            return math.tanh(x); end
function pow(a,b)           return math.pow(a,b); end
function log10(x)           return math.log10(x); end
function log(x)           return math.log(x); end
function sqrt(x)            return x; end
function set(a, i, v)       a[i+1]=v; end
function get(a, i)          return a[i+1]; end
function makeArray(size, v) local a = {}; for i=1,size do a[i]=v end return a; end
function makeComplexArray(size, f) local a = {}; for i=1,size do a[i]=f() end return a; end
function wrap_array(a)      return a; end

function Gates_velToCV(vel)
   return (0.0078741 * real(vel));
end

function Gates__ctx_type_1_init()
   local _ctx = {};
   _ctx.vel = makeArray(8,0);
   _ctx.gates_state_ret_7 = 0.;
   _ctx.gates_state_ret_6 = 0.;
   _ctx.gates_state_ret_5 = 0.;
   _ctx.gates_state_ret_4 = 0.;
   _ctx.gates_state_ret_3 = 0.;
   _ctx.gates_state_ret_2 = 0.;
   _ctx.gates_state_ret_1 = 0.;
   _ctx.gates_state_ret_0 = 0.;
   return _ctx;

end

function Gates_gates_noteOn_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_noteOn(_ctx,note,velocity)
   if ((note >= 36) and (note <= 43)) then
      local n = (-36 + note);
      set(_ctx.vel,n,velocity);

   end
end

function Gates_gates_noteOff_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_noteOff(_ctx,note)
   if ((note >= 36) and (note <= 43)) then
      local n = (-36 + note);
      set(_ctx.vel,n,0);

   end
end

function Gates_gates_state_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state(_ctx)
   local vel1 = Gates_velToCV(get(_ctx.vel,0));
   local vel2 = Gates_velToCV(get(_ctx.vel,1));
   local vel3 = Gates_velToCV(get(_ctx.vel,2));
   local vel4 = Gates_velToCV(get(_ctx.vel,3));
   local vel5 = Gates_velToCV(get(_ctx.vel,4));
   local vel6 = Gates_velToCV(get(_ctx.vel,5));
   local vel7 = Gates_velToCV(get(_ctx.vel,6));
   local vel8 = Gates_velToCV(get(_ctx.vel,7));
   _ctx.gates_state_ret_0 = vel1;
   _ctx.gates_state_ret_1 = vel2;
   _ctx.gates_state_ret_2 = vel3;
   _ctx.gates_state_ret_3 = vel4;
   _ctx.gates_state_ret_4 = vel5;
   _ctx.gates_state_ret_5 = vel6;
   _ctx.gates_state_ret_6 = vel7;
   _ctx.gates_state_ret_7 = vel8;
   return ;

end

function Gates_gates_state_ret_0_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_0(_ctx)
   return _ctx.gates_state_ret_0;
end

function Gates_gates_state_ret_1_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_1(_ctx)
   return _ctx.gates_state_ret_1;
end

function Gates_gates_state_ret_2_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_2(_ctx)
   return _ctx.gates_state_ret_2;
end

function Gates_gates_state_ret_3_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_3(_ctx)
   return _ctx.gates_state_ret_3;
end

function Gates_gates_state_ret_4_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_4(_ctx)
   return _ctx.gates_state_ret_4;
end

function Gates_gates_state_ret_5_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_5(_ctx)
   return _ctx.gates_state_ret_5;
end

function Gates_gates_state_ret_6_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_6(_ctx)
   return _ctx.gates_state_ret_6;
end

function Gates_gates_state_ret_7_init()
   return Gates__ctx_type_1_init();
end

function Gates_gates_state_ret_7(_ctx)
   return _ctx.gates_state_ret_7;
end

function Gates__ctx_type_2_init()
   local _ctx = {};
   _ctx.process_ret_7 = 0.;
   _ctx.process_ret_6 = 0.;
   _ctx.process_ret_5 = 0.;
   _ctx.process_ret_4 = 0.;
   _ctx.process_ret_3 = 0.;
   _ctx.process_ret_2 = 0.;
   _ctx.process_ret_1 = 0.;
   _ctx.process_ret_0 = 0.;
   _ctx.gates = Gates__ctx_type_1_init();
   _ctx.channel_in = 0;
   return _ctx;

end

function Gates_process_init()
   return Gates__ctx_type_2_init();
end

function Gates_process(_ctx,c)
   _ctx.channel_in = c;
   Gates_gates_state(_ctx.gates);
   _ctx.process_ret_0 = Gates_gates_state_ret_0(_ctx.gates);
   _ctx.process_ret_1 = Gates_gates_state_ret_1(_ctx.gates);
   _ctx.process_ret_2 = Gates_gates_state_ret_2(_ctx.gates);
   _ctx.process_ret_3 = Gates_gates_state_ret_3(_ctx.gates);
   _ctx.process_ret_4 = Gates_gates_state_ret_4(_ctx.gates);
   _ctx.process_ret_5 = Gates_gates_state_ret_5(_ctx.gates);
   _ctx.process_ret_6 = Gates_gates_state_ret_6(_ctx.gates);
   _ctx.process_ret_7 = Gates_gates_state_ret_7(_ctx.gates);
   return ;

end

function Gates_process_ret_0_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_0(_ctx)
   return _ctx.process_ret_0;
end

function Gates_process_ret_1_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_1(_ctx)
   return _ctx.process_ret_1;
end

function Gates_process_ret_2_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_2(_ctx)
   return _ctx.process_ret_2;
end

function Gates_process_ret_3_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_3(_ctx)
   return _ctx.process_ret_3;
end

function Gates_process_ret_4_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_4(_ctx)
   return _ctx.process_ret_4;
end

function Gates_process_ret_5_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_5(_ctx)
   return _ctx.process_ret_5;
end

function Gates_process_ret_6_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_6(_ctx)
   return _ctx.process_ret_6;
end

function Gates_process_ret_7_init()
   return Gates__ctx_type_2_init();
end

function Gates_process_ret_7(_ctx)
   return _ctx.process_ret_7;
end

function Gates_noteOn_init()
   return Gates__ctx_type_2_init();
end

function Gates_noteOn(_ctx,note,velocity,channel)
   if (_ctx.channel_in == channel) then
      Gates_gates_noteOn(_ctx.gates,note,velocity);
   end
end

function Gates_noteOff_init()
   return Gates__ctx_type_2_init();
end

function Gates_noteOff(_ctx,note,channel)
   if (_ctx.channel_in == channel) then
      Gates_gates_noteOff(_ctx.gates,note);
   end
end

function Gates_controlChange_init()
   return Gates__ctx_type_2_init();
end

function Gates_controlChange(_ctx,control,value,channel)

end

function Gates_default_init()
   return Gates__ctx_type_2_init();
end

function Gates_default(_ctx)

end


local this = {}
function this.process(ctx,c) return Gates_process(ctx,c) end
function this.noteOn(ctx,note,velocity,channel) return Gates_noteOn(ctx,note,velocity,channel) end
function this.noteOff(ctx,note,channel) return Gates_noteOff(ctx,note,channel) end
function this.controlChange(ctx,control,value,channel) return Gates_controlChange(ctx,control,value,channel) end
function this.init() return Gates_process_init() end
function this.default(ctx) return Gates_default(ctx) end
this.config = { inputs = 2, outputs = 8, noteon_inputs = 4, noteoff_inputs = 3, controlchange_inputs = 4, is_active = true }
return this

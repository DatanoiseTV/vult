#include "filters.h"

int32_t pi(){
   return 0x3243f /* 3.141600 */;
}

int32_t min(int32_t a, int32_t b){
   return ((a < b)?a:b);
}

int32_t max(int32_t a, int32_t b){
   return ((a > b)?a:b);
}

int32_t clip(int32_t low, int32_t high, int32_t value){
   return fix_min(fix_max(low,value),high);
}

_ctx_type_4 _ctx_type_4_init(){
   _ctx_type_4 _ctx;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   return _ctx;
}

_ctx_type_4 change_init(){ return _ctx_type_4_init();}

uint8_t change(_ctx_type_4 &_ctx, int32_t x){
   uint8_t v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

_ctx_type_5 _ctx_type_5_init(){
   _ctx_type_5 _ctx;
   _ctx.w2 = 0x0 /* 0.000000 */;
   _ctx.w1 = 0x0 /* 0.000000 */;
   return _ctx;
}

_ctx_type_5 biquad_init(){ return _ctx_type_5_init();}

int32_t biquad(_ctx_type_5 &_ctx, int32_t x, int32_t b0, int32_t b1, int32_t b2, int32_t a1, int32_t a2){
   int32_t w0 = fix_add(fix_add(x,(- fix_mul(a1,_ctx.w1))),(- fix_mul(a2,_ctx.w2)));
   int32_t y0 = fix_add(fix_add(fix_mul(b0,w0),fix_mul(b1,_ctx.w1)),fix_mul(b2,_ctx.w2));
   int32_t _tmp_0 = _ctx.w1;
   int32_t _tmp_1 = w0;
   _ctx.w2 = _tmp_0;
   _ctx.w1 = _tmp_1;
   return y0;
}

_ctx_type_6 _ctx_type_6_init(){
   _ctx_type_6 _ctx;
   _ctx.k = 0x0 /* 0.000000 */;
   _ctx.fc = 0x0 /* 0.000000 */;
   _ctx._inst1 = _ctx_type_5_init();
   _ctx._inst0 = _ctx_type_4_init();
   return _ctx;
}

_ctx_type_6 lp6_init(){ return _ctx_type_6_init();}

int32_t lp6(_ctx_type_6 &_ctx, int32_t x, int32_t fc){
   if(change(_ctx._inst0,_ctx.fc)){
      _ctx.fc = fix_clip(_ctx.fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
      _ctx.k = fix_tan(fix_mul(fix_mul(pi(),_ctx.fc),0x1 /* 0.000023 */));
   }
   int32_t b0 = fix_div(_ctx.k,fix_add(_ctx.k,0x10000 /* 1.000000 */));
   int32_t b1 = fix_div(_ctx.k,fix_add(_ctx.k,0x10000 /* 1.000000 */));
   int32_t a1 = fix_div(fix_add(_ctx.k,(0xffff0000 /* -1.000000 */)),fix_add(_ctx.k,0x10000 /* 1.000000 */));
   return biquad(_ctx._inst1,x,b0,b1,0x0 /* 0.000000 */,a1,0x0 /* 0.000000 */);
}

_ctx_type_7 _ctx_type_7_init(){
   _ctx_type_7 _ctx;
   _ctx.b2 = 0x0 /* 0.000000 */;
   _ctx.b1 = 0x0 /* 0.000000 */;
   _ctx.b0 = 0x0 /* 0.000000 */;
   _ctx.a2 = 0x0 /* 0.000000 */;
   _ctx.a1 = 0x0 /* 0.000000 */;
   _ctx._inst2 = _ctx_type_5_init();
   _ctx._inst1 = _ctx_type_4_init();
   _ctx._inst0 = _ctx_type_4_init();
   return _ctx;
}

_ctx_type_7 lp12_init(){ return _ctx_type_7_init();}

int32_t lp12(_ctx_type_7 &_ctx, int32_t x, int32_t fc, int32_t q){
   if(change(_ctx._inst0,fc) || change(_ctx._inst1,q)){
      int32_t qc = fix_max(sqrt(0x20000 /* 2.000000 */),fix_add(q,sqrt(0x20000 /* 2.000000 */)));
      fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
      int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
      int32_t den = fix_add(fix_add(fix_mul(fix_mul(k,k),qc),k),qc);
      _ctx.b0 = fix_div(fix_mul(fix_mul(k,k),qc),den);
      _ctx.b1 = fix_mul(0x20000 /* 2.000000 */,_ctx.b0);
      _ctx.b2 = _ctx.b0;
      _ctx.a1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.a2 = fix_div(fix_add(fix_add(fix_mul(fix_mul(k,k),qc),(- k)),qc),den);
   }
   return biquad(_ctx._inst2,x,_ctx.b0,_ctx.b1,_ctx.b2,_ctx.a1,_ctx.a2);
}

_ctx_type_8 _ctx_type_8_init(){
   _ctx_type_8 _ctx;
   _ctx._inst0 = _ctx_type_5_init();
   return _ctx;
}

_ctx_type_8 hp6_init(){ return _ctx_type_8_init();}

int32_t hp6(_ctx_type_8 &_ctx, int32_t x, int32_t fc){
   fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
   int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
   int32_t b0 = fix_div(0x10000 /* 1.000000 */,fix_add(k,0x10000 /* 1.000000 */));
   int32_t b1 = fix_div((0xffff0000 /* -1.000000 */),fix_add(k,0x10000 /* 1.000000 */));
   int32_t a1 = fix_div(fix_add(k,(0xffff0000 /* -1.000000 */)),fix_add(k,0x10000 /* 1.000000 */));
   return biquad(_ctx._inst0,x,b0,b1,0x0 /* 0.000000 */,a1,0x0 /* 0.000000 */);
}

_ctx_type_9 _ctx_type_9_init(){
   _ctx_type_9 _ctx;
   _ctx._inst0 = _ctx_type_5_init();
   return _ctx;
}

_ctx_type_9 allp6_init(){ return _ctx_type_9_init();}

int32_t allp6(_ctx_type_9 &_ctx, int32_t x, int32_t fc){
   fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
   int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
   int32_t b0 = fix_div(fix_add(k,(0xffff0000 /* -1.000000 */)),fix_add(k,0x10000 /* 1.000000 */));
   int32_t b1 = 0x10000 /* 1.000000 */;
   int32_t a1 = fix_div(fix_add(k,(0xffff0000 /* -1.000000 */)),fix_add(k,0x10000 /* 1.000000 */));
   return biquad(_ctx._inst0,x,b0,b1,0x0 /* 0.000000 */,a1,0x0 /* 0.000000 */);
}

_ctx_type_10 _ctx_type_10_init(){
   _ctx_type_10 _ctx;
   _ctx.b2 = 0x0 /* 0.000000 */;
   _ctx.b1 = 0x0 /* 0.000000 */;
   _ctx.b0 = 0x0 /* 0.000000 */;
   _ctx.a2 = 0x0 /* 0.000000 */;
   _ctx.a1 = 0x0 /* 0.000000 */;
   _ctx._inst2 = _ctx_type_5_init();
   _ctx._inst1 = _ctx_type_4_init();
   _ctx._inst0 = _ctx_type_4_init();
   return _ctx;
}

_ctx_type_10 hp12_init(){ return _ctx_type_10_init();}

int32_t hp12(_ctx_type_10 &_ctx, int32_t x, int32_t fc, int32_t q){
   if(change(_ctx._inst0,fc) || change(_ctx._inst1,q)){
      int32_t qc = fix_max(sqrt(0x20000 /* 2.000000 */),fix_add(q,sqrt(0x20000 /* 2.000000 */)));
      fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
      int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
      int32_t den = fix_add(fix_add(fix_mul(fix_mul(k,k),qc),k),qc);
      _ctx.b0 = fix_div(qc,den);
      _ctx.b1 = fix_div(fix_mul((0xfffe0000 /* -2.000000 */),qc),den);
      _ctx.b2 = fix_div(qc,den);
      _ctx.a1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.a2 = fix_div(fix_add(fix_add(fix_mul(fix_mul(k,k),qc),(- k)),qc),den);
   }
   return biquad(_ctx._inst2,x,_ctx.b0,_ctx.b1,_ctx.b2,_ctx.a1,_ctx.a2);
}

_ctx_type_11 _ctx_type_11_init(){
   _ctx_type_11 _ctx;
   _ctx.b2 = 0x0 /* 0.000000 */;
   _ctx.b1 = 0x0 /* 0.000000 */;
   _ctx.b0 = 0x0 /* 0.000000 */;
   _ctx.a2 = 0x0 /* 0.000000 */;
   _ctx.a1 = 0x0 /* 0.000000 */;
   _ctx._inst2 = _ctx_type_5_init();
   _ctx._inst1 = _ctx_type_4_init();
   _ctx._inst0 = _ctx_type_4_init();
   return _ctx;
}

_ctx_type_11 bp12_init(){ return _ctx_type_11_init();}

int32_t bp12(_ctx_type_11 &_ctx, int32_t x, int32_t fc, int32_t q){
   if(change(_ctx._inst0,fc) || change(_ctx._inst1,q)){
      int32_t qc = fix_max(sqrt(0x20000 /* 2.000000 */),fix_add(q,sqrt(0x20000 /* 2.000000 */)));
      fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
      int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
      int32_t den = fix_add(fix_add(fix_mul(fix_mul(k,k),qc),k),qc);
      _ctx.b0 = fix_div(k,den);
      _ctx.b1 = 0x0 /* 0.000000 */;
      _ctx.b2 = fix_div((- k),den);
      _ctx.a1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.a2 = fix_div(fix_add(fix_add(fix_mul(fix_mul(k,k),qc),(- k)),qc),den);
   }
   return biquad(_ctx._inst2,x,_ctx.b0,_ctx.b1,_ctx.b2,_ctx.a1,_ctx.a2);
}

_ctx_type_12 _ctx_type_12_init(){
   _ctx_type_12 _ctx;
   _ctx.b2 = 0x0 /* 0.000000 */;
   _ctx.b1 = 0x0 /* 0.000000 */;
   _ctx.b0 = 0x0 /* 0.000000 */;
   _ctx.a2 = 0x0 /* 0.000000 */;
   _ctx.a1 = 0x0 /* 0.000000 */;
   _ctx._inst2 = _ctx_type_5_init();
   _ctx._inst1 = _ctx_type_4_init();
   _ctx._inst0 = _ctx_type_4_init();
   return _ctx;
}

_ctx_type_12 notch12_init(){ return _ctx_type_12_init();}

int32_t notch12(_ctx_type_12 &_ctx, int32_t x, int32_t fc, int32_t q){
   if(change(_ctx._inst0,fc) || change(_ctx._inst1,q)){
      int32_t qc = fix_max(sqrt(0x20000 /* 2.000000 */),fix_add(q,sqrt(0x20000 /* 2.000000 */)));
      fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
      int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
      int32_t den = fix_add(fix_add(fix_mul(fix_mul(k,k),qc),k),qc);
      _ctx.b0 = fix_div(fix_mul(qc,fix_add(0x10000 /* 1.000000 */,fix_mul(k,k))),den);
      _ctx.b1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.b2 = _ctx.b0;
      _ctx.a1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.a2 = fix_div(fix_add(fix_add(fix_mul(fix_mul(k,k),qc),(- k)),qc),den);
   }
   return biquad(_ctx._inst2,x,_ctx.b0,_ctx.b1,_ctx.b2,_ctx.a1,_ctx.a2);
}

_ctx_type_13 _ctx_type_13_init(){
   _ctx_type_13 _ctx;
   _ctx.b2 = 0x0 /* 0.000000 */;
   _ctx.b1 = 0x0 /* 0.000000 */;
   _ctx.b0 = 0x0 /* 0.000000 */;
   _ctx.a2 = 0x0 /* 0.000000 */;
   _ctx.a1 = 0x0 /* 0.000000 */;
   _ctx._inst2 = _ctx_type_5_init();
   _ctx._inst1 = _ctx_type_4_init();
   _ctx._inst0 = _ctx_type_4_init();
   return _ctx;
}

_ctx_type_13 allp12_init(){ return _ctx_type_13_init();}

int32_t allp12(_ctx_type_13 &_ctx, int32_t x, int32_t fc, int32_t q){
   if(change(_ctx._inst0,fc) || change(_ctx._inst1,q)){
      int32_t qc = fix_max(sqrt(0x20000 /* 2.000000 */),fix_add(q,sqrt(0x20000 /* 2.000000 */)));
      fc = fix_clip(fc,0x0 /* 0.000000 */,0x56220000 /* 22050.000000 */);
      int32_t k = fix_tan(fix_mul(fix_mul(pi(),fc),0x1 /* 0.000023 */));
      int32_t den = fix_add(fix_add(fix_mul(fix_mul(k,k),qc),k),qc);
      _ctx.b0 = fix_div(fix_add(fix_add(fix_mul(fix_mul(k,k),qc),(- k)),qc),den);
      _ctx.b1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.b2 = 0x10000 /* 1.000000 */;
      _ctx.a1 = fix_div(fix_mul(fix_mul(0x20000 /* 2.000000 */,qc),fix_add(fix_mul(k,k),(0xffff0000 /* -1.000000 */))),den);
      _ctx.a2 = fix_div(fix_add(fix_add(fix_mul(fix_mul(k,k),qc),(- k)),qc),den);
   }
   return biquad(_ctx._inst2,x,_ctx.b0,_ctx.b1,_ctx.b2,_ctx.a1,_ctx.a2);
}




local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Saturate_soft_table_c0 = {(-8.551395),(-8.031581),(-7.495173),(-6.941354),(-6.372317),(-5.793511),(-5.207770),(-4.619621),(-4.035829),(-3.461083),(-2.902259),(-2.366490),(-1.860709),(-1.392085),(-0.967287),(-0.592455),(-0.272557),(-0.011069),0.190456,0.332663,0.418609,0.453804,0.446033,0.404924,0.341291,0.266251,0.190231,0.121953,0.067564,0.030037,0.008985,0.000923,0.000000,(-0.000923),(-0.008985),(-0.030037),(-0.067564),(-0.121953),(-0.190231),(-0.266251),(-0.341291),(-0.404924),(-0.446033),(-0.453804),(-0.418609),(-0.332666),(-0.190451),0.011068,0.272539,0.592436,0.967277,1.392035,1.860709,2.366538,2.902329,3.461142,4.036128,4.619653,5.207774,5.793615,6.371757,6.940220,7.494295,8.032314,8.552015,9.049418};
local Saturate_soft_table_c1 = {0.359022,0.392434,0.428240,0.466430,0.506928,0.549736,0.594640,0.641433,0.689913,0.739571,0.790028,0.840660,0.890789,0.939610,0.986252,1.029749,1.069123,1.103374,1.131586,1.152958,1.166892,1.173069,1.171520,1.162678,1.147415,1.127033,1.103218,1.077944,1.053342,1.031519,1.014380,1.003443,0.999685,1.003443,1.014380,1.031519,1.053342,1.077944,1.103218,1.127033,1.147415,1.162678,1.171520,1.173069,1.166892,1.152959,1.131586,1.103374,1.069121,1.029748,0.986250,0.939611,0.890792,0.840665,0.790033,0.739584,0.689894,0.641441,0.594623,0.549769,0.506907,0.466408,0.428263,0.392457,0.359046,0.327989};
local Saturate_soft_table_c2 = {0.004508,0.005046,0.005642,0.006300,0.007022,0.007812,0.008672,0.009605,0.010610,0.011683,0.012822,0.014018,0.015260,0.016531,0.017811,0.019074,0.020285,0.021407,0.022394,0.023197,0.023762,0.024033,0.023956,0.023480,0.022565,0.021181,0.019316,0.016977,0.014195,0.011022,0.007534,0.003824,0.000000,(-0.003824),(-0.007534),(-0.011022),(-0.014195),(-0.016977),(-0.019316),(-0.021181),(-0.022565),(-0.023480),(-0.023956),(-0.024033),(-0.023762),(-0.023197),(-0.022394),(-0.021407),(-0.020285),(-0.019074),(-0.017812),(-0.016531),(-0.015260),(-0.014018),(-0.012822),(-0.011683),(-0.010609),(-0.009605),(-0.008672),(-0.007813),(-0.007021),(-0.006299),(-0.005642),(-0.005046),(-0.004508),(-0.004021)};
function this.Saturate_soft_table(x)
   local index = this.clip(this.int((x + 32.000000)),0,64);
   return (Saturate_soft_table_c0[index+1] + (x * (Saturate_soft_table_c1[index+1] + (Saturate_soft_table_c2[index+1] * x))));

end

function this.Saturate_soft_process(_ctx,x)
   return this.Saturate_soft_table(x);

end

function this.Saturate_soft_noteOn(_ctx,note,velocity,channel)

end

function this.Saturate_soft_noteOff(_ctx,note,channel)

end

function this.Saturate_soft_controlChange(_ctx,control,value,channel)

end

function this.Saturate_soft_default(_ctx)

end


function this.process(in0) return this.Saturate_soft_process(in0) end
function this.noteOn(in0,in1,in2) return this.Saturate_soft_noteOn(in0,in1,in2) end
function this.noteOff(in0,in1) return this.Saturate_soft_noteOff(in0,in1) end
function this.controlChange(in0,in1,in2) return this.Saturate_soft_controlChange(in0,in1,in2) end
function this.init() return this.Saturate_soft_process_init() end
function this.default(ctx) return this.Saturate_soft_default(ctx) end
this.config = { inputs = 1, outputs = 1, noteon_inputs = 3, noteoff_inputs = 2, controlchange_inputs = 3, is_active = false }
return this

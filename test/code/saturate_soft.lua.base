
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.pi()              return 3.1415926535897932384; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Saturate_soft_table_c0 = {(-4.197917),(-4.080173),(-3.962794),(-3.845833),(-3.729341),(-3.613374),(-3.497985),(-3.383231),(-3.269167),(-3.155849),(-3.043337),(-2.931686),(-2.820957),(-2.711206),(-2.602494),(-2.494880),(-2.388423),(-2.283182),(-2.179217),(-2.076588),(-1.975353),(-1.875572),(-1.777302),(-1.680602),(-1.585529),(-1.492139),(-1.400487),(-1.310629),(-1.222617),(-1.136504),(-1.052340),(-0.970174),(-0.890054),(-0.812026),(-0.736132),(-0.662415),(-0.590914),(-0.521666),(-0.454705),(-0.390062),(-0.327768),(-0.267847),(-0.210323),(-0.155215),(-0.102540),(-0.052312),(-0.004538),0.040774,0.083623,0.124011,0.161943,0.197429,0.230483,0.261122,0.289369,0.315250,0.338794,0.360037,0.379017,0.395778,0.410364,0.422829,0.433226,0.441614,0.448056,0.452617,0.455367,0.456378,0.455727,0.453492,0.449754,0.444597,0.438108,0.430373,0.421483,0.411529,0.400602,0.388794,0.376201,0.362913,0.349024,0.334626,0.319811,0.304668,0.289285,0.273749,0.258143,0.242548,0.227042,0.211699,0.196590,0.181783,0.167338,0.153314,0.139765,0.126738,0.114276,0.102417,0.091192,0.080628,0.070746,0.061560,0.053080,0.045309,0.038244,0.031879,0.026199,0.021186,0.016817,0.013061,0.009886,0.007254,0.005123,0.003447,0.002177,0.001261,0.000644,0.000269,0.000077,0.000008,0.000000,(-0.000008),(-0.000077),(-0.000269),(-0.000644),(-0.001261),(-0.002177),(-0.003447),(-0.005123),(-0.007254),(-0.009886),(-0.013061),(-0.016817),(-0.021186),(-0.026199),(-0.031879),(-0.038244),(-0.045309),(-0.053080),(-0.061560),(-0.070746),(-0.080628),(-0.091192),(-0.102417),(-0.114276),(-0.126738),(-0.139765),(-0.153314),(-0.167338),(-0.181783),(-0.196590),(-0.211699),(-0.227042),(-0.242548),(-0.258143),(-0.273749),(-0.289285),(-0.304668),(-0.319811),(-0.334626),(-0.349024),(-0.362913),(-0.376201),(-0.388794),(-0.400602),(-0.411529),(-0.421483),(-0.430373),(-0.438108),(-0.444597),(-0.449754),(-0.453492),(-0.455727),(-0.456378),(-0.455367),(-0.452617),(-0.448056),(-0.441614),(-0.433226),(-0.422829),(-0.410364),(-0.395778),(-0.379017),(-0.360037),(-0.338794),(-0.315250),(-0.289369),(-0.261122),(-0.230483),(-0.197429),(-0.161943),(-0.124011),(-0.083623),(-0.040774),0.004538,0.052312,0.102540,0.155215,0.210323,0.267847,0.327768,0.390062,0.454705,0.521666,0.590914,0.662415,0.736132,0.812026,0.890054,0.970174,1.052340,1.136504,1.222617,1.310629,1.400487,1.492139,1.585529,1.680602,1.777302,1.875572,1.975353,2.076588,2.179217,2.283182,2.388423,2.494880,2.602494,2.711206,2.820957,2.931686,3.043337,3.155849,3.269167,3.383231,3.497985,3.613374,3.729341,3.845833,3.962794,4.080173,4.197917,4.315974};
local Saturate_soft_table_c1 = {0.676338,0.686232,0.696179,0.706175,0.716216,0.726298,0.736418,0.746571,0.756752,0.766957,0.777182,0.787421,0.797669,0.807921,0.818171,0.828414,0.838644,0.848854,0.859040,0.869193,0.879308,0.889378,0.899396,0.909356,0.919249,0.929069,0.938808,0.948458,0.958013,0.967463,0.976802,0.986021,0.995112,1.004066,1.012877,1.021534,1.030031,1.038359,1.046509,1.054474,1.062244,1.069813,1.077171,1.084311,1.091226,1.097906,1.104345,1.110536,1.116470,1.122142,1.127545,1.132672,1.137517,1.142075,1.146340,1.150308,1.153973,1.157332,1.160381,1.163118,1.165538,1.167642,1.169426,1.170891,1.172035,1.172860,1.173366,1.173556,1.173431,1.172995,1.172251,1.171205,1.169861,1.168225,1.166305,1.164107,1.161641,1.158915,1.155939,1.152723,1.149279,1.145619,1.141754,1.137699,1.133466,1.129071,1.124528,1.119853,1.115062,1.110170,1.105195,1.100154,1.095064,1.089943,1.084808,1.079678,1.074570,1.069502,1.064492,1.059557,1.054716,1.049986,1.045382,1.040923,1.036623,1.032499,1.028565,1.024836,1.021326,1.018046,1.015009,1.012227,1.009709,1.007465,1.005504,1.003831,1.002454,1.001378,1.000606,1.000142,0.999987,1.000142,1.000606,1.001378,1.002454,1.003831,1.005504,1.007465,1.009709,1.012227,1.015009,1.018046,1.021326,1.024836,1.028565,1.032499,1.036623,1.040923,1.045382,1.049986,1.054716,1.059557,1.064492,1.069502,1.074570,1.079678,1.084808,1.089943,1.095064,1.100154,1.105195,1.110170,1.115062,1.119853,1.124528,1.129071,1.133466,1.137699,1.141754,1.145619,1.149279,1.152723,1.155939,1.158915,1.161641,1.164107,1.166305,1.168225,1.169861,1.171205,1.172251,1.172995,1.173431,1.173556,1.173366,1.172860,1.172035,1.170891,1.169426,1.167642,1.165538,1.163118,1.160381,1.157332,1.153973,1.150308,1.146340,1.142075,1.137517,1.132672,1.127545,1.122142,1.116470,1.110536,1.104345,1.097906,1.091226,1.084311,1.077171,1.069813,1.062244,1.054474,1.046509,1.038359,1.030031,1.021534,1.012877,1.004066,0.995112,0.986021,0.976802,0.967463,0.958013,0.948458,0.938808,0.929069,0.919249,0.909356,0.899396,0.889378,0.879308,0.869193,0.859040,0.848854,0.838644,0.828414,0.818171,0.807921,0.797669,0.787421,0.777182,0.766957,0.756752,0.746571,0.736418,0.726298,0.716216,0.706175,0.696179,0.686232,0.676338,0.666500};
local Saturate_soft_table_c2 = {0.010326,0.010534,0.010744,0.010958,0.011174,0.011393,0.011615,0.011840,0.012067,0.012297,0.012529,0.012764,0.013001,0.013240,0.013482,0.013726,0.013972,0.014219,0.014469,0.014720,0.014972,0.015227,0.015482,0.015738,0.015996,0.016254,0.016513,0.016772,0.017031,0.017290,0.017549,0.017808,0.018066,0.018323,0.018578,0.018833,0.019085,0.019335,0.019583,0.019829,0.020071,0.020310,0.020545,0.020777,0.021003,0.021226,0.021443,0.021654,0.021859,0.022059,0.022251,0.022436,0.022614,0.022783,0.022944,0.023096,0.023239,0.023372,0.023494,0.023606,0.023706,0.023795,0.023872,0.023936,0.023986,0.024024,0.024047,0.024056,0.024050,0.024029,0.023992,0.023939,0.023869,0.023782,0.023679,0.023558,0.023418,0.023261,0.023085,0.022891,0.022677,0.022444,0.022192,0.021921,0.021630,0.021319,0.020988,0.020638,0.020268,0.019878,0.019468,0.019039,0.018591,0.018123,0.017637,0.017132,0.016608,0.016067,0.015508,0.014932,0.014339,0.013730,0.013105,0.012465,0.011811,0.011143,0.010462,0.009768,0.009063,0.008347,0.007621,0.006886,0.006142,0.005391,0.004633,0.003870,0.003102,0.002330,0.001555,0.000778,0.000000,(-0.000778),(-0.001555),(-0.002330),(-0.003102),(-0.003870),(-0.004633),(-0.005391),(-0.006142),(-0.006886),(-0.007621),(-0.008347),(-0.009063),(-0.009768),(-0.010462),(-0.011143),(-0.011811),(-0.012465),(-0.013105),(-0.013730),(-0.014339),(-0.014932),(-0.015508),(-0.016067),(-0.016608),(-0.017132),(-0.017637),(-0.018123),(-0.018591),(-0.019039),(-0.019468),(-0.019878),(-0.020268),(-0.020638),(-0.020988),(-0.021319),(-0.021630),(-0.021921),(-0.022192),(-0.022444),(-0.022677),(-0.022891),(-0.023085),(-0.023261),(-0.023418),(-0.023558),(-0.023679),(-0.023782),(-0.023869),(-0.023939),(-0.023992),(-0.024029),(-0.024050),(-0.024056),(-0.024047),(-0.024024),(-0.023986),(-0.023936),(-0.023872),(-0.023795),(-0.023706),(-0.023606),(-0.023494),(-0.023372),(-0.023239),(-0.023096),(-0.022944),(-0.022783),(-0.022614),(-0.022436),(-0.022251),(-0.022059),(-0.021859),(-0.021654),(-0.021443),(-0.021226),(-0.021003),(-0.020777),(-0.020545),(-0.020310),(-0.020071),(-0.019829),(-0.019583),(-0.019335),(-0.019085),(-0.018833),(-0.018578),(-0.018323),(-0.018066),(-0.017808),(-0.017549),(-0.017290),(-0.017031),(-0.016772),(-0.016513),(-0.016254),(-0.015996),(-0.015738),(-0.015482),(-0.015227),(-0.014972),(-0.014720),(-0.014469),(-0.014219),(-0.013972),(-0.013726),(-0.013482),(-0.013240),(-0.013001),(-0.012764),(-0.012529),(-0.012297),(-0.012067),(-0.011840),(-0.011615),(-0.011393),(-0.011174),(-0.010958),(-0.010744),(-0.010534),(-0.010326),(-0.010121)};
function this.Saturate_soft_table(x)
   local index = this.clip(this.int((5.000000 * (x + 24.000000))),0,240);
   return (Saturate_soft_table_c0[index+1] + (x * (Saturate_soft_table_c1[index+1] + (Saturate_soft_table_c2[index+1] * x))));

end

function this.Saturate_soft_process(_ctx,x)
   return this.Saturate_soft_table(x);

end

function this.Saturate_soft_noteOn(_ctx,note,velocity,channel)

end

function this.Saturate_soft_noteOff(_ctx,note,channel)

end

function this.Saturate_soft_controlChange(_ctx,control,value,channel)

end

function this.Saturate_soft_default(_ctx)

end


function this.process(x) return this.Saturate_soft_process(x) end
function this.noteOn(note,velocity,channel) return this.Saturate_soft_noteOn(note,velocity,channel) end
function this.noteOff(note,channel) return this.Saturate_soft_noteOff(note,channel) end
function this.controlChange(control,value,channel) return this.Saturate_soft_controlChange(control,value,channel) end
function this.init() return this.Saturate_soft_process_init() end
function this.default(ctx) return this.Saturate_soft_default(ctx) end
this.config = { inputs = 1, outputs = 1, noteon_inputs = 3, noteoff_inputs = 2, controlchange_inputs = 3, is_active = false }
return this

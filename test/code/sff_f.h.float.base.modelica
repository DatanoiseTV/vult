
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SFF_F_H
#define SFF_F_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "sff_f.tables.h"

static_inline float Sff_f_process(float a, float b){
   return (a * b);
};

static_inline void Sff_f_noteOn(int note, int velocity, int channel){
}

static_inline void Sff_f_noteOff(int note, int channel){
}

static_inline void Sff_f_controlChange(int control, int value, int channel){
}

static_inline void Sff_f_default(){
}



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>

EXPORT void *sff_f__constructor();

EXPORT void sff_f__destructor(void *object);

EXPORT double sff_f__process(void *object, double in_0, double in_1);

EXPORT void sff_f__noteOn(void *object, int note, int vel, int channel);

EXPORT void sff_f__noteOff(void *object, int note, int channel);

EXPORT void sff_f__controlChange(void *object, int control, int value, int channel);

#ifdef __cplusplus
}
#endif

#endif // SFF_F_H


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "sfi_fi.h"

void Sfi_fi__ctx_type_0_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0 _ctx;
   _ctx.process_ret_1 = 0;
   _ctx.process_ret_0 = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

void Sfi_fi_process_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

void Sfi_fi_process(Sfi_fi__ctx_type_0 &_ctx, fix16_t a, int b){
   _ctx.process_ret_0 = a;
   _ctx.process_ret_1 = b;
   return ;
}

void Sfi_fi_process_ret_0_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

fix16_t Sfi_fi_process_ret_0(Sfi_fi__ctx_type_0 &_ctx){
   return _ctx.process_ret_0;
}

void Sfi_fi_process_ret_1_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

int Sfi_fi_process_ret_1(Sfi_fi__ctx_type_0 &_ctx){
   return _ctx.process_ret_1;
}

void Sfi_fi_noteOn_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

void Sfi_fi_noteOn(Sfi_fi__ctx_type_0 &_ctx, int note, int velocity, int channel){

}

void Sfi_fi_noteOff_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

void Sfi_fi_noteOff(Sfi_fi__ctx_type_0 &_ctx, int note, int channel){

}

void Sfi_fi_controlChange_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

void Sfi_fi_controlChange(Sfi_fi__ctx_type_0 &_ctx, int control, int value, int channel){

}

void Sfi_fi_default_init(Sfi_fi__ctx_type_0 &_output_){
   Sfi_fi__ctx_type_0_init(_output_);
   return ;
}

void Sfi_fi_default(Sfi_fi__ctx_type_0 &_ctx){

}



extern "C" {

EXPORT void *sfi_fi__constructor()
{
   Sfi_fi_process_type *data = (Sfi_fi_process_type *)malloc(sizeof(Sfi_fi_process_type));
   Sfi_fi_process_init(*data);
   Sfi_fi_default(*data);
   return (void *)data;
}

EXPORT void sfi_fi__destructor(void *object)
{
   Sfi_fi_process_type *data = (Sfi_fi_process_type *)object;
   free(data);
}

EXPORT void sfi_fi__process(void *object, double in_0, int in_1, double &out_0, int &out_1)
{
   Sfi_fi_process_type *data = (Sfi_fi_process_type *)object;
   _tuple___real_int__ ret;  Sfi_fi_process(*data,float_to_fix(in_0),float_to_int(in_1),ret); 
out_0 = fix_to_float(ret.field_0); 
out_1 = int_to_float(ret.field_1); 

}


EXPORT void sfi_fi__noteOn(void *object, int note,int velocity,int channel){
   Sfi_fi_process_type *data = (Sfi_fi_process_type *)object;
   if(vel) Sfi_fi_noteOn(*data,(int)note,(int)velocity,(int)channel);
   else Sfi_fi_noteOff(*data,(int)note,(int)channel);
}



EXPORT void sfi_fi__noteOff(void *object, int note,int channel) {
   Sfi_fi_process_type *data = (Sfi_fi_process_type *)object;
   Sfi_fi_noteOff(*data,(int)note,(int)channel);
}



EXPORT void sfi_fi__controlChange(void *object, int control,int value,int channel) {
   Sfi_fi_process_type *data = (Sfi_fi_process_type *)object;
   Sfi_fi_controlChange(*data,(int)control,(int)value,(int)channel);
}


} // extern "C"

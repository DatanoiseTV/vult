
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef AFF_FF_H
#define AFF_FF_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct _tuple___real_real__ {
   float field_0;
   float field_1;
} _tuple___real_real__;

typedef struct Aff_ff__ctx_type_0 {
   int x;
   float process_ret_1;
   float process_ret_0;
} Aff_ff__ctx_type_0;

typedef Aff_ff__ctx_type_0 Aff_ff_process_type;

void Aff_ff__ctx_type_0_init(Aff_ff__ctx_type_0 &_output_);

void Aff_ff_process_init(Aff_ff__ctx_type_0 &_output_);

void Aff_ff_process(Aff_ff__ctx_type_0 &_ctx, float a, float b);

typedef Aff_ff__ctx_type_0 Aff_ff_process_ret_0_type;

void Aff_ff_process_ret_0_init(Aff_ff__ctx_type_0 &_output_);

float Aff_ff_process_ret_0(Aff_ff__ctx_type_0 &_ctx);

typedef Aff_ff__ctx_type_0 Aff_ff_process_ret_1_type;

void Aff_ff_process_ret_1_init(Aff_ff__ctx_type_0 &_output_);

float Aff_ff_process_ret_1(Aff_ff__ctx_type_0 &_ctx);

typedef Aff_ff__ctx_type_0 Aff_ff_noteOn_type;

void Aff_ff_noteOn_init(Aff_ff__ctx_type_0 &_output_);

void Aff_ff_noteOn(Aff_ff__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Aff_ff__ctx_type_0 Aff_ff_noteOff_type;

void Aff_ff_noteOff_init(Aff_ff__ctx_type_0 &_output_);

void Aff_ff_noteOff(Aff_ff__ctx_type_0 &_ctx, int note, int channel);

typedef Aff_ff__ctx_type_0 Aff_ff_controlChange_type;

void Aff_ff_controlChange_init(Aff_ff__ctx_type_0 &_output_);

void Aff_ff_controlChange(Aff_ff__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Aff_ff__ctx_type_0 Aff_ff_default_type;

void Aff_ff_default_init(Aff_ff__ctx_type_0 &_output_);

void Aff_ff_default(Aff_ff__ctx_type_0 &_ctx);



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>

EXPORT void *aff_ff__constructor();

EXPORT void aff_ff__destructor(void *object);

EXPORT void aff_ff__process(void *object, double in_0, double in_1, double &out_0, double &out_1);

EXPORT void aff_ff__noteOn(void *object, int note, int vel, int channel);

EXPORT void aff_ff__noteOff(void *object, int note, int channel);

EXPORT void aff_ff__controlChange(void *object, int control, int value, int channel);

#ifdef __cplusplus
}
#endif

#endif // AFF_FF_H


local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.pi()              return 3.1415926535897932384; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
function this.Util__ctx_type_0_init()
   local _ctx = {};
   _ctx.pre = false;
   return _ctx;

end

function this.Util_edge_init()
   return this.Util__ctx_type_0_init();
end

function this.Util_edge(_ctx,x)
   local ret = (x and (_ctx.pre == false));
   _ctx.pre = x;
   return ret;

end

function this.Util__ctx_type_1_init()
   local _ctx = {};
   _ctx.pre_x = 0.;
   return _ctx;

end

function this.Util_change_init()
   return this.Util__ctx_type_1_init();
end

function this.Util_change(_ctx,x)
   local v = (_ctx.pre_x ~= x);
   _ctx.pre_x = x;
   return v;

end

function this.Util_map(x,x0,x1,y0,y1)
   return ((((x + (- x0)) * (y1 + (- y0))) / (x1 + (- x0))) + y0);

end

function this.Util__ctx_type_3_init()
   local _ctx = {};
   _ctx.y1 = 0.;
   _ctx.x1 = 0.;
   return _ctx;

end

function this.Util_dcblock_init()
   return this.Util__ctx_type_3_init();
end

function this.Util_dcblock(_ctx,x0)
   local y0 = (x0 + (- _ctx.x1) + (_ctx.y1 * 0.995));
   _ctx.x1 = x0;
   _ctx.y1 = y0;
   return y0;

end

function this.Util__ctx_type_4_init()
   local _ctx = {};
   _ctx.x = 0.;
   return _ctx;

end

function this.Util_smooth_init()
   return this.Util__ctx_type_4_init();
end

function this.Util_smooth(_ctx,input)
   _ctx.x = (_ctx.x + ((input + (- _ctx.x)) * 0.005));
   return _ctx.x;

end

function this.Util__ctx_type_5_init()
   local _ctx = {};
   _ctx.x0 = 0.;
   return _ctx;

end

function this.Util_average2_init()
   return this.Util__ctx_type_5_init();
end

function this.Util_average2(_ctx,x1)
   local result = ((_ctx.x0 + x1) * 0.5);
   _ctx.x0 = x1;
   return result;

end

function this.Util_cubic_clipper(x)
   if (x <= (-0.666666666667)) then
      return (-0.666666666667);

   else

      local _cond_20 = false;
      _cond_20 = (x >= 0.666666666667);
      if _cond_20 then
         return 0.666666666667;

      else

         return (x + ((-0.333333333333) * x * x * x));

      end

   end

end

local Util_pitchToRate_1024_c0 = {0.189841680037,0.191325897588,0.198688508155,0.219424569866,0.26567713111,0.35643778531,0.520650689743,0.801559648679,1.26275806017,1.99656217812,3.13554377292,4.8683467577,7.46128055978,11.2877154635,16.867996304,24.9233048692,36.4485211631,52.8099028605,75.8766156939,108.197224933,153.232414338,215.672343711,301.846625705,420.29803823,582.505177958,803.812128967,1104.88016479,1513.1241264,2065.37395202,2810.23054964,3812.90288799,5159.52558025,6963.76146927};
local Util_pitchToRate_1024_c1 = {0.010913303747,0.0101757584611,0.00833370067546,0.00486693804793,(-0.000939454894394),(-0.0100609504806),(-0.0238203681558),(-0.0440021062837),(-0.0730021843736),(-0.114024950054),(-0.171340524952),(-0.250621463768),(-0.359381478667),(-0.507547848549),(-0.708208140825),(-0.978574790425),(-1.34124969555),(-1.82584797191),(-2.47112251767),(-3.32772084379),(-4.46165827276),(-5.95900581344),(-7.93162553989),(-10.5253117054),(-13.9292124557),(-18.3875875205),(-24.2197854202),(-31.8351508101),(-41.769556586),(-54.7064548238),(-71.5412264293),(-93.4225916399),(-121.823163138)};
local Util_pitchToRate_1024_c2 = {0.000355553647318,0.000447161637289,0.000562372320943,0.000707266905239,0.000889493413582,0.00111867037219,0.0014068945122,0.00176937926494,0.00222525787535,0.00279859310527,0.00351964697344,0.00442648109138,0.00556695817836,0.00700127157795,0.00880514558145,0.0110737757198,0.013926935271,0.01751519419,0.0220279639143,0.0277036097479,0.034841413067,0.0438182632294,0.055107155696,0.0693054512451,0.0871633154559,0.109617337367,0.13786232365,0.173376847616,0.218054168649,0.274226803392,0.344892057084,0.433780087926,0.54554303051};
function this.Util_pitchToRate_1024(pitch)
   local index = this.clip(this.int((0.244094488189 * pitch)),0,31);
   return (Util_pitchToRate_1024_c0[index+1] + (pitch * (Util_pitchToRate_1024_c1[index+1] + (Util_pitchToRate_1024_c2[index+1] * pitch))));

end

local Util_pitchToRate_c0 = {0.000185392265661,0.000186841696863,0.000194031746245,0.000214281806509,0.000259450323349,0.000348083774717,0.000508447939203,0.000782773094413,0.00123316216813,0.00194976775207,0.00306205446575,0.00475424488057,0.00728640679666,0.0110231596324,0.0164726526406,0.0243391649114,0.0355942589483,0.0515721707622,0.0740982575135,0.105661352474,0.149641029627,0.210617523155,0.294772095415,0.410447302959,0.56885271285,0.784972782194,1.07898453592,1.47766027968,2.01696675002,2.74436577113,3.72353797656,5.03859919947,6.80054830983};
local Util_pitchToRate_c1 = {1.06575231905e-05,9.93726412215e-06,8.13837956588e-06,4.75286918743e-06,(-9.17436420307e-07),(-9.82514695372e-06),(-2.32620782771e-05),(-4.29708069177e-05),(-7.12911956773e-05),(-0.000111352490288),(-0.000167324731399),(-0.000244747523211),(-0.00035095847526),(-0.000495652195849),(-0.000691609512524),(-0.000955639443775),(-0.00130981415581),(-0.00178305466006),(-0.00241320558366),(-0.00324972738652),(-0.00435708815699),(-0.00581934161469),(-0.0077457280663),(-0.0102786247123),(-0.0136027465387),(-0.017956628438),(-0.0236521341994),(-0.031089014463),(-0.0407905826035),(-0.0534242722888),(-0.0698644789349),(-0.0912329996483),(-0.118967932752)};
local Util_pitchToRate_c2 = {3.47220358709e-07,4.36681286415e-07,5.49191719671e-07,6.90690337148e-07,8.68645911701e-07,1.09245153534e-06,1.37392042207e-06,1.72790943841e-06,2.1731033939e-06,2.73300107936e-06,3.4371552475e-06,4.3227354408e-06,5.43648259606e-06,6.83717927534e-06,8.59877498188e-06,1.08142341013e-05,1.36005227256e-05,1.71046818262e-05,2.15116835101e-05,2.70543063944e-05,3.40248174482e-05,4.2791272685e-05,5.38155817344e-05,6.76811047315e-05,8.51204252499e-05,0.000107048181023,0.000134631175439,0.00016931332775,0.000212943524071,0.000267799612688,0.000336808649496,0.000423613367115,0.000532756865732};
function this.Util_pitchToRate(pitch)
   local index = this.clip(this.int((0.244094488189 * pitch)),0,31);
   return (Util_pitchToRate_c0[index+1] + (pitch * (Util_pitchToRate_c1[index+1] + (Util_pitchToRate_c2[index+1] * pitch))));

end

function this.Util_cvToPitch(cv)
   return ((cv * 120.) + 24.);

end

local Util_cvToRate_1024_c0 = {0.759366720147,0.76287682088,0.779736591571,0.825651541171,0.924648365923,1.11239844184,1.44068747342,1.98339240754,2.84443407951,4.16831030008,6.15399365185,9.07319481283,13.2943014604,19.3136163473,27.7961015161,39.62829044,55.9866571462,78.4267499503,108.998215386,150.387463988,206.118533087,280.781675017,380.357513386,512.612775405,687.616763647,918.3490275,1221.607949,1619.05223539,2138.6293218,2815.43667105,3696.1624076,4838.69411678,6318.21152};
local Util_cvToRate_1024_c1 = {5.24558308188,4.99894254853,4.40308922371,3.31911604895,1.56449675194,(-1.09925629984),(-4.98222642392),(-10.4858640391),(-18.1279555878),(-28.5740997639),(-42.677360032),(-61.5281235454),(-86.516770266),(-119.412133355),(-162.460317551),(-218.508269191),(-291.15678595),(-384.956977646),(-505.652296862),(-660.458538559),(-858.49494987),(-1111.17337632),(-1432.85844521),(-1841.54445918),(-2359.81604563),(-3015.79546669),(-3844.83813828),(-4891.10191925),(-6210.19727359),(-7868.99386779),(-9955.77800805),(-12575.7478745),(-15862.2346213)};
local Util_cvToRate_1024_c2 = {20.1255918184,24.4575723246,29.7220001999,36.1195822692,43.8942270126,53.3423434917,64.8241428839,78.7773664092,95.7339869863,116.340471033,141.382450964,171.814646006,208.797362823,253.740413251,308.357210756,374.730622127,455.389632248,553.410815849,672.536916058,817.290610669,993.216832855,1207.00062225,1466.80387492,1782.52927112,2166.24499736,2632.4875896,3199.07261962,3887.67302403,4724.8591793,5741.24530174,6977.44175505,8479.29002777,10304.4554863};
function this.Util_cvToRate_1024(cv)
   local index = this.clip(this.int((34.4444444444 * cv)),0,31);
   return (Util_cvToRate_1024_c0[index+1] + (cv * (Util_cvToRate_1024_c1[index+1] + (Util_cvToRate_1024_c2[index+1] * cv))));

end

local Util_cvToRate_c0 = {0.000741569062643,0.000741614411242,0.000741804288603,0.000742252395803,0.000743088394956,0.000744459465973,0.000746531994555,0.000749493376759,0.000753554075716,0.000758949578451,0.000765943041551,0.000774827118637,0.000785927670855,0.000799605266108,0.000816260506974,0.000836333691745,0.000860311194842,0.00088872896745,0.000922189292884,0.0009613246255,0.00100684713314,0.00105956789213,0.00112027587704,0.00118999058362,0.00126968375945,0.00136042036651,0.00146341605724,0.0015802758572,0.00171200068897,0.00186017347323,0.00202732748819,0.00221387469471,0.00242324163549,0.00265613706453,0.00291683889779,0.00320704837861,0.00352951656407,0.00388492780502,0.00427938700976,0.00471688443112,0.00519800950077,0.00573047548368,0.00631852127535,0.00695966784397,0.0076816476356,0.00845635103957,0.00930848563805,0.0102575900236,0.0112717725968,0.0124037615467,0.0136297909309,0.0149481690268,0.0163702610067,0.0180283364133,0.019750213838,0.0216328135458,0.0237925004771,0.0258545448202,0.028413603456,0.0309513124977,0.0338346288384,0.0370438278413,0.0404711540004,0.0442617797954,0.0479023445663,0.0517929941703,0.0566318569596,0.0616369368589,0.0679441687149,0.0728861199979,0.0794312603466,0.0863661579071,0.0931088254731,0.103538643071,0.110999516075,0.12077442553,0.132006921696,0.14361952086,0.152556099596,0.165987675768,0.176305713071,0.191720858873,0.209984838027,0.226697757209,0.251486748714,0.271212022485,0.275739365679,0.29951049868,0.342669114215,0.360211555691,0.375617535537,0.415542785923,0.477028848985,0.480246251843,0.518324887509,0.524654771317,0.636617964867,0.608643817054,0.698808713362,0.905254906283,0.753959541703,0.968786334953,0.93460949692,0.942714402404,0.900805444734,1.0839642753,1.51146188926,1.37638374315,1.35092276314,1.45219475207,1.39667077792,2.12943149811,2.01822114958,2.1320711487,2.64194234605,2.16108872692,2.09976398288,2.27870401118,3.05023461051,3.26907619338,3.39656237972,2.97005654385,3.89995571677,3.49384079761,4.4359293311,4.96546776832,6.75526326355,7.32738947903,3.89917391812};
local Util_cvToRate_c1 = {0.00513912879403,0.00512626868893,0.00509930490895,0.00505686073417,0.00499745713935,0.00491950588873,0.00482130247354,0.00470101855143,0.00455669336578,0.00438622578291,0.00418736558485,0.00395769841086,0.00369464466104,0.00339545190928,0.00305714271489,0.0026765705095,0.00225035997924,0.00177487687876,0.001246345441,0.000660558246906,1.31075933396e-05,(-0.000700558430086),(-0.00148563983064),(-0.00234732718301),(-0.00329152632479),(-0.00432393367047),(-0.00545174257822),(-0.00668042955662),(-0.00802029170769),(-0.00947432754938),(-0.011054647423),(-0.0127719043168),(-0.0146297273048),(-0.0166408852741),(-0.018821816977),(-0.0211674979865),(-0.0237176776141),(-0.0264617379495),(-0.0294116929601),(-0.0325962291901),(-0.0360266356988),(-0.0397066228021),(-0.0437127432142),(-0.0479579816919),(-0.0525753360976),(-0.0574648720916),(-0.0627984060055),(-0.0685448972251),(-0.0745527528505),(-0.0810901180697),(-0.0880415714529),(-0.0954497093324),(-0.103169488725),(-0.112078901198),(-0.121354872554),(-0.130772871758),(-0.142182492243),(-0.152165724188),(-0.164777215576),(-0.17689661749),(-0.191333885881),(-0.205553106055),(-0.221280015042),(-0.238829666269),(-0.254758885232),(-0.270439000783),(-0.292231524466),(-0.313960050568),(-0.341895055523),(-0.360715576548),(-0.385922376159),(-0.413282538938),(-0.43934035008),(-0.485224424381),(-0.510420009663),(-0.546029185741),(-0.59336468076),(-0.632486062631),(-0.667213609495),(-0.7127637426),(-0.749138439478),(-0.798818741195),(-0.863736589849),(-0.923015074505),(-1.01677917846),(-1.08188457982),(-1.08862743987),(-1.15711277682),(-1.31072991491),(-1.35597607556),(-1.39850067183),(-1.53500288984),(-1.7426231996),(-1.74441434686),(-1.85673040319),(-1.86335662855),(-2.23740606494),(-2.11120870709),(-2.37491896732),(-3.07803488977),(-2.53501341753),(-3.24651230846),(-3.03060292674),(-3.04549148361),(-2.91948671735),(-3.42608988484),(-4.69606678427),(-4.40456387752),(-4.13014684174),(-4.38263925111),(-4.1800477419),(-6.37128628061),(-5.87432859131),(-6.2576549978),(-7.60800503674),(-6.25242140205),(-5.99534604169),(-6.31906690143),(-8.40797235072),(-8.87096505492),(-9.56451102074),(-8.08733454442),(-10.7473176082),(-8.92996444244),(-11.9205552706),(-12.6731487667),(-18.0985788685),(-19.0957467048),(-10.0276980998)};
local Util_cvToRate_c2 = {0.0182548011488,0.0191665204942,0.0201237748553,0.021128838317,0.022184099004,0.0232920630713,0.024455365988,0.0256767667605,0.026959165693,0.0283056250765,0.0297193260899,0.0312036180529,0.0327620592944,0.0343983795071,0.0361163247224,0.0379201548045,0.0398140402491,0.0418022367704,0.0438902469547,0.0460824389151,0.0483839036816,0.0508007579842,0.0533376983183,0.0560014706765,0.0587992168668,0.0617357059521,0.0648164679712,0.0680560343057,0.0714534271734,0.0750201702913,0.0787729291932,0.0827028622062,0.0868361775664,0.0911652197147,0.0957232686162,0.100507085311,0.105540711407,0.110800050992,0.116325261617,0.122126055794,0.128195657116,0.134568214299,0.141399728151,0.148411390903,0.155909754848,0.163637717471,0.171857430749,0.180599528232,0.189439624235,0.198925586971,0.208870214381,0.219116718382,0.229507005367,0.241660033535,0.253651122828,0.266141339677,0.280625820927,0.293001798121,0.308347910773,0.32265455507,0.339777373778,0.357068726351,0.374907420566,0.394593407824,0.411669961097,0.427938403014,0.452631959007,0.475006349312,0.504551118404,0.523231560664,0.550196849878,0.57689535165,0.602279186745,0.648929741879,0.673693662157,0.707793997271,0.752358931538,0.789921751441,0.816901835344,0.856121380993,0.88813548803,0.934686180435,0.994476093082,1.04419934514,1.12744572441,1.18665154172,1.17216442899,1.2347382924,1.37149372463,1.39711367347,1.42577899321,1.53760691842,1.71357866805,1.69639823421,1.77961242369,1.774088233,2.08137270987,1.94673230573,2.17791493218,2.73877837267,2.26714427219,2.83332928026,2.63302125542,2.62432486851,2.4689071097,2.90022674255,3.8673706272,3.54060178376,3.34757757167,3.52217170052,3.31252088226,4.91238070538,4.56967048893,4.76229623232,5.72050436572,4.69421189282,4.42267646505,4.69332933902,6.03451219251,6.34953066048,6.65352247026,5.6266063064,7.35717991764,6.2544174182,8.21209396414,8.68817145202,11.9813756716,12.4840062974,6.60838756876};
function this.Util_cvToRate(cv)
   local index = this.clip(this.int((141.111111111 * cv)),0,127);
   return (Util_cvToRate_c0[index+1] + (cv * (Util_cvToRate_c1[index+1] + (Util_cvToRate_c2[index+1] * cv))));

end

function this.Util_pitchToCv(pitch)
   return (0.00833333333333 * ((-24.) + pitch));

end

local Util_cvToperiod_c0 = {674.246034776,671.553837727,662.76178188,646.759521901,623.799427712,594.871801992,561.298276875,524.476942143,485.731369226,446.229382316,406.94744034,368.66377436,331.968683025,297.284155733,264.887666444,234.936856737,207.493124397,182.543015866,160.016906779,139.804831794,121.769556579,105.757116937,91.6051155071,79.149088394,68.2272489259,58.6838945702,50.371733558,43.1533549488,36.902032908,31.5020247862,26.8484942477,22.8471656705,19.4137944411};
local Util_cvToperiod_c1 = {(-4656.65631086),(-4481.96057904),(-4198.68613255),(-3855.75154272),(-3487.13945482),(-3115.8588214),(-2756.93031878),(-2419.62514111),(-2109.13475329),(-1827.80833374),(-1576.06296307),(-1353.04709181),(-1157.11886446),(-986.186250154),(-837.94466494),(-710.039112868),(-600.171233528),(-506.166565653),(-426.013462738),(-357.88215123),(-300.130189887),(-251.29890433),(-210.104104957),(-175.423450149),(-146.28211351),(-121.837895062),(-101.366536594),(-84.2477263813),(-69.9520817395),(-58.0292593608),(-48.0972479058),(-39.8328333125),(-32.9631861669)};
local Util_cvToperiod_c2 = {14548.823162,11715.3695219,9433.74467508,7596.47729664,6117.02662156,4925.70611715,3966.40103985,3193.92526365,2571.89287904,2071.00430825,1667.66620793,1342.8801524,1081.3477512,870.750049392,701.167268045,564.611553133,454.650723814,366.105297558,294.804521096,237.38991552,191.157081924,153.928316161,123.950032495,99.8101644891,80.37165247,64.7188846329,52.1145689979,41.9650047624,33.792117225,27.2109390435,21.9114771264,17.6441110354,14.2078351192};
function this.Util_cvToperiod(cv)
   local index = this.clip(this.int((31. * cv)),0,31);
   return (Util_cvToperiod_c0[index+1] + (cv * (Util_cvToperiod_c1[index+1] + (Util_cvToperiod_c2[index+1] * cv))));

end

local Util_cvTokHz_c0 = {0.0327031956626,0.0329157760149,0.0339578485366,0.0368566350801,0.0432421259378,0.0556159052222,0.0777237842587,0.115068916026,0.175614259054,0.270739336253,0.416537388042,0.635566803598,0.959207146572,1.43081778941,2.109959525,3.07802092665,4.44569735701,6.36290872359,9.03192182114,12.7246766192,17.8056189134,24.7617346776,34.2419903781,47.1090421017,64.5069278521,87.9495573939,119.436233946,161.602273483,217.915147899,292.929618558,392.619239761,524.806644821,699.721497115};
local Util_cvTokHz_c1 = {0.225719191888,0.212293210117,0.179169381636,0.117604905736,0.0157801819103,(-0.142178074384),(-0.377466272128),(-0.718250312221),(-1.20179695141),(-1.87722845841),(-2.80907738384),(-4.08186733736),(-5.80600813072),(-8.12537311265),(-11.2270275603),(-15.3537053894),(-20.8197945237),(-28.0317982882),(-37.5145028842),(-49.9444141699),(-66.1924493548),(-87.3784044617),(-114.940396419),(-150.723337164),(-197.091583804),(-257.072283866),(-334.537673834),(-434.436788276),(-563.089816651),(-728.561857581),(-941.137257915),(-1213.92132821),(-1563.60330201)};
local Util_cvTokHz_c2 = {0.876337770753,1.08828690662,1.35149759677,1.67836784855,2.08429422425,2.58839706504,3.21442111597,3.99185397416,4.95731504247,6.1562804124,7.64522492346,9.49428229626,11.7905486396,14.6421849368,18.1835117495,22.5813361171,28.0428086641,34.825181012,43.2479230966,53.7077711535,66.697415176,82.8287060814,102.861475711,127.739327173,158.634081359,197.000973197,244.647197551,303.81703348,377.297556468,468.549917976,581.872375985,722.602755747,897.369877251};
function this.Util_cvTokHz(cv)
   local index = this.clip(this.int((31. * cv)),0,31);
   return (Util_cvTokHz_c0[index+1] + (cv * (Util_cvTokHz_c1[index+1] + (Util_cvTokHz_c2[index+1] * cv))));

end

local Ladder_tune_c0 = {0.00116481960515,0.00116491791621,0.00116533164712,0.00116631323664,0.00116815435145,0.00117119014415,0.00117580390106,0.00118243211228,0.00119156999873,0.00120377753367,0.00121968599903,0.00124000512017,0.00126553082561,0.00129715368239,0.00133586806099,0.00138278208834,0.00143912845142,0.00150627611911,0.00158574305463,0.00167920999658,0.00178853539242,0.00191577157433,0.00206318227426,0.00223326158196,0.0024287544578,0.00265267892,0.00290835003513,0.00319940584987,0.00352983541249,0.00390400904296,0.00432671102257,0.0048031748864,0.00533912151464,0.0059408002342,0.00661503315619,0.00736926299174,0.00821160460612,0.00915090058972,0.0101967811442,0.0113597286044,0.0126511469378,0.014083436591,0.0156700750738,0.0174257037056,0.0193662209737,0.0215088829877,0.0238724115485,0.0264771103857,0.0293449901566,0.0324999028448,0.0359676862346,0.0397763191937,0.0439560885399,0.0485397683267,0.0535628124411,0.0590635614661,0.0650834648289,0.0716673193279,0.0788635252062,0.0867243610182,0.0953062786305,0.104670219779,0.114881955711,0.126012451549,0.138138257112,0.151341926073,0.165712465425,0.181345817417,0.198345376202,0.216822541654,0.236897312943,0.258698924651,0.282366528387,0.308049923081,0.335910337322,0.36612126739,0.398869374794,0.434355447499,0.472795429181,0.514421521267,0.55948336274,0.608249293084,0.661007704091,0.718068486637,0.779764578932,0.846453623215,0.918519738316,0.996375416003,1.08046354956,1.17125960366,1.26927393511,1.37505427479,1.48918838164,1.61230688058,1.74508629659,1.88825229847,2.04258316635,2.20891349807,2.38813817067,2.5812165741,2.78917713556,3.01312215402,3.2542329658,3.51377546353,3.79310599198,4.0936776464,4.41704699998,4.7648812895,5.13896608961,5.54121350834,5.97367093881,6.43853040428,6.93813853576,7.47500722478,8.05182499574,8.6714691461,9.33701870508,10.0517682654,(-516.168451366),0.712358276647,0.712358276647,0.71235827664,0.71235827664,0.712358276643,0.712358276643,0.712358276643,0.712358276643,0.712358276647,0.71235827664};
local Ladder_tune_c1 = {0.00807190064324,0.00804681761421,0.00799394936678,0.00791028134085,0.00779254951856,0.00763722199636,0.00744047927854,0.00719819320717,0.00690590443755,0.00655879836272,0.00615167938405,0.00567894341842,0.00513454852537,0.00451198353029,0.0038042345113,0.00300374900946,0.00210239781257,0.00109143415341,(-3.8549846856e-05),(-0.00129766967093),(-0.0026967980242),(-0.00424761778489),(-0.00596267850268),(-0.00785545667587),(-0.00994042005362),(-0.0122330962244),(-0.0147501457678),(-0.0175094402663),(-0.020530145491),(-0.0238328100941),(-0.0274394601665),(-0.0313737000356),(-0.0356608197062),(-0.0403279093725),(-0.0454039814545),(-0.05092010064),(-0.0569095224507),(-0.0634078408708),(-0.0704531456247),(-0.0780861897149),(-0.0863505678797),(-0.0952929066638),(-0.104963066843),(-0.115414358987),(-0.126703773005),(-0.138892222545),(-0.152044805209),(-0.166231079574),(-0.181525360085),(-0.198007030965),(-0.215760880315),(-0.234877455718),(-0.255453442676),(-0.277592067326),(-0.301403524978),(-0.32700543609),(-0.354523331405),(-0.384091168094),(-0.41585187884),(-0.449957955946),(-0.486572072656),(-0.525867744016),(-0.568030029766),(-0.613256281886),(-0.661756939575),(-0.71375637467),(-0.769493790605),(-0.829224178285),(-0.893219332416),(-0.961768932048),(-1.03518168935),(-1.11378657086),(-1.19793409571),(-1.28799771562),(-1.3843752817),(-1.48749060357),(-1.59779510631),(-1.71576959162),(-1.84192610928),(-1.97680994607),(-2.12100173918),(-2.275119722),(-2.43982211027),(-2.61580963752),(-2.80382824873),(-3.00467196223),(-3.21918591007),(-3.44826956789),(-3.69288018591),(-3.95403643368),(-4.23282227138),(-4.53039106184),(-4.84796993806),(-5.18686444182),(-5.54846345013),(-5.93424440729),(-6.34577888092),(-6.78473846237),(-7.25290103213),(-7.75215741298),(-8.28451843422),(-8.8521224327),(-9.45724321677),(-10.1022985219),(-10.7898589877),(-11.5226576887),(-12.3036002515),(-13.1357755961),(-14.0224673377),(-14.9671658895),(-15.9735813104),(-17.0456569414),(-18.1875838803),(-19.4038163441),(-20.6990879749),(-22.0784291446),(-23.5471853216),(-25.1110365614),1114.29114726,0.,7.27595761418e-12,0.,7.27595761418e-12,(-7.27595761418e-12),0.,7.27595761418e-12,0.,7.27595761418e-12,(-7.27595761418e-12)};
local Ladder_tune_c2 = {0.0287518050049,0.0303517043226,0.0320406303232,0.0338235369123,0.0357056536566,0.0376925011228,0.0397899070706,0.0420040235465,0.0443413449286,0.0468087269759,0.0494134069373,0.0521630247797,0.0550656455974,0.0581297832682,0.0613644254263,0.0647790598241,0.0683837021621,0.0721889254659,0.076205891099,0.0804463815014,0.0849228347486,0.0896483810349,0.0946368811874,0.0999029673206,0.105462085756,0.111330542328,0.117525550213,0.124065280416,0.130968915073,0.138256703712,0.14595002265,0.154071437692,0.162644770323,0.171695167577,0.1812491758,0.191334818515,0.201981678618,0.21322098515,0.2250857049,0.237610639095,0.250832525488,0.264790146107,0.279524441015,0.295078628392,0.311498331299,0.328831711503,0.34712961074,0.366445699844,0.386836636171,0.408362229787,0.4310856189,0.455073455052,0.480396098626,0.507127825218,0.535347043503,0.565136525223,0.596583647967,0.629780651465,0.664824908146,0.701819208738,0.740872063785,0.782098021916,0.82561800584,0.871559667035,0.920057760158,0.971254538325,1.02530017034,1.08235318119,1.14258091701,1.20616003593,1.27327702626,1.34412875349,1.41892303772,1.49787926323,1.58122902199,1.66921679295,1.76210065912,1.86015306459,1.96366161364,2.07292991437,2.18827846918,2.31004561491,2.43858851517,2.57428420805,2.71753071195,2.86874819311,3.02838019799,3.19689495426,3.37478674419,3.5625773545,3.76081760681,3.97008897332,4.19100528235,4.4242145188,4.6704007248,4.93028600615,5.20463265033,5.49424536245,5.7999736256,6.1227141925,6.46341371579,6.82307152483,7.20274255678,7.60354045103,8.02664081559,8.47328467544,8.9447821125,9.44251610853,9.96794660156,10.5226147681,11.1081475437,11.726262395,12.3787723575,13.0675913532,13.7947398048,14.5623505617,15.372675156,16.228090407,(-600.544281473),0.,0.,0.,0.,0.,0.,0.,0.,0.,0.};
function this.Ladder_tune(cut)
   local index = this.clip(this.int((127. * cut)),0,127);
   return (Ladder_tune_c0[index+1] + (cut * (Ladder_tune_c1[index+1] + (Ladder_tune_c2[index+1] * cut))));

end

function this.Ladder_ladder_step(input,fh,res,p,dp)
   local w0 = this.Util_cubic_clipper((input + ((-4.) * res * p[3+1])));
   local w1 = this.Util_cubic_clipper(p[0+1]);
   dp[0+1] = ((w0 + (- w1)) * fh);
   local w3 = this.Util_cubic_clipper(p[1+1]);
   dp[1+1] = ((w1 + (- w3)) * fh);
   local w5 = this.Util_cubic_clipper(p[2+1]);
   dp[2+1] = ((w3 + (- w5)) * fh);
   local w7 = this.Util_cubic_clipper(p[3+1]);
   dp[3+1] = ((w5 + (- w7)) * fh);

end

function this.Ladder__ctx_type_2_init()
   local _ctx = {};
   _ctx.p = this.makeArray(4,0.);
   _ctx.fh = 0.;
   _ctx._inst25 = this.Util__ctx_type_1_init();
   return _ctx;

end

function this.Ladder_heun_init()
   return this.Ladder__ctx_type_2_init();
end

function this.Ladder_heun(_ctx,input,cut,res)
   local dp = {0.0,0.0,0.0,0.0};
   local pt = {0.0,0.0,0.0,0.0};
   local dpt = {0.0,0.0,0.0,0.0};
   if this.Util_change(_ctx._inst25,cut) then
      _ctx.fh = this.Ladder_tune(cut);

   end
   this.Ladder_ladder_step(input,_ctx.fh,res,_ctx.p,dpt);
   pt[0+1] = (_ctx.p[0+1] + dpt[0+1]);
   pt[1+1] = (_ctx.p[1+1] + dpt[1+1]);
   pt[2+1] = (_ctx.p[2+1] + dpt[2+1]);
   pt[3+1] = (_ctx.p[3+1] + dpt[3+1]);
   this.Ladder_ladder_step(input,_ctx.fh,res,pt,dp);
   _ctx.p[0+1] = (_ctx.p[0+1] + ((dp[0+1] + dpt[0+1]) * 0.5));
   _ctx.p[1+1] = (_ctx.p[1+1] + ((dp[1+1] + dpt[1+1]) * 0.5));
   _ctx.p[2+1] = (_ctx.p[2+1] + ((dp[2+1] + dpt[2+1]) * 0.5));
   _ctx.p[3+1] = (_ctx.p[3+1] + ((dp[3+1] + dpt[3+1]) * 0.5));
   return _ctx.p[3+1];

end

function this.Ladder__ctx_type_3_init()
   local _ctx = {};
   _ctx.p = this.makeArray(4,0.);
   _ctx.fh = 0.;
   _ctx._inst28 = this.Util__ctx_type_1_init();
   return _ctx;

end

function this.Ladder_euler_init()
   return this.Ladder__ctx_type_3_init();
end

function this.Ladder_euler(_ctx,input,cut,res)
   local dpt = {0.0,0.0,0.0,0.0};
   if this.Util_change(_ctx._inst28,cut) then
      _ctx.fh = this.Ladder_tune(cut);

   end
   this.Ladder_ladder_step(input,_ctx.fh,res,_ctx.p,dpt);
   _ctx.p[0+1] = (_ctx.p[0+1] + dpt[0+1]);
   _ctx.p[1+1] = (_ctx.p[1+1] + dpt[1+1]);
   _ctx.p[2+1] = (_ctx.p[2+1] + dpt[2+1]);
   _ctx.p[3+1] = (_ctx.p[3+1] + dpt[3+1]);
   return _ctx.p[3+1];

end

function this.Ladder__ctx_type_4_init()
   local _ctx = {};
   _ctx.e = this.Ladder__ctx_type_3_init();
   return _ctx;

end

function this.Ladder_process_euler_init()
   return this.Ladder__ctx_type_4_init();
end

function this.Ladder_process_euler(_ctx,input,cut,res)
   this.Ladder_euler(_ctx.e,input,cut,res);
   this.Ladder_euler(_ctx.e,input,cut,res);
   this.Ladder_euler(_ctx.e,input,cut,res);
   local out = this.Ladder_euler(_ctx.e,input,cut,res);
   return out;

end

function this.Ladder__ctx_type_5_init()
   local _ctx = {};
   _ctx.h = this.Ladder__ctx_type_2_init();
   return _ctx;

end

function this.Ladder_process_heun_init()
   return this.Ladder__ctx_type_5_init();
end

function this.Ladder_process_heun(_ctx,input,cut,res)
   this.Ladder_heun(_ctx.h,input,cut,res);
   this.Ladder_heun(_ctx.h,input,cut,res);
   this.Ladder_heun(_ctx.h,input,cut,res);
   local out = this.Ladder_heun(_ctx.h,input,cut,res);
   return out;

end

function this.Ladder__ctx_type_6_init()
   local _ctx = {};
   _ctx._inst33 = this.Ladder__ctx_type_5_init();
   return _ctx;

end

function this.Ladder_process_init()
   return this.Ladder__ctx_type_6_init();
end

function this.Ladder_process(_ctx,input,cut,res)
   return this.Ladder_process_heun(_ctx._inst33,input,cut,res);

end

function this.Ladder_noteOn_init()
   return this.Ladder__ctx_type_6_init();
end

function this.Ladder_noteOn(_ctx,note,velocity,channel)

end

function this.Ladder_noteOff_init()
   return this.Ladder__ctx_type_6_init();
end

function this.Ladder_noteOff(_ctx,note,channel)

end

function this.Ladder_controlChange_init()
   return this.Ladder__ctx_type_6_init();
end

function this.Ladder_controlChange(_ctx,control,value,channel)

end

function this.Ladder_default_init()
   return this.Ladder__ctx_type_6_init();
end

function this.Ladder_default(_ctx)

end


function this.process(ctx,input,cut,res) return this.Ladder_process(ctx,input,cut,res) end
function this.noteOn(ctx,note,velocity,channel) return this.Ladder_noteOn(ctx,note,velocity,channel) end
function this.noteOff(ctx,note,channel) return this.Ladder_noteOff(ctx,note,channel) end
function this.controlChange(ctx,control,value,channel) return this.Ladder_controlChange(ctx,control,value,channel) end
function this.init() return this.Ladder_process_init() end
function this.default(ctx) return this.Ladder_default(ctx) end
this.config = { inputs = 4, outputs = 1, noteon_inputs = 4, noteoff_inputs = 3, controlchange_inputs = 4, is_active = true }
return this

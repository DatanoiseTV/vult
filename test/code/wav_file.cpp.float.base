
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "wav_file.h"

int Wav_file_ext_wave_samples(){
   return 600;
}

float Wav_file_ext_wave(int channel, int index){
   if(channel == 0){
      return float_wrap_array(Wav_file_ext_wave_chan_0)[(index % 600)];
   }
   return 0.f;
}

void Wav_file__ctx_type_2_init(Wav_file__ctx_type_2 &_output_){
   Wav_file__ctx_type_2 _ctx;
   _ctx.i = 0;
   _output_ = _ctx;
   return ;
}

void Wav_file_index_init(Wav_file__ctx_type_2 &_output_){
   Wav_file__ctx_type_2_init(_output_);
   return ;
}

int Wav_file_index(Wav_file__ctx_type_2 &_ctx){
   _ctx.i = ((_ctx.i + 1) % Wav_file_ext_wave_samples());
   return _ctx.i;
}

void Wav_file__ctx_type_3_init(Wav_file__ctx_type_3 &_output_){
   Wav_file__ctx_type_3 _ctx;
   Wav_file__ctx_type_2_init(_ctx._inst2);
   _output_ = _ctx;
   return ;
}

void Wav_file_osc_wave_init(Wav_file__ctx_type_3 &_output_){
   Wav_file__ctx_type_3_init(_output_);
   return ;
}

float Wav_file_osc_wave(Wav_file__ctx_type_3 &_ctx, float cv){
   return Wav_file_ext_wave(0,Wav_file_index(_ctx._inst2));
}

void Wav_file__ctx_type_4_init(Wav_file__ctx_type_4 &_output_){
   Wav_file__ctx_type_4 _ctx;
   Wav_file__ctx_type_3_init(_ctx._inst4);
   _output_ = _ctx;
   return ;
}

void Wav_file_process_init(Wav_file__ctx_type_4 &_output_){
   Wav_file__ctx_type_4_init(_output_);
   return ;
}

float Wav_file_process(Wav_file__ctx_type_4 &_ctx, float cv){
   return Wav_file_osc_wave(_ctx._inst4,cv);
}

void Wav_file_noteOn_init(Wav_file__ctx_type_4 &_output_){
   Wav_file__ctx_type_4_init(_output_);
   return ;
}

void Wav_file_noteOn(Wav_file__ctx_type_4 &_ctx, int note, int velocity, int channel){
}

void Wav_file_noteOff_init(Wav_file__ctx_type_4 &_output_){
   Wav_file__ctx_type_4_init(_output_);
   return ;
}

void Wav_file_noteOff(Wav_file__ctx_type_4 &_ctx, int note, int channel){
}

void Wav_file_controlChange_init(Wav_file__ctx_type_4 &_output_){
   Wav_file__ctx_type_4_init(_output_);
   return ;
}

void Wav_file_controlChange(Wav_file__ctx_type_4 &_ctx, int control, int value, int channel){
}

void Wav_file_default_init(Wav_file__ctx_type_4 &_output_){
   Wav_file__ctx_type_4_init(_output_);
   return ;
}

void Wav_file_default(Wav_file__ctx_type_4 &_ctx){
}



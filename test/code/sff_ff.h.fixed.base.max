
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SFF_FF_H
#define SFF_FF_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "ext.h"
#include "ext_obex.h"
#include "z_dsp.h"

typedef struct _tuple___real_real__ {
   fix16_t field_0;
   fix16_t field_1;
} _tuple___real_real__;

typedef struct Sff_ff__ctx_type_0 {
   fix16_t process_ret_1;
   fix16_t process_ret_0;
} Sff_ff__ctx_type_0;

typedef Sff_ff__ctx_type_0 Sff_ff_process_type;

void Sff_ff__ctx_type_0_init(Sff_ff__ctx_type_0 &_output_);

static_inline void Sff_ff_process_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline void Sff_ff_process(Sff_ff__ctx_type_0 &_ctx, fix16_t a, fix16_t b){
   _ctx.process_ret_0 = (a + b);
   _ctx.process_ret_1 = (a + (- b));
   return ;
}

typedef Sff_ff__ctx_type_0 Sff_ff_process_ret_0_type;

static_inline void Sff_ff_process_ret_0_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t Sff_ff_process_ret_0(Sff_ff__ctx_type_0 &_ctx){
   return _ctx.process_ret_0;
};

typedef Sff_ff__ctx_type_0 Sff_ff_process_ret_1_type;

static_inline void Sff_ff_process_ret_1_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t Sff_ff_process_ret_1(Sff_ff__ctx_type_0 &_ctx){
   return _ctx.process_ret_1;
};

typedef Sff_ff__ctx_type_0 Sff_ff_noteOn_type;

static_inline void Sff_ff_noteOn_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline void Sff_ff_noteOn(Sff_ff__ctx_type_0 &_ctx, int note, int velocity, int channel){
}

typedef Sff_ff__ctx_type_0 Sff_ff_noteOff_type;

static_inline void Sff_ff_noteOff_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline void Sff_ff_noteOff(Sff_ff__ctx_type_0 &_ctx, int note, int channel){
}

typedef Sff_ff__ctx_type_0 Sff_ff_controlChange_type;

static_inline void Sff_ff_controlChange_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline void Sff_ff_controlChange(Sff_ff__ctx_type_0 &_ctx, int control, int value, int channel){
}

typedef Sff_ff__ctx_type_0 Sff_ff_default_type;

static_inline void Sff_ff_default_init(Sff_ff__ctx_type_0 &_output_){
   Sff_ff__ctx_type_0_init(_output_);
   return ;
}

static_inline void Sff_ff_default(Sff_ff__ctx_type_0 &_ctx){
}



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

extern "C" {
EXPORT void ext_main(void *r);
}

#endif // SFF_FF_H

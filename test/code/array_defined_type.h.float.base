
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef ARRAY_DEFINED_TYPE_H
#define ARRAY_DEFINED_TYPE_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "array_defined_type.tables.h"

typedef struct Array_defined_type_dot {
   float x;
   float y;
} Array_defined_type_dot;

void Array_defined_type_dot_init(Array_defined_type_dot &_output_);

typedef struct Array_defined_type__ctx_type_0 {
   Array_defined_type_dot p1[12];
} Array_defined_type__ctx_type_0;

typedef Array_defined_type__ctx_type_0 Array_defined_type_foo_type;

void Array_defined_type__ctx_type_0_init(Array_defined_type__ctx_type_0 &_output_);

static_inline void Array_defined_type_foo_init(Array_defined_type__ctx_type_0 &_output_){
   Array_defined_type__ctx_type_0_init(_output_);
   return ;
}

static_inline void Array_defined_type_foo(Array_defined_type__ctx_type_0 &_ctx){
}

typedef struct Array_defined_type__ctx_type_1 {
   Array_defined_type__ctx_type_0 _inst1b1;
} Array_defined_type__ctx_type_1;

typedef Array_defined_type__ctx_type_1 Array_defined_type_process_type;

static_inline void Array_defined_type__ctx_type_1_init(Array_defined_type__ctx_type_1 &_output_){
   Array_defined_type__ctx_type_1 _ctx;
   Array_defined_type__ctx_type_0_init(_ctx._inst1b1);
   _output_ = _ctx;
   return ;
}

static_inline void Array_defined_type_process_init(Array_defined_type__ctx_type_1 &_output_){
   Array_defined_type__ctx_type_1_init(_output_);
   return ;
}

static_inline float Array_defined_type_process(Array_defined_type__ctx_type_1 &_ctx, float input){
   Array_defined_type_foo(_ctx._inst1b1);
   return input;
}

typedef Array_defined_type__ctx_type_1 Array_defined_type_noteOn_type;

static_inline void Array_defined_type_noteOn_init(Array_defined_type__ctx_type_1 &_output_){
   Array_defined_type__ctx_type_1_init(_output_);
   return ;
}

static_inline void Array_defined_type_noteOn(Array_defined_type__ctx_type_1 &_ctx, int note, int velocity, int channel){
}

typedef Array_defined_type__ctx_type_1 Array_defined_type_noteOff_type;

static_inline void Array_defined_type_noteOff_init(Array_defined_type__ctx_type_1 &_output_){
   Array_defined_type__ctx_type_1_init(_output_);
   return ;
}

static_inline void Array_defined_type_noteOff(Array_defined_type__ctx_type_1 &_ctx, int note, int channel){
}

typedef Array_defined_type__ctx_type_1 Array_defined_type_controlChange_type;

static_inline void Array_defined_type_controlChange_init(Array_defined_type__ctx_type_1 &_output_){
   Array_defined_type__ctx_type_1_init(_output_);
   return ;
}

static_inline void Array_defined_type_controlChange(Array_defined_type__ctx_type_1 &_ctx, int control, int value, int channel){
}

typedef Array_defined_type__ctx_type_1 Array_defined_type_default_type;

static_inline void Array_defined_type_default_init(Array_defined_type__ctx_type_1 &_output_){
   Array_defined_type__ctx_type_1_init(_output_);
   return ;
}

static_inline void Array_defined_type_default(Array_defined_type__ctx_type_1 &_ctx){
}



#endif // ARRAY_DEFINED_TYPE_H

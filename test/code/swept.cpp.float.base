
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "swept.h"

void Util__ctx_type_3_init(Util__ctx_type_3 &_output_){
   Util__ctx_type_3 _ctx;
   _ctx.y1 = 0.0f;
   _ctx.x1 = 0.0f;
   _output_ = _ctx;
   return ;
}

float Util_dcblock(Util__ctx_type_3 &_ctx, float x0){
   float y0;
   y0 = (x0 + (- _ctx.x1) + (0.995f * _ctx.y1));
   _ctx.x1 = x0;
   _ctx.y1 = y0;
   return y0;
}

void Swept__ctx_type_0_init(Swept__ctx_type_0 &_output_){
   Swept__ctx_type_0 _ctx;
   _ctx.out = 0.0f;
   Util__ctx_type_0_init(_ctx._inst181);
   _output_ = _ctx;
   return ;
}

float Swept_process(Swept__ctx_type_0 &_ctx, float gate, float start, float end, float rate){
   float a_rate;
   a_rate = (1.f / (0.01f + (100.f * rate)));
   uint8_t bgate;
   bgate = (gate > 0.5f);
   _ctx.out = (_ctx.out + (0.004f * rate * ((- _ctx.out) + (1024.f * end))));
   if(Util_edge(_ctx._inst181,bgate)){
      _ctx.out = (1024.f * start);
   }
   return (0.0009766f * _ctx.out);
}



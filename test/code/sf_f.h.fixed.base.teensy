
#ifndef SF_F_H
#define SF_F_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "sf_f.tables.h"
#include <Audio.h>
#include <AudioStream.h>

static_inline fix16_t Sf_f_process(fix16_t input){
   return fix_mul(input,input);
};

static_inline void Sf_f_noteOn(int note, int velocity, int channel){
}

static_inline void Sf_f_noteOff(int note, int channel){
}

static_inline void Sf_f_controlChange(int control, int value, int channel){
}

static_inline void Sf_f_default(){
}



class sf_f : public AudioStream
{
public:
  sf_f(void) : AudioStream(1, inputQueueArray)
  {
     Sf_f_process_init(data);
  }

  void begin() {
    Sf_f_default(data);
  }

  // Handles note on events
  void noteOn(int note, int velocity, int channel){
    // If the velocity is larger than zero, means that is turning on
    if(velocity) Sf_f_noteOn(data, note, velocity, channel);
    else         Sf_f_noteOff(data, note, channel);
  }

  // Handles note off events
  void noteOff(int note, int velocity, int channel) {
    Sf_f_noteOff(data, note, channel);

  }

  // Handles control change events
  void controlChange(int control, int value, int channel) {
    Sf_f_controlChange(data, control, value, channel);
  }

  virtual void update(void);

private:
  Sf_f_process_type data;
  audio_block_t *inputQueueArray[1];

};

#endif // SF_F_H

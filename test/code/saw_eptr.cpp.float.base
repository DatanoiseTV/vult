
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "saw_eptr.h"

void Util__ctx_type_3_init(Util__ctx_type_3 &_output_){
   Util__ctx_type_3 _ctx;
   _ctx.y1 = 0.0f;
   _ctx.x1 = 0.0f;
   _output_ = _ctx;
   return ;
}

float Util_dcblock(Util__ctx_type_3 &_ctx, float x0){
   float y0;
   y0 = (x0 + (- _ctx.x1) + (0.995f * _ctx.y1));
   _ctx.x1 = x0;
   _ctx.y1 = y0;
   return y0;
}

void Saw_eptr__ctx_type_0_init(Saw_eptr__ctx_type_0 &_output_){
   Saw_eptr__ctx_type_0 _ctx;
   _ctx.rate = 0.0f;
   _ctx.phase = 0.0f;
   Util__ctx_type_1_init(_ctx._inst159);
   Saw_eptr_default(_ctx);
   _output_ = _ctx;
   return ;
}

float Saw_eptr_process(Saw_eptr__ctx_type_0 &_ctx, float cv){
   float y;
   y = 0.0f;
   if(Util_change(_ctx._inst159,cv)){
      _ctx.rate = Util_cvToRate(cv);
   }
   _ctx.phase = (_ctx.phase + (2.f * _ctx.rate));
   if(_ctx.phase > (1.f + (- _ctx.rate))){
      y = (-1.f + _ctx.phase + (- (_ctx.phase / _ctx.rate)) + (1.f / _ctx.rate));
      _ctx.phase = (-2.f + _ctx.phase);
   }
   else
   {
      y = _ctx.phase;
   }
   return y;
}



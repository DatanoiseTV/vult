
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.pi()              return 3.1415926535897932384; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Saturate_table_c0 = {(-1.000000),(-0.999999),(-0.999998),(-0.999989),(-0.999938),(-0.999668),(-0.998293),(-0.991621),(-0.961512),(-0.840904),(-0.470267),0.000402,0.000000,(-0.000402),0.470267,0.840904,0.961512,0.991621,0.998293,0.999668,0.999938,0.999989,0.999998,1.000000,1.000000,1.000000};
local Saturate_table_c1 = {0.000000,0.000000,0.000000,0.000002,0.000015,0.000091,0.000540,0.003120,0.017423,0.091625,0.414243,1.085316,0.929674,1.085316,0.414243,0.091625,0.017423,0.003120,0.000540,0.000091,0.000015,0.000002,0.000000,0.000000,0.000000,(-0.000000)};
local Saturate_table_c2 = {0.000000,0.000000,0.000000,0.000000,0.000001,0.000006,0.000043,0.000292,0.001990,0.013391,0.083468,0.322510,0.000000,(-0.322510),(-0.083468),(-0.013391),(-0.001990),(-0.000292),(-0.000043),(-0.000006),(-0.000001),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000)};
function this.Saturate_table(x)
   local index = this.clip(this.int((x + 12.000000)),0,24);
   return (Saturate_table_c0[index+1] + (x * (Saturate_table_c1[index+1] + (Saturate_table_c2[index+1] * x))));

end

function this.Saturate_process(_ctx,x)
   return this.Saturate_table(x);

end

function this.Saturate_noteOn(_ctx,note,velocity,channel)

end

function this.Saturate_noteOff(_ctx,note,channel)

end

function this.Saturate_controlChange(_ctx,control,value,channel)

end

function this.Saturate_default(_ctx)

end


function this.process(x) return this.Saturate_process(x) end
function this.noteOn(note,velocity,channel) return this.Saturate_noteOn(note,velocity,channel) end
function this.noteOff(note,channel) return this.Saturate_noteOff(note,channel) end
function this.controlChange(control,value,channel) return this.Saturate_controlChange(control,value,channel) end
function this.init() return this.Saturate_process_init() end
function this.default(ctx) return this.Saturate_default(ctx) end
this.config = { inputs = 1, outputs = 1, noteon_inputs = 3, noteoff_inputs = 2, controlchange_inputs = 3, is_active = false }
return this

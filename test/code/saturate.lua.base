
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i]=v; end
function this.get(a,i)          return a[i]; end
function this.makeArray(size,v) local a = ffi.new("double[?]",size); for i=0,size-1 do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Saturate_table_c0 = ffi.new("double[129]", {(-1.001374),(-1.006906),(-0.998630),(-0.998630),(-0.998630),(-0.998630),(-0.998630),(-0.998630),(-0.998630),(-0.998630),(-0.998629),(-0.998629),(-0.998629),(-0.998628),(-0.998627),(-0.998625),(-0.998624),(-0.998621),(-0.998617),(-0.998612),(-0.999975),(-0.999965),(-0.999952),(-0.999933),(-0.999907),(-0.999871),(-0.999821),(-0.999753),(-0.999658),(-0.999529),(-0.999350),(-0.999106),(-0.998772),(-0.998316),(-0.997694),(-0.996849),(-0.995702),(-0.994152),(-0.992060),(-0.989247),(-0.985477),(-0.980441),(-0.973743),(-0.964872),(-0.953183),(-0.937867),(-0.917930),(-0.892172),(-0.859190),(-0.817409),(-0.765175),(-0.700938),(-0.623579),(-0.532923),(-0.430471),(-0.320268),(-0.209647),(-0.109223),(-0.031177),0.014939,0.028028,0.018870,0.005421,0.000000,0.000000,(-0.005421),(-0.018870),(-0.028028),(-0.014939),0.031177,0.109223,0.209647,0.320268,0.430471,0.532923,0.623579,0.700938,0.765175,0.817409,0.859190,0.892172,0.917930,0.937867,0.953183,0.964872,0.973743,0.980441,0.985477,0.989247,0.992060,0.994152,0.995702,0.996849,0.997694,0.998316,0.998772,0.999106,0.999350,0.999529,0.999658,0.999753,0.999821,0.999871,0.999907,0.999933,0.999952,0.999965,0.999975,0.998612,0.998617,0.998621,0.998624,0.998625,0.998627,0.998628,0.998629,0.998629,0.998629,0.998630,0.998630,0.998630,0.998630,0.998630,0.998630,0.998630,0.998630,1.006906,1.001374,1.001374});
local Saturate_table_c1 = ffi.new("double[129]", {(-0.000000),(-0.000000),0.000000,0.000000,0.000000,(-0.000000),0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000001,0.000001,0.000001,0.000002,0.000003,0.000004,0.000006,0.000008,0.000012,0.000016,0.000023,0.000033,0.000047,0.000067,0.000095,0.000135,0.000191,0.000270,0.000381,0.000538,0.000759,0.001071,0.001508,0.002121,0.002980,0.004181,0.005858,0.008196,0.011447,0.015958,0.022199,0.030808,0.042638,0.058822,0.080842,0.110598,0.150459,0.203255,0.272141,0.360212,0.469700,0.600552,0.748290,0.901487,1.040196,1.138141,1.172059,1.137998,1.064638,1.005717,1.005717,1.064638,1.137998,1.172059,1.138141,1.040196,0.901487,0.748290,0.600552,0.469700,0.360212,0.272141,0.203255,0.150459,0.110598,0.080842,0.058822,0.042638,0.030808,0.022199,0.015958,0.011447,0.008196,0.005858,0.004181,0.002980,0.002121,0.001508,0.001071,0.000759,0.000538,0.000381,0.000270,0.000191,0.000135,0.000095,0.000067,0.000047,0.000033,0.000023,0.000016,0.000012,0.000008,0.000006,0.000004,0.000003,0.000002,0.000001,0.000001,0.000001,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,(-0.000000),0.000000,0.000000,0.000000,(-0.000000),(-0.000000),0.000000});
local Saturate_table_c2 = ffi.new("double[129]", {(-0.000000),0.000000,(-0.000000),0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000000,0.000001,0.000001,0.000001,0.000002,0.000003,0.000005,0.000007,0.000010,0.000014,0.000020,0.000030,0.000043,0.000063,0.000092,0.000133,0.000194,0.000282,0.000410,0.000597,0.000868,0.001263,0.001836,0.002669,0.003879,0.005634,0.008176,0.011851,0.017149,0.024754,0.035602,0.050937,0.072327,0.101579,0.140422,0.189749,0.248174,0.309805,0.361810,0.383764,0.352153,0.252165,0.092126,(-0.092126),(-0.252165),(-0.352153),(-0.383764),(-0.361810),(-0.309805),(-0.248174),(-0.189749),(-0.140422),(-0.101579),(-0.072327),(-0.050937),(-0.035602),(-0.024754),(-0.017149),(-0.011851),(-0.008176),(-0.005634),(-0.003879),(-0.002669),(-0.001836),(-0.001263),(-0.000868),(-0.000597),(-0.000410),(-0.000282),(-0.000194),(-0.000133),(-0.000092),(-0.000063),(-0.000043),(-0.000030),(-0.000020),(-0.000014),(-0.000010),(-0.000007),(-0.000005),(-0.000003),(-0.000002),(-0.000001),(-0.000001),(-0.000001),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),(-0.000000),0.000000,(-0.000000),0.000000,(-0.000000)});
function this.Saturate_table(x)
   local index = this.clip(this.int((5.291667 * (x + 12.000000))),0,127);
   return (this.get(this.wrap_array(Saturate_table_c0),index) + (x * (this.get(this.wrap_array(Saturate_table_c1),index) + (this.get(this.wrap_array(Saturate_table_c2),index) * x))));

end

function this.Saturate_process(_ctx,x)
   if (x == 0.000000) then
      return 0.000000;

   end
   return this.Saturate_table(x);

end

function this.Saturate_noteOn(_ctx,note,velocity,channel)

end

function this.Saturate_noteOff(_ctx,note,channel)

end

function this.Saturate_controlChange(_ctx,control,value,channel)

end

function this.Saturate_default(_ctx)

end


function this.process(in0) return this.Saturate_process(in0) end
function this.noteOn(in0,in1,in2) return this.Saturate_noteOn(in0,in1,in2) end
function this.noteOff(in0,in1) return this.Saturate_noteOff(in0,in1) end
function this.controlChange(in0,in1,in2) return this.Saturate_controlChange(in0,in1,in2) end
function this.init() return this.Saturate_process_init() end
function this.default(ctx) return this.Saturate_default(ctx) end
this.config = { inputs = 1, outputs = 1, noteon_inputs = 3, noteoff_inputs = 2, controlchange_inputs = 3, is_active = false }
return this

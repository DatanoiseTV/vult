
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SHORT_DELAY_H
#define SHORT_DELAY_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Short_delay__ctx_type_0 {
   fix16_t x4;
   fix16_t x3;
   fix16_t x2;
} Short_delay__ctx_type_0;

typedef Short_delay__ctx_type_0 Short_delay_soft_type;

void Short_delay__ctx_type_0_init(Short_delay__ctx_type_0 &_output_);

void Short_delay_soft_init(Short_delay__ctx_type_0 &_output_);

fix16_t Short_delay_soft(Short_delay__ctx_type_0 &_ctx, fix16_t x1);

typedef struct Short_delay__ctx_type_1 {
   int write_pos;
   fix16_t buffer[22050];
} Short_delay__ctx_type_1;

typedef Short_delay__ctx_type_1 Short_delay_do_type;

void Short_delay__ctx_type_1_init(Short_delay__ctx_type_1 &_output_);

void Short_delay_do_init(Short_delay__ctx_type_1 &_output_);

fix16_t Short_delay_do(Short_delay__ctx_type_1 &_ctx, fix16_t x, fix16_t time, fix16_t feedback);

typedef struct Short_delay__ctx_type_2 {
   Short_delay__ctx_type_1 _inst4;
   Short_delay__ctx_type_0 _inst3;
} Short_delay__ctx_type_2;

typedef Short_delay__ctx_type_2 Short_delay_process_type;

void Short_delay__ctx_type_2_init(Short_delay__ctx_type_2 &_output_);

void Short_delay_process_init(Short_delay__ctx_type_2 &_output_);

fix16_t Short_delay_process(Short_delay__ctx_type_2 &_ctx, fix16_t x, fix16_t time, fix16_t feedback);

typedef Short_delay__ctx_type_2 Short_delay_noteOn_type;

void Short_delay_noteOn_init(Short_delay__ctx_type_2 &_output_);

void Short_delay_noteOn(Short_delay__ctx_type_2 &_ctx, int note, int velocity, int channel);

typedef Short_delay__ctx_type_2 Short_delay_noteOff_type;

void Short_delay_noteOff_init(Short_delay__ctx_type_2 &_output_);

void Short_delay_noteOff(Short_delay__ctx_type_2 &_ctx, int note, int channel);

typedef Short_delay__ctx_type_2 Short_delay_controlChange_type;

void Short_delay_controlChange_init(Short_delay__ctx_type_2 &_output_);

void Short_delay_controlChange(Short_delay__ctx_type_2 &_ctx, int control, int value, int channel);

typedef Short_delay__ctx_type_2 Short_delay_default_type;

void Short_delay_default_init(Short_delay__ctx_type_2 &_output_);

void Short_delay_default(Short_delay__ctx_type_2 &_ctx);



#endif // SHORT_DELAY_H

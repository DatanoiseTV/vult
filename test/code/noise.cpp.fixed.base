
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "noise.h"

void Noise__ctx_type_0_init(Noise__ctx_type_0 &_output_){
   Noise__ctx_type_0 _ctx;
   _ctx.w1 = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

void Noise_pinker_init(Noise__ctx_type_0 &_output_){
   Noise__ctx_type_0_init(_output_);
   return ;
}

fix16_t Noise_pinker(Noise__ctx_type_0 &_ctx, fix16_t x){
   fix16_t b0;
   b0 = 0x718 /* 0.027713 */;
   fix16_t b1;
   b1 = 0x718 /* 0.027713 */;
   fix16_t a1;
   a1 = (-0xf1cf /* -0.944574 */);
   fix16_t w0;
   w0 = fix_add(x,(- fix_mul(a1,_ctx.w1)));
   fix16_t y0;
   y0 = fix_add(fix_mul(b0,w0),fix_mul(b1,_ctx.w1));
   _ctx.w1 = w0;
   return y0;
}

void Noise__ctx_type_1_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1 _ctx;
   _ctx.x2 = 0;
   _ctx.x1 = 0;
   Noise__ctx_type_0_init(_ctx._inst2);
   _output_ = _ctx;
   return ;
}

void Noise_process_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1_init(_output_);
   return ;
}

fix16_t Noise_process(Noise__ctx_type_1 &_ctx, fix16_t color){
   _ctx.x1 = (((_ctx.x1 * 17389) + 7919) % 32768);
   fix16_t y1;
   y1 = fix_mul(int_to_fix(_ctx.x1),0x2 /* 0.000031 */);
   _ctx.x2 = (((_ctx.x2 * 27449) + 12553) % 32768);
   fix16_t y2;
   y2 = fix_mul(int_to_fix(_ctx.x2),0x2 /* 0.000031 */);
   fix16_t out;
   uint8_t _cond_7;
   _cond_7 = (color > 0x8000 /* 0.500000 */);
   if(_cond_7){ out = Noise_pinker(_ctx._inst2,fix_add(y1,(- y2))); }
   else
   { out = fix_add(y1,(- y2)); }
   return fix_mul(0x20000 /* 2.000000 */,out);
}

void Noise_noteOn_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1_init(_output_);
   return ;
}

void Noise_noteOn(Noise__ctx_type_1 &_ctx, int note, int velocity, int channel){
}

void Noise_noteOff_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1_init(_output_);
   return ;
}

void Noise_noteOff(Noise__ctx_type_1 &_ctx, int note, int channel){
}

void Noise_controlChange_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1_init(_output_);
   return ;
}

void Noise_controlChange(Noise__ctx_type_1 &_ctx, int control, int value, int channel){
}

void Noise_default_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1_init(_output_);
   return ;
}

void Noise_default(Noise__ctx_type_1 &_ctx){
}



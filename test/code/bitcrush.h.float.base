
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef BITCRUSH_H
#define BITCRUSH_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

static const float Bitcrush_factor_c0[129] = {24.787522f,24.787366f,24.786758f,24.785421f,24.783098f,24.779552f,24.774563f,24.767930f,24.759467f,24.749003f,24.736384f,24.721468f,24.704127f,24.684247f,24.661725f,24.636469f,24.608398f,24.577443f,24.543542f,24.506645f,24.466708f,24.423697f,24.377586f,24.328355f,24.275991f,24.220489f,24.161848f,24.100074f,24.035178f,23.967176f,23.896090f,23.821943f,23.744765f,23.664590f,23.581453f,23.495394f,23.406457f,23.314686f,23.220129f,23.122837f,23.022863f,22.920260f,22.815085f,22.707396f,22.597252f,22.484713f,22.369840f,22.252697f,22.133345f,22.011851f,21.888276f,21.762688f,21.635151f,21.505730f,21.374491f,21.241500f,21.106823f,20.970525f,20.832672f,20.693329f,20.552560f,20.410430f,20.267003f,20.122343f,19.976512f,19.829572f,19.681586f,19.532614f,19.382716f,19.231953f,19.080382f,18.928062f,18.775049f,18.621401f,18.467171f,18.312414f,18.157184f,18.001534f,17.845514f,17.689175f,17.532567f,17.375738f,17.218737f,17.061608f,16.904399f,16.747153f,16.589915f,16.432726f,16.275628f,16.118662f,15.961866f,15.805281f,15.648942f,15.492887f,15.337151f,15.181769f,15.026773f,14.872198f,14.718074f,14.564431f,14.411301f,14.258711f,14.106690f,13.955264f,13.804460f,13.654302f,13.504816f,13.356025f,13.207950f,13.060615f,12.914040f,12.768245f,12.623250f,12.479073f,12.335732f,12.193245f,12.051626f,11.910893f,11.771061f,11.632142f,11.494151f,11.357101f,11.221003f,11.085870f,10.951712f,10.818539f,10.686362f,10.555189f,10.425029f};
static const float Bitcrush_factor_c1[129] = {(-74.359191f),(-74.319346f),(-74.241444f),(-74.127271f),(-73.978548f),(-73.796938f),(-73.584043f),(-73.341411f),(-73.070535f),(-72.772851f),(-72.449748f),(-72.102564f),(-71.732587f),(-71.341060f),(-70.929179f),(-70.498098f),(-70.048927f),(-69.582736f),(-69.100554f),(-68.603372f),(-68.092144f),(-67.567788f),(-67.031185f),(-66.483186f),(-65.924605f),(-65.356227f),(-64.778807f),(-64.193066f),(-63.599702f),(-62.999381f),(-62.392745f),(-61.780407f),(-61.162958f),(-60.540963f),(-59.914964f),(-59.285480f),(-58.653009f),(-58.018027f),(-57.380989f),(-56.742332f),(-56.102472f),(-55.461808f),(-54.820720f),(-54.179573f),(-53.538712f),(-52.898468f),(-52.259157f),(-51.621079f),(-50.984521f),(-50.349753f),(-49.717035f),(-49.086612f),(-48.458718f),(-47.833573f),(-47.211387f),(-46.592359f),(-45.976677f),(-45.364516f),(-44.756045f),(-44.151422f),(-43.550793f),(-42.954299f),(-42.362071f),(-41.774231f),(-41.190893f),(-40.612165f),(-40.038145f),(-39.468926f),(-38.904594f),(-38.345228f),(-37.790901f),(-37.241679f),(-36.697623f),(-36.158788f),(-35.625226f),(-35.096979f),(-34.574090f),(-34.056592f),(-33.544517f),(-33.037891f),(-32.536736f),(-32.041071f),(-31.550911f),(-31.066266f),(-30.587144f),(-30.113549f),(-29.645482f),(-29.182941f),(-28.725921f),(-28.274415f),(-27.828412f),(-27.387900f),(-26.952864f),(-26.523287f),(-26.099148f),(-25.680427f),(-25.267100f),(-24.859142f),(-24.456525f),(-24.059222f),(-23.667203f),(-23.280435f),(-22.898886f),(-22.522521f),(-22.151305f),(-21.785202f),(-21.424174f),(-21.068182f),(-20.717186f),(-20.371146f),(-20.030021f),(-19.693769f),(-19.362348f),(-19.035712f),(-18.713820f),(-18.396626f),(-18.084086f),(-17.776153f),(-17.472783f),(-17.173929f),(-16.879545f),(-16.589584f),(-16.303999f),(-16.022742f),(-15.745768f),(-15.473027f),(-15.204473f),(-14.940059f),(-14.679735f)};
static const float Bitcrush_factor_c2[129] = {110.245584f,107.691748f,105.197072f,102.760184f,100.379747f,98.054453f,95.783024f,93.564212f,91.396800f,89.279595f,87.211435f,85.191185f,83.217733f,81.289996f,79.406916f,77.567456f,75.770608f,74.015384f,72.300819f,70.625973f,68.989924f,67.391774f,65.830645f,64.305680f,62.816040f,61.360908f,59.939485f,58.550988f,57.194656f,55.869743f,54.575522f,53.311281f,52.076327f,50.869980f,49.691578f,48.540474f,47.416035f,46.317644f,45.244697f,44.196604f,43.172791f,42.172695f,41.195765f,40.241466f,39.309274f,38.398675f,37.509171f,36.640272f,35.791501f,34.962392f,34.152489f,33.361347f,32.588533f,31.833620f,31.096195f,30.375852f,29.672197f,28.984841f,28.313408f,27.657528f,27.016842f,26.390998f,25.779651f,25.182466f,24.599115f,24.029277f,23.472639f,22.928896f,22.397749f,21.878906f,21.372081f,20.876998f,20.393383f,19.920970f,19.459502f,19.008723f,18.568386f,18.138250f,17.718078f,17.307639f,16.906708f,16.515064f,16.132493f,15.758785f,15.393733f,15.037137f,14.688802f,14.348537f,14.016153f,13.691469f,13.374307f,13.064491f,12.761853f,12.466225f,12.177445f,11.895355f,11.619799f,11.350627f,11.087690f,10.830844f,10.579947f,10.334863f,10.095456f,9.861595f,9.633152f,9.410000f,9.192018f,8.979085f,8.771085f,8.567903f,8.369427f,8.175550f,7.986163f,7.801164f,7.620450f,7.443923f,7.271484f,7.103041f,6.938499f,6.777769f,6.620762f,6.467392f,6.317575f,6.171229f,6.028272f,5.888628f,5.752218f,5.618968f,5.488804f};
float Bitcrush_factor(float cv);

float Bitcrush_process(float i, float cv);

void Bitcrush_noteOn(int note, int velocity, int channel);

void Bitcrush_noteOff(int note, int channel);

void Bitcrush_controlChange(int control, int value, int channel);

void Bitcrush_default();



#endif // BITCRUSH_H

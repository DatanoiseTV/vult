
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef BITCRUSH_H
#define BITCRUSH_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "bitcrush.tables.h"

static_inline float Bitcrush_factor_raw_c0(int index){
   return Bitcrush_factor_c0[index];
};

static_inline float Bitcrush_factor_raw_c1(int index){
   return Bitcrush_factor_c1[index];
};

static_inline float Bitcrush_factor_raw_c2(int index){
   return Bitcrush_factor_c2[index];
};

static_inline float Bitcrush_factor(float cv){
   int index;
   index = int_clip(float_to_int((127.f * cv)),0,127);
   return (float_wrap_array(Bitcrush_factor_c0)[index] + (cv * (float_wrap_array(Bitcrush_factor_c1)[index] + (cv * float_wrap_array(Bitcrush_factor_c2)[index]))));
}

float Bitcrush_process(float i, float cv);

static_inline void Bitcrush_noteOn(int note, int velocity, int channel){
}

static_inline void Bitcrush_noteOff(int note, int channel){
}

static_inline void Bitcrush_controlChange(int control, int value, int channel){
}

static_inline void Bitcrush_default(){
}



#endif // BITCRUSH_H


/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SF_F_H
#define SF_F_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "sf_f.tables.h"

static_inline fix16_t Sf_f_process(fix16_t input){
   return fix_mul(input,input);
};

static_inline void Sf_f_noteOn(int note, int velocity, int channel){
}

static_inline void Sf_f_noteOff(int note, int channel){
}

static_inline void Sf_f_controlChange(int control, int value, int channel){
}

static_inline void Sf_f_default(){
}



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>

EXPORT void *sf_f__constructor();

EXPORT void sf_f__destructor(void *object);

EXPORT double sf_f__process(void *object, double in_0);

EXPORT void sf_f__noteOn(void *object, int note, int vel, int channel);

EXPORT void sf_f__noteOff(void *object, int note, int channel);

EXPORT void sf_f__controlChange(void *object, int control, int value, int channel);

#ifdef __cplusplus
}
#endif

#endif // SF_F_H

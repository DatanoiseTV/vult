
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "bitcrush.h"

fix16_t Bitcrush_process(fix16_t i, fix16_t cv){
   fix16_t out;
   out = i;
   uint8_t _cond_7;
   _cond_7 = (cv == 0x0 /* 0.000000 */);
   if(_cond_7){
      out = i;
   }
   else
   {
      fix16_t crush;
      crush = fix_mul(cv,0xa0000 /* 10.000000 */);
      fix16_t factor;
      factor = fix_div(0x640000 /* 100.000000 */,crush);
      int x;
      x = fix_to_int(fix_mul(i,factor));
      out = fix_div(int_to_fix(x),factor);
   }
   return out;
}

void Bitcrush_noteOn(int note, int velocity, int channel){
}

void Bitcrush_noteOff(int note, int channel){
}

void Bitcrush_controlChange(int control, int value, int channel){
}

void Bitcrush_default(){
}



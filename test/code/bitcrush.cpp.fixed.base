
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "bitcrush.h"

fix16_t Bitcrush_factor(fix16_t cv){
   int index;
   index = int_clip(fix_to_int(fix_mul(0x7f0000 /* 127.000000 */,cv)),0,127);
   return (fix_wrap_array(Bitcrush_factor_c0)[index] + fix_mul(cv,(fix_wrap_array(Bitcrush_factor_c1)[index] + fix_mul(fix_wrap_array(Bitcrush_factor_c2)[index],cv))));
}

fix16_t Bitcrush_process(fix16_t i, fix16_t cv){
   fix16_t out;
   out = i;
   uint8_t _cond_8;
   _cond_8 = (cv == 0x0 /* 0.000000 */);
   if(_cond_8){
      out = i;
   }
   else
   {
      fix16_t b;
      b = Bitcrush_factor(cv);
      int x;
      x = fix_to_int(fix_mul(i,b));
      out = fix_div(int_to_fix(x),b);
   }
   return out;
}

void Bitcrush_noteOn(int note, int velocity, int channel){
}

void Bitcrush_noteOff(int note, int channel){
}

void Bitcrush_controlChange(int control, int value, int channel){
}

void Bitcrush_default(){
}



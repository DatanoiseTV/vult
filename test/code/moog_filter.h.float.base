#ifndef MOOG_FILTER_H
#define MOOG_FILTER_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct _ctx_type_0 {
   float pre_x;
} _ctx_type_0;

typedef _ctx_type_0 change_type;

_ctx_type_0 _Moog_filter__ctx_type_0_init();

_ctx_type_0 _Moog_filter_change_init();

uint8_t _Moog_filter_change(_ctx_type_0 &_ctx, float x);

float _Moog_filter_min(float a, float b);

float _Moog_filter_max(float a, float b);

float _Moog_filter_clip(float value, float low, float high);

float _Moog_filter_PI();

float _Moog_filter_thermal();

typedef struct _ctx_type_6 {
   float tw2;
   float tw1;
   float tw0;
   float dw3;
   float dw2;
   float dw1;
   float dw0;
} _ctx_type_6;

typedef _ctx_type_6 moog_step_type;

_ctx_type_6 _Moog_filter__ctx_type_6_init();

_ctx_type_6 _Moog_filter_moog_step_init();

float _Moog_filter_moog_step(_ctx_type_6 &_ctx, float input, float resFixed, float tune, float output);

typedef struct _ctx_type_7 {
   float tune;
   float resFixed;
   _ctx_type_6 filter;
   float dx1;
   _ctx_type_0 _inst1;
   _ctx_type_0 _inst0;
} _ctx_type_7;

typedef _ctx_type_7 moog_type;

_ctx_type_7 _Moog_filter__ctx_type_7_init();

_ctx_type_7 _Moog_filter_moog_init();

float _Moog_filter_moog(_ctx_type_7 &_ctx, float input, float cut, float res);



#endif // MOOG_FILTER_H

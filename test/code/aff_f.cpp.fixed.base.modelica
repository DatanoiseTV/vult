
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "aff_f.h"



extern "C" {

EXPORT void *aff_f__constructor()
{
   Aff_f_process_type *data = (Aff_f_process_type *)malloc(sizeof(Aff_f_process_type));
   Aff_f_process_init(*data);
   Aff_f_default(*data);
   return (void *)data;
}

EXPORT void aff_f__destructor(void *object)
{
   Aff_f_process_type *data = (Aff_f_process_type *)object;
   free(data);
}

EXPORT double aff_f__process(void *object, double in_0, double in_1)
{
   Aff_f_process_type *data = (Aff_f_process_type *)object;
   fix16_t ret =  Aff_f_process(*data,float_to_fix(in_0),float_to_fix(in_1)); 
return fix_to_float(ret); 
}


EXPORT void aff_f__noteOn(void *object, int note,int velocity,int channel){
   Aff_f_process_type *data = (Aff_f_process_type *)object;
   if(vel) Aff_f_noteOn(*data,(int)note,(int)velocity,(int)channel);
   else Aff_f_noteOff(*data,(int)note,(int)channel);
}



EXPORT void aff_f__noteOff(void *object, int note,int channel) {
   Aff_f_process_type *data = (Aff_f_process_type *)object;
   Aff_f_noteOff(*data,(int)note,(int)channel);
}



EXPORT void aff_f__controlChange(void *object, int control,int value,int channel) {
   Aff_f_process_type *data = (Aff_f_process_type *)object;
   Aff_f_controlChange(*data,(int)control,(int)value,(int)channel);
}


} // extern "C"

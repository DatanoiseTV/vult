
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef FILTERS_H
#define FILTERS_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

float Filters_pi();

float Filters_min(float a, float b);

float Filters_max(float a, float b);

float Filters_clip(float low, float high, float value);

typedef struct Filters__ctx_type_4 {
   float pre_x;
} Filters__ctx_type_4;

typedef Filters__ctx_type_4 Filters_change_type;

void Filters__ctx_type_4_init(Filters__ctx_type_4 &_output_);

void Filters_change_init(Filters__ctx_type_4 &_output_);

uint8_t Filters_change(Filters__ctx_type_4 &_ctx, float x);

typedef struct Filters__ctx_type_5 {
   float w2;
   float w1;
} Filters__ctx_type_5;

typedef Filters__ctx_type_5 Filters_biquad_type;

void Filters__ctx_type_5_init(Filters__ctx_type_5 &_output_);

void Filters_biquad_init(Filters__ctx_type_5 &_output_);

float Filters_biquad(Filters__ctx_type_5 &_ctx, float x, float b0, float b1, float b2, float a1, float a2);

typedef struct Filters__ctx_type_6 {
   float k;
   float fc;
   Filters__ctx_type_5 _inst9;
   Filters__ctx_type_4 _inst7;
} Filters__ctx_type_6;

typedef Filters__ctx_type_6 Filters_lp6_type;

void Filters__ctx_type_6_init(Filters__ctx_type_6 &_output_);

void Filters_lp6_init(Filters__ctx_type_6 &_output_);

float Filters_lp6(Filters__ctx_type_6 &_ctx, float x, float fc_in);

typedef struct Filters__ctx_type_7 {
   float b2;
   float b1;
   float b0;
   float a2;
   float a1;
   Filters__ctx_type_5 _inst14;
   Filters__ctx_type_4 _inst12;
   Filters__ctx_type_4 _inst11;
} Filters__ctx_type_7;

typedef Filters__ctx_type_7 Filters_lp12_type;

void Filters__ctx_type_7_init(Filters__ctx_type_7 &_output_);

void Filters_lp12_init(Filters__ctx_type_7 &_output_);

float Filters_lp12(Filters__ctx_type_7 &_ctx, float x, float fc, float q);

typedef struct Filters__ctx_type_8 {
   Filters__ctx_type_5 _inst16;
} Filters__ctx_type_8;

typedef Filters__ctx_type_8 Filters_hp6_type;

void Filters__ctx_type_8_init(Filters__ctx_type_8 &_output_);

void Filters_hp6_init(Filters__ctx_type_8 &_output_);

float Filters_hp6(Filters__ctx_type_8 &_ctx, float x, float fc);

typedef struct Filters__ctx_type_9 {
   Filters__ctx_type_5 _inst18;
} Filters__ctx_type_9;

typedef Filters__ctx_type_9 Filters_allp6_type;

void Filters__ctx_type_9_init(Filters__ctx_type_9 &_output_);

void Filters_allp6_init(Filters__ctx_type_9 &_output_);

float Filters_allp6(Filters__ctx_type_9 &_ctx, float x, float fc);

typedef struct Filters__ctx_type_10 {
   float b2;
   float b1;
   float b0;
   float a2;
   float a1;
   Filters__ctx_type_5 _inst23;
   Filters__ctx_type_4 _inst21;
   Filters__ctx_type_4 _inst20;
} Filters__ctx_type_10;

typedef Filters__ctx_type_10 Filters_hp12_type;

void Filters__ctx_type_10_init(Filters__ctx_type_10 &_output_);

void Filters_hp12_init(Filters__ctx_type_10 &_output_);

float Filters_hp12(Filters__ctx_type_10 &_ctx, float x, float fc, float q);

typedef struct Filters__ctx_type_11 {
   float b2;
   float b1;
   float b0;
   float a2;
   float a1;
   Filters__ctx_type_5 _inst28;
   Filters__ctx_type_4 _inst26;
   Filters__ctx_type_4 _inst25;
} Filters__ctx_type_11;

typedef Filters__ctx_type_11 Filters_bp12_type;

void Filters__ctx_type_11_init(Filters__ctx_type_11 &_output_);

void Filters_bp12_init(Filters__ctx_type_11 &_output_);

float Filters_bp12(Filters__ctx_type_11 &_ctx, float x, float fc, float q);

typedef struct Filters__ctx_type_12 {
   float b2;
   float b1;
   float b0;
   float a2;
   float a1;
   Filters__ctx_type_5 _inst33;
   Filters__ctx_type_4 _inst31;
   Filters__ctx_type_4 _inst30;
} Filters__ctx_type_12;

typedef Filters__ctx_type_12 Filters_notch12_type;

void Filters__ctx_type_12_init(Filters__ctx_type_12 &_output_);

void Filters_notch12_init(Filters__ctx_type_12 &_output_);

float Filters_notch12(Filters__ctx_type_12 &_ctx, float x, float fc, float q);

typedef struct Filters__ctx_type_13 {
   float b2;
   float b1;
   float b0;
   float a2;
   float a1;
   Filters__ctx_type_5 _inst38;
   Filters__ctx_type_4 _inst36;
   Filters__ctx_type_4 _inst35;
} Filters__ctx_type_13;

typedef Filters__ctx_type_13 Filters_allp12_type;

void Filters__ctx_type_13_init(Filters__ctx_type_13 &_output_);

void Filters_allp12_init(Filters__ctx_type_13 &_output_);

float Filters_allp12(Filters__ctx_type_13 &_ctx, float x, float fc, float q);



#endif // FILTERS_H

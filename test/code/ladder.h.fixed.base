
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef LADDER_H
#define LADDER_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Util__ctx_type_0 {
   uint8_t pre;
} Util__ctx_type_0;

typedef Util__ctx_type_0 Util_edge_type;

void Util__ctx_type_0_init(Util__ctx_type_0 &_output_);

void Util_edge_init(Util__ctx_type_0 &_output_);

uint8_t Util_edge(Util__ctx_type_0 &_ctx, uint8_t x);

typedef struct Util__ctx_type_1 {
   fix16_t pre_x;
} Util__ctx_type_1;

typedef Util__ctx_type_1 Util_change_type;

void Util__ctx_type_1_init(Util__ctx_type_1 &_output_);

void Util_change_init(Util__ctx_type_1 &_output_);

uint8_t Util_change(Util__ctx_type_1 &_ctx, fix16_t x);

fix16_t Util_map(fix16_t x, fix16_t x0, fix16_t x1, fix16_t y0, fix16_t y1);

typedef struct Util__ctx_type_3 {
   fix16_t y1;
   fix16_t x1;
} Util__ctx_type_3;

typedef Util__ctx_type_3 Util_dcblock_type;

void Util__ctx_type_3_init(Util__ctx_type_3 &_output_);

void Util_dcblock_init(Util__ctx_type_3 &_output_);

fix16_t Util_dcblock(Util__ctx_type_3 &_ctx, fix16_t x0);

typedef struct Util__ctx_type_4 {
   fix16_t x;
} Util__ctx_type_4;

typedef Util__ctx_type_4 Util_smooth_type;

void Util__ctx_type_4_init(Util__ctx_type_4 &_output_);

void Util_smooth_init(Util__ctx_type_4 &_output_);

fix16_t Util_smooth(Util__ctx_type_4 &_ctx, fix16_t input);

typedef struct Util__ctx_type_5 {
   fix16_t x0;
} Util__ctx_type_5;

typedef Util__ctx_type_5 Util_average2_type;

void Util__ctx_type_5_init(Util__ctx_type_5 &_output_);

void Util_average2_init(Util__ctx_type_5 &_output_);

fix16_t Util_average2(Util__ctx_type_5 &_ctx, fix16_t x1);

static const fix16_t Util_pitchToRate_c0[33] = {0x3099 /* 0.189842 */,0x30fa /* 0.191326 */,0x32dd /* 0.198689 */,0x382c /* 0.219425 */,0x4403 /* 0.265677 */,0x5b3f /* 0.356438 */,0x8549 /* 0.520651 */,0xcd33 /* 0.801560 */,0x14344 /* 1.262758 */,0x1ff1e /* 1.996562 */,0x322b2 /* 3.135544 */,0x4de4b /* 4.868347 */,0x77616 /* 7.461281 */,0xb49a7 /* 11.287715 */,0x10de35 /* 16.867996 */,0x18ec5d /* 24.923305 */,0x2472d2 /* 36.448521 */,0x34cf55 /* 52.809903 */,0x4be069 /* 75.876616 */,0x6c327d /* 108.197225 */,0x993b7f /* 153.232414 */,0xd7ac1e /* 215.672344 */,0x12dd8bc /* 301.846626 */,0x1a44c4c /* 420.298038 */,0x2468153 /* 582.505178 */,0x323cfe7 /* 803.812129 */,0x450e152 /* 1104.880165 */,0x5e91fc6 /* 1513.124126 */,0x8115fbb /* 2065.373952 */,0xafa3b05 /* 2810.230550 */,0xee4e723 /* 3812.902888 */,0x1427868c /* 5159.525580 */,0x1b33c2ef /* 6963.761469 */};
static const fix16_t Util_pitchToRate_c1[33] = {0x2cb /* 0.010913 */,0x29a /* 0.010176 */,0x222 /* 0.008334 */,0x13e /* 0.004867 */,(-0x3d /* -0.000939 */),(-0x293 /* -0.010061 */),(-0x619 /* -0.023820 */),(-0xb43 /* -0.044002 */),(-0x12b0 /* -0.073002 */),(-0x1d30 /* -0.114025 */),(-0x2bdc /* -0.171341 */),(-0x4028 /* -0.250621 */),(-0x5c00 /* -0.359381 */),(-0x81ee /* -0.507548 */),(-0xb54d /* -0.708208 */),(-0xfa83 /* -0.978575 */),(-0x1575c /* -1.341250 */),(-0x1d36a /* -1.825848 */),(-0x2789b /* -2.471123 */),(-0x353e5 /* -3.327721 */),(-0x4762f /* -4.461658 */),(-0x5f581 /* -5.959006 */),(-0x7ee7f /* -7.931626 */),(-0xa867a /* -10.525312 */),(-0xdede0 /* -13.929212 */),(-0x126338 /* -18.387588 */),(-0x183843 /* -24.219785 */),(-0x1fd5cc /* -31.835151 */),(-0x29c501 /* -41.769557 */),(-0x36b4da /* -54.706455 */),(-0x478a8d /* -71.541226 */),(-0x5d6c2e /* -93.422592 */),(-0x79d2ba /* -121.823163 */)};
static const fix16_t Util_pitchToRate_c2[33] = {0x17 /* 0.000356 */,0x1d /* 0.000447 */,0x24 /* 0.000562 */,0x2e /* 0.000707 */,0x3a /* 0.000889 */,0x49 /* 0.001119 */,0x5c /* 0.001407 */,0x73 /* 0.001769 */,0x91 /* 0.002225 */,0xb7 /* 0.002799 */,0xe6 /* 0.003520 */,0x122 /* 0.004426 */,0x16c /* 0.005567 */,0x1ca /* 0.007001 */,0x241 /* 0.008805 */,0x2d5 /* 0.011074 */,0x390 /* 0.013927 */,0x47b /* 0.017515 */,0x5a3 /* 0.022028 */,0x717 /* 0.027704 */,0x8eb /* 0.034841 */,0xb37 /* 0.043818 */,0xe1b /* 0.055107 */,0x11be /* 0.069305 */,0x1650 /* 0.087163 */,0x1c0f /* 0.109617 */,0x234a /* 0.137862 */,0x2c62 /* 0.173377 */,0x37d2 /* 0.218054 */,0x4633 /* 0.274227 */,0x584a /* 0.344892 */,0x6f0c /* 0.433780 */,0x8ba8 /* 0.545543 */};
fix16_t Util_pitchToRate(fix16_t pitch);

fix16_t Util_cvToPitch(fix16_t cv);

static const fix16_t Util_cvToRate_c0[33] = {0xc265 /* 0.759367 */,0xc34b /* 0.762877 */,0xc79c /* 0.779737 */,0xd35d /* 0.825652 */,0xecb5 /* 0.924648 */,0x11cc6 /* 1.112398 */,0x170d0 /* 1.440687 */,0x1fbbf /* 1.983392 */,0x2d82c /* 2.844434 */,0x42b16 /* 4.168310 */,0x6276c /* 6.153994 */,0x912bc /* 9.073195 */,0xd4b57 /* 13.294301 */,0x135049 /* 19.313616 */,0x1bcbcd /* 27.796102 */,0x27a0d7 /* 39.628290 */,0x37fc95 /* 55.986657 */,0x4e6d3f /* 78.426750 */,0x6cff8b /* 108.998215 */,0x966330 /* 150.387464 */,0xce1e58 /* 206.118533 */,0x118c81b /* 280.781675 */,0x17c5b85 /* 380.357513 */,0x2009cde /* 512.612775 */,0x2af9de4 /* 687.616764 */,0x3965959 /* 918.349028 */,0x4c59ba2 /* 1221.607949 */,0x6530d5f /* 1619.052235 */,0x85aa11b /* 2138.629322 */,0xaff6fc9 /* 2815.436671 */,0xe702993 /* 3696.162408 */,0x12e6b1b1 /* 4838.694117 */,0x18ae3626 /* 6318.211520 */};
static const fix16_t Util_cvToRate_c1[33] = {0x53ede /* 5.245583 */,0x4ffba /* 4.998943 */,0x46730 /* 4.403089 */,0x351b1 /* 3.319116 */,0x19082 /* 1.564497 */,(-0x11968 /* -1.099256 */),(-0x4fb73 /* -4.982226 */),(-0xa7c61 /* -10.485864 */),(-0x1220c1 /* -18.127956 */),(-0x1c92f8 /* -28.574100 */),(-0x2aad67 /* -42.677360 */),(-0x3d8733 /* -61.528124 */),(-0x56844b /* -86.516770 */),(-0x776981 /* -119.412133 */),(-0xa275d7 /* -162.460318 */),(-0xda821d /* -218.508269 */),(-0x1232823 /* -291.156786 */),(-0x180f4fc /* -384.956978 */),(-0x1f9a6fc /* -505.652297 */),(-0x2947562 /* -660.458539 */),(-0x35a7eb5 /* -858.494950 */),(-0x4572c62 /* -1111.173376 */),(-0x598dbc3 /* -1432.858445 */),(-0x7318b61 /* -1841.544459 */),(-0x937d0e8 /* -2359.816046 */),(-0xbc7cba3 /* -3015.795467 */),(-0xf04d690 /* -3844.838138 */),(-0x131b1a17 /* -4891.101919 */),(-0x18423280 /* -6210.197274 */),(-0x1ebcfe6e /* -7868.993868 */),(-0x26e3c72b /* -9955.778008 */),(-0x311fbf74 /* -12575.747874 */),(-0x3df63c10 /* -15862.234621 */)};
static const fix16_t Util_cvToRate_c2[33] = {0x142026 /* 20.125592 */,0x187523 /* 24.457572 */,0x1db8d5 /* 29.722000 */,0x241e9c /* 36.119582 */,0x2be4ec /* 43.894227 */,0x3557a3 /* 53.342343 */,0x40d2fb /* 64.824143 */,0x4ec701 /* 78.777366 */,0x5fbbe6 /* 95.733987 */,0x745729 /* 116.340471 */,0x8d61e8 /* 141.382451 */,0xabd08c /* 171.814646 */,0xd0cc1f /* 208.797363 */,0xfdbd8b /* 253.740413 */,0x1345b72 /* 308.357211 */,0x176bb0a /* 374.730622 */,0x1c763be /* 455.389632 */,0x229692b /* 553.410816 */,0x2a08973 /* 672.536916 */,0x3314a65 /* 817.290611 */,0x3e13782 /* 993.216833 */,0x4b70028 /* 1207.000622 */,0x5bacdca /* 1466.803875 */,0x6f6877e /* 1782.529271 */,0x8763eb8 /* 2166.244997 */,0xa487cd2 /* 2632.487590 */,0xc7f1297 /* 3199.072620 */,0xf2fac4b /* 3887.673024 */,0x1274dbf3 /* 4724.859179 */,0x166d3ecc /* 5741.245302 */,0x1b417116 /* 6977.441755 */,0x211f4a3f /* 8479.290028 */,0x2840749a /* 10304.455486 */};
fix16_t Util_cvToRate(fix16_t cv);

fix16_t Util_pitchToCv(fix16_t pitch);

static const fix16_t Util_cvToRate_unit_c0[33] = {0x30 /* 0.000742 */,0x30 /* 0.000745 */,0x31 /* 0.000761 */,0x34 /* 0.000806 */,0x3b /* 0.000903 */,0x47 /* 0.001086 */,0x5c /* 0.001407 */,0x7e /* 0.001937 */,0xb6 /* 0.002778 */,0x10a /* 0.004071 */,0x189 /* 0.006010 */,0x244 /* 0.008861 */,0x352 /* 0.012983 */,0x4d4 /* 0.018861 */,0x6f2 /* 0.027145 */,0x9e8 /* 0.038700 */,0xdff /* 0.054674 */,0x139b /* 0.076589 */,0x1b3f /* 0.106444 */,0x2598 /* 0.146863 */,0x3387 /* 0.201288 */,0x4632 /* 0.274201 */,0x5f16 /* 0.371443 */,0x8027 /* 0.500598 */,0xabe7 /* 0.671501 */,0xe596 /* 0.896825 */,0x13166 /* 1.192977 */,0x194c3 /* 1.581106 */,0x216a8 /* 2.088505 */,0x2bfdb /* 2.749450 */,0x39c0a /* 3.609534 */,0x4b9ac /* 4.725287 */,0x62b8d /* 6.170128 */};
static const fix16_t Util_cvToRate_unit_c1[33] = {0x14f /* 0.005123 */,0x13f /* 0.004882 */,0x119 /* 0.004300 */,0xd4 /* 0.003241 */,0x64 /* 0.001528 */,(-0x46 /* -0.001073 */),(-0x13e /* -0.004865 */),(-0x29f /* -0.010240 */),(-0x488 /* -0.017703 */),(-0x724 /* -0.027904 */),(-0xaab /* -0.041677 */),(-0xf61 /* -0.060086 */),(-0x15a1 /* -0.084489 */),(-0x1dda /* -0.116613 */),(-0x289d /* -0.158653 */),(-0x36a0 /* -0.213387 */),(-0x48ca /* -0.284333 */),(-0x603d /* -0.375935 */),(-0x7e69 /* -0.493801 */),(-0xa51d /* -0.644979 */),(-0xd69f /* -0.838374 */),(-0x115cb /* -1.085130 */),(-0x16636 /* -1.399276 */),(-0x1cc62 /* -1.798383 */),(-0x24df4 /* -2.304508 */),(-0x2f1f2 /* -2.945113 */),(-0x3c135 /* -3.754725 */),(-0x4c6c6 /* -4.776467 */),(-0x6108c /* -6.064646 */),(-0x7af3f /* -7.684564 */),(-0x9b8f1 /* -9.722439 */),(-0xc47ef /* -12.281004 */),(-0xf7d8f /* -15.490463 */)};
static const fix16_t Util_cvToRate_unit_c2[33] = {0x508 /* 0.019654 */,0x61d /* 0.023884 */,0x76e /* 0.029025 */,0x907 /* 0.035273 */,0xaf9 /* 0.042865 */,0xd55 /* 0.052092 */,0x1034 /* 0.063305 */,0x13b1 /* 0.076931 */,0x17ee /* 0.093490 */,0x1d15 /* 0.113614 */,0x2358 /* 0.138069 */,0x2af4 /* 0.167788 */,0x3433 /* 0.203904 */,0x3f6f /* 0.247793 */,0x4d16 /* 0.301130 */,0x5dae /* 0.365948 */,0x71d8 /* 0.444716 */,0x8a5a /* 0.540440 */,0xa822 /* 0.656774 */,0xcc52 /* 0.798135 */,0xf84d /* 0.969938 */,0x12dc0 /* 1.178712 */,0x16eb3 /* 1.432426 */,0x1bda1 /* 1.740751 */,0x21d8f /* 2.115474 */,0x2921f /* 2.570789 */,0x31fc4 /* 3.124094 */,0x3cbeb /* 3.796556 */,0x49d36 /* 4.614120 */,0x59b4f /* 5.606685 */,0x6d05c /* 6.813908 */,0x847d2 /* 8.280557 */,0xa101d /* 10.062945 */};
fix16_t Util_cvToRate_unit(fix16_t cv);

static const fix16_t Saturate_table_c0[11] = {0x0 /* 0.000000 */,(-0x1d2 /* -0.007122 */),0x3fd3 /* 0.249321 */,0x9607 /* 0.586047 */,0xce86 /* 0.806743 */,0xeae7 /* 0.917595 */,0xf77d /* 0.966766 */,0xfcb2 /* 0.987103 */,0xfec1 /* 0.995137 */,0xff8a /* 0.998208 */,0xffd5 /* 0.999352 */};
static const fix16_t Saturate_table_c1[11] = {0x10c08 /* 1.047001 */,0x11cfe /* 1.113257 */,0xaf93 /* 0.685850 */,0x4dfd /* 0.304651 */,0x1e16 /* 0.117525 */,0xae3 /* 0.042540 */,0x3cf /* 0.014886 */,0x14e /* 0.005099 */,0x70 /* 0.001720 */,0x25 /* 0.000574 */,0xc /* 0.000189 */};
static const fix16_t Saturate_table_c2[11] = {(-0x40d1 /* -0.253198 */),(-0x5806 /* -0.343842 */),(-0x2a6e /* -0.165755 */),(-0xed2 /* -0.057906 */),(-0x4ac /* -0.018252 */),(-0x16d /* -0.005573 */),(-0x6e /* -0.001686 */),(-0x21 /* -0.000508 */),(-0xa /* -0.000153 */),(-0x3 /* -0.000046 */),(-0x0 /* -0.000014 */)};
fix16_t Saturate_table(fix16_t x);

fix16_t Saturate_process(fix16_t x);

void Saturate_noteOn(int note, int velocity, int channel);

void Saturate_noteOff(int note, int channel);

void Saturate_controlChange(int control, int value, int channel);

void Saturate_default();

static const fix16_t Ladder_getTune_c0[129] = {0x98 /* 0.002327 */,0x98 /* 0.002327 */,0x98 /* 0.002328 */,0x98 /* 0.002330 */,0x98 /* 0.002334 */,0x99 /* 0.002340 */,0x99 /* 0.002349 */,0x9a /* 0.002362 */,0x9b /* 0.002380 */,0x9d /* 0.002404 */,0x9f /* 0.002435 */,0xa2 /* 0.002475 */,0xa5 /* 0.002525 */,0xa9 /* 0.002587 */,0xae /* 0.002663 */,0xb4 /* 0.002755 */,0xbb /* 0.002865 */,0xc4 /* 0.002996 */,0xce /* 0.003151 */,0xda /* 0.003334 */,0xe8 /* 0.003546 */,0xf8 /* 0.003793 */,0x10b /* 0.004079 */,0x120 /* 0.004409 */,0x139 /* 0.004786 */,0x155 /* 0.005218 */,0x176 /* 0.005710 */,0x19a /* 0.006269 */,0x1c4 /* 0.006902 */,0x1f3 /* 0.007618 */,0x228 /* 0.008423 */,0x263 /* 0.009329 */,0x2a6 /* 0.010346 */,0x2f0 /* 0.011483 */,0x343 /* 0.012754 */,0x3a0 /* 0.014170 */,0x407 /* 0.015746 */,0x47a /* 0.017498 */,0x4fa /* 0.019440 */,0x586 /* 0.021590 */,0x622 /* 0.023968 */,0x6ce /* 0.026593 */,0x78c /* 0.029485 */,0x85d /* 0.032670 */,0x942 /* 0.036170 */,0xa3e /* 0.040012 */,0xb52 /* 0.044223 */,0xc80 /* 0.048834 */,0xdca /* 0.053875 */,0xf33 /* 0.059380 */,0x10bc /* 0.065383 */,0x1269 /* 0.071922 */,0x143b /* 0.079035 */,0x1636 /* 0.086763 */,0x185b /* 0.095148 */,0x1aaf /* 0.104235 */,0x1d33 /* 0.114068 */,0x1fec /* 0.124697 */,0x22db /* 0.136169 */,0x2606 /* 0.148534 */,0x296e /* 0.161843 */,0x2d17 /* 0.176147 */,0x3106 /* 0.191498 */,0x353c /* 0.207947 */,0x39bd /* 0.225544 */,0x3e8c /* 0.244338 */,0x43ad /* 0.264374 */,0x4923 /* 0.285695 */,0x4eef /* 0.308340 */,0x5514 /* 0.332341 */,0x5b93 /* 0.357724 */,0x626f /* 0.384507 */,0x69a6 /* 0.412697 */,0x7139 /* 0.442287 */,0x7927 /* 0.473258 */,0x816d /* 0.505574 */,0x8a07 /* 0.539176 */,0x92f0 /* 0.573987 */,0x9c22 /* 0.609901 */,0xa593 /* 0.646782 */,0xaf38 /* 0.684463 */,0xb905 /* 0.722736 */,0xc2e8 /* 0.761354 */,0xccce /* 0.800022 */,0xd6a0 /* 0.838393 */,0xe045 /* 0.876064 */,0xe99e /* 0.912569 */,0xf287 /* 0.947376 */,0xfad9 /* 0.979880 */,0x10268 /* 1.009400 */,0x10900 /* 1.035170 */,0x10e6c /* 1.056342 */,0x1126d /* 1.071976 */,0x114bf /* 1.081042 */,0x11519 /* 1.082415 */,0x1132b /* 1.074881 */,0x10ea0 /* 1.057134 */,0x1071c /* 1.027785 */,0xfc41 /* 0.985367 */,0xeda8 /* 0.928349 */,0xdaea /* 0.855148 */,0xc39f /* 0.764148 */,0xa75a /* 0.653729 */,0x85b4 /* 0.522289 */,0x5e47 /* 0.368283 */,0x30b5 /* 0.190263 */,(-0x359 /* -0.013077 */),(-0x3e2b /* -0.242846 */),(-0x7ff9 /* -0.499902 */),(-0xc8e7 /* -0.784782 */),(-0x118ff /* -1.097643 */),(-0x1702c /* -1.438184 */),(-0x1ce3a /* -1.805577 */),(-0x232ca /* -2.198398 */),(-0x29d53 /* -2.614559 */),(-0x30d1e /* -3.051247 */),(-0x3813f /* -3.504879 */),(-0x3f897 /* -3.971065 */),(-0x471d1 /* -4.444596 */),(-0x4eb61 /* -4.919461 */),(-0x5638d /* -5.388878 */),(-0x5d86a /* -5.845380 */),(-0x647ea /* -6.280919 */),(-0x6afe0 /* -6.687025 */),(-0x70e14 /* -7.054997 */),(-0x7604a /* -7.376137 */),(-0x7a45b /* -7.642022 */),(-0x7d844 /* -7.844801 */),(-0x7fa3e /* -7.977515 */)};
static const fix16_t Ladder_getTune_c1[129] = {0x41f /* 0.016107 */,0x41c /* 0.016057 */,0x415 /* 0.015952 */,0x40a /* 0.015787 */,0x3fb /* 0.015554 */,0x3e7 /* 0.015247 */,0x3cd /* 0.014859 */,0x3ae /* 0.014381 */,0x388 /* 0.013805 */,0x35b /* 0.013121 */,0x327 /* 0.012320 */,0x2ea /* 0.011390 */,0x2a4 /* 0.010321 */,0x254 /* 0.009099 */,0x1f9 /* 0.007711 */,0x192 /* 0.006144 */,0x11f /* 0.004381 */,0x9d /* 0.002406 */,0xd /* 0.000201 */,(-0x93 /* -0.002252 */),(-0x145 /* -0.004974 */),(-0x20b /* -0.007986 */),(-0x2e5 /* -0.011312 */),(-0x3d5 /* -0.014976 */),(-0x4dd /* -0.019005 */),(-0x5ff /* -0.023426 */),(-0x73c /* -0.028271 */),(-0x898 /* -0.033570 */),(-0xa13 /* -0.039358 */),(-0xbb1 /* -0.045671 */),(-0xd73 /* -0.052548 */),(-0xf5e /* -0.060029 */),(-0x1172 /* -0.068157 */),(-0x13b4 /* -0.076980 */),(-0x1627 /* -0.086546 */),(-0x18ce /* -0.096905 */),(-0x1bad /* -0.108114 */),(-0x1ec7 /* -0.120230 */),(-0x2220 /* -0.133313 */),(-0x25bd /* -0.147428 */),(-0x29a2 /* -0.162643 */),(-0x2dd4 /* -0.179029 */),(-0x3258 /* -0.196661 */),(-0x3732 /* -0.215617 */),(-0x3c69 /* -0.235979 */),(-0x4201 /* -0.257834 */),(-0x4801 /* -0.281270 */),(-0x4e6f /* -0.306383 */),(-0x5551 /* -0.333267 */),(-0x5cad /* -0.362026 */),(-0x648c /* -0.392761 */),(-0x6cf2 /* -0.425582 */),(-0x75e9 /* -0.460598 */),(-0x7f77 /* -0.497923 */),(-0x89a4 /* -0.537673 */),(-0x9478 /* -0.579964 */),(-0x9ffa /* -0.624916 */),(-0xac32 /* -0.672649 */),(-0xb928 /* -0.723281 */),(-0xc6e4 /* -0.776930 */),(-0xd56e /* -0.833714 */),(-0xe4cc /* -0.893743 */),(-0xf506 /* -0.957126 */),(-0x10622 /* -1.023964 */),(-0x11827 /* -1.094350 */),(-0x12b19 /* -1.168364 */),(-0x13efe /* -1.246077 */),(-0x153d9 /* -1.327540 */),(-0x169ac /* -1.412789 */),(-0x18078 /* -1.501835 */),(-0x1983b /* -1.594663 */),(-0x1b0f4 /* -1.691231 */),(-0x1ca9c /* -1.791457 */),(-0x1e52d /* -1.895224 */),(-0x2009b /* -2.002367 */),(-0x21cd7 /* -2.112669 */),(-0x239d1 /* -2.225857 */),(-0x25772 /* -2.341591 */),(-0x2759f /* -2.459461 */),(-0x29437 /* -2.578975 */),(-0x2b315 /* -2.699553 */),(-0x2d20d /* -2.820517 */),(-0x2f0ea /* -2.941082 */),(-0x30f73 /* -3.060349 */),(-0x32d63 /* -3.177293 */),(-0x34a6e /* -3.290752 */),(-0x36640 /* -3.399423 */),(-0x38079 /* -3.501850 */),(-0x398ae /* -3.596415 */),(-0x3ae6b /* -3.681333 */),(-0x3c130 /* -3.754645 */),(-0x3d070 /* -3.814216 */),(-0x3db94 /* -3.857732 */),(-0x3e1f8 /* -3.882700 */),(-0x3e2ee /* -3.886455 */),(-0x3ddbd /* -3.866169 */),(-0x3d1a0 /* -3.818863 */),(-0x3bdce /* -3.741425 */),(-0x3a171 /* -3.630642 */),(-0x37bb4 /* -3.483224 */),(-0x34bbd /* -3.295853 */),(-0x310b2 /* -3.065227 */),(-0x2c9c2 /* -2.788124 */),(-0x27622 /* -2.461467 */),(-0x21518 /* -2.082406 */),(-0x1a5fd /* -1.648407 */),(-0x12848 /* -1.157353 */),(-0x9b8f /* -0.607656 */),0x6a /* 0.001629 */,0xabb1 /* 0.670676 */,0x16615 /* 1.398759 */,0x22f22 /* 2.184122 */,0x3061b /* 3.023852 */,0x3e9ec /* 3.913762 */,0x4d928 /* 4.848280 */,0x5d203 /* 5.820373 */,0x6d24c /* 6.821483 */,0x7d76d /* 7.841510 */,0x8de6c /* 8.868837 */,0x9e3f1 /* 9.890405 */,0xae450 /* 10.891848 */,0xbdb91 /* 11.857696 */,0xcc58a /* 12.771649 */,0xd9dee /* 13.616920 */,0xe606c /* 14.376655 */,0xf08ce /* 15.034409 */,0xf931e /* 15.574683 */,0xffbc6 /* 15.983503 */,0x103fbe /* 16.249004 */};
static const fix16_t Ladder_getTune_c2[129] = {0xea6 /* 0.057230 */,0xf76 /* 0.060399 */,0x1051 /* 0.063742 */,0x1138 /* 0.067269 */,0x122c /* 0.070990 */,0x132d /* 0.074915 */,0x143d /* 0.079056 */,0x155b /* 0.083424 */,0x1689 /* 0.088032 */,0x17c7 /* 0.092893 */,0x1917 /* 0.098019 */,0x1a7a /* 0.103426 */,0x1bef /* 0.109128 */,0x1d79 /* 0.115142 */,0x1f19 /* 0.121483 */,0x20cf /* 0.128170 */,0x229d /* 0.135220 */,0x2484 /* 0.142654 */,0x2686 /* 0.150491 */,0x28a4 /* 0.158753 */,0x2ade /* 0.167461 */,0x2d38 /* 0.176640 */,0x2fb2 /* 0.186314 */,0x324e /* 0.196508 */,0x350e /* 0.207250 */,0x37f4 /* 0.218568 */,0x3b01 /* 0.230491 */,0x3e38 /* 0.243051 */,0x419b /* 0.256279 */,0x452c /* 0.270209 */,0x48ed /* 0.284878 */,0x4ce1 /* 0.300321 */,0x510b /* 0.316577 */,0x556c /* 0.333686 */,0x5a08 /* 0.351690 */,0x5ee1 /* 0.370632 */,0x63fb /* 0.390557 */,0x6958 /* 0.411512 */,0x6efc /* 0.433545 */,0x74ea /* 0.456707 */,0x7b26 /* 0.481049 */,0x81b2 /* 0.506625 */,0x8892 /* 0.533490 */,0x8fcb /* 0.561702 */,0x9760 /* 0.591318 */,0x9f55 /* 0.622398 */,0xa7ae /* 0.655003 */,0xb06f /* 0.689196 */,0xb99c /* 0.725040 */,0xc339 /* 0.762600 */,0xcd4b /* 0.801939 */,0xd7d6 /* 0.843124 */,0xe2df /* 0.886218 */,0xee68 /* 0.931288 */,0xfa78 /* 0.978396 */,0x10711 /* 1.027605 */,0x11437 /* 1.078977 */,0x121f0 /* 1.132569 */,0x1303d /* 1.188436 */,0x13f23 /* 1.246629 */,0x14ea4 /* 1.307196 */,0x15ec3 /* 1.370175 */,0x16f83 /* 1.435600 */,0x180e5 /* 1.503497 */,0x192e9 /* 1.573880 */,0x1a591 /* 1.646753 */,0x1b8dc /* 1.722108 */,0x1ccc7 /* 1.799922 */,0x1e151 /* 1.880154 */,0x1f676 /* 1.962745 */,0x20c30 /* 2.047615 */,0x22279 /* 2.134660 */,0x23947 /* 2.223748 */,0x25091 /* 2.314721 */,0x2684a /* 2.407383 */,0x28062 /* 2.501506 */,0x298c9 /* 2.596822 */,0x2b169 /* 2.693016 */,0x2ca2b /* 2.789730 */,0x2e2f5 /* 2.886551 */,0x2fba6 /* 2.983014 */,0x3141e /* 3.078591 */,0x32c35 /* 3.172692 */,0x343c0 /* 3.264659 */,0x35a90 /* 3.353761 */,0x3706e /* 3.439192 */,0x38523 /* 3.520068 */,0x3986d /* 3.595420 */,0x3aa09 /* 3.664200 */,0x3b9ab /* 3.725270 */,0x3c704 /* 3.777410 */,0x3d1be /* 3.819314 */,0x3d97f /* 3.849594 */,0x3dde5 /* 3.866786 */,0x3de8d /* 3.869353 */,0x3db0e /* 3.855698 */,0x3d2fc /* 3.824172 */,0x3c5e9 /* 3.773092 */,0x3b364 /* 3.700758 */,0x39b00 /* 3.605473 */,0x37c4e /* 3.485571 */,0x356e6 /* 3.339449 */,0x32a64 /* 3.165598 */,0x2f66f /* 2.962644 */,0x2bab9 /* 2.729394 */,0x27702 /* 2.464880 */,0x22b1d /* 2.168414 */,0x1d6f2 /* 1.839643 */,0x17a85 /* 1.478603 */,0x115f6 /* 1.085786 */,0xa985 /* 0.662192 */,0x359a /* 0.209386 */,(-0x453b /* -0.270446 */),(-0xc642 /* -0.774453 */),(-0x14c90 /* -1.299085 */),(-0x1d70e /* -1.840068 */),(-0x26474 /* -2.392400 */),(-0x2f34a /* -2.950362 */),(-0x381ef /* -3.507559 */),(-0x40e96 /* -4.056979 */),(-0x49751 /* -4.591092 */),(-0x51a1a /* -5.101968 */),(-0x594d9 /* -5.581437 */),(-0x60572 /* -6.021275 */),(-0x669d6 /* -6.413422 */),(-0x6c00e /* -6.750222 */),(-0x70651 /* -7.024680 */),(-0x73b11 /* -7.230734 */),(-0x75d0f /* -7.363521 */)};
fix16_t Ladder_getTune(fix16_t cv);

typedef struct Ladder__ctx_type_1 {
   fix16_t yd;
   fix16_t yc;
   fix16_t yb;
   fix16_t ya;
   fix16_t wc;
   fix16_t wb;
   fix16_t wa;
   fix16_t tune;
   Util__ctx_type_1 _inst28;
} Ladder__ctx_type_1;

typedef Ladder__ctx_type_1 Ladder_step_type;

void Ladder__ctx_type_1_init(Ladder__ctx_type_1 &_output_);

void Ladder_step_init(Ladder__ctx_type_1 &_output_);

fix16_t Ladder_step(Ladder__ctx_type_1 &_ctx, fix16_t x, fix16_t cv, fix16_t res);

typedef struct Ladder__ctx_type_2 {
   Ladder__ctx_type_1 filter;
} Ladder__ctx_type_2;

typedef Ladder__ctx_type_2 Ladder_process_type;

void Ladder__ctx_type_2_init(Ladder__ctx_type_2 &_output_);

void Ladder_process_init(Ladder__ctx_type_2 &_output_);

fix16_t Ladder_process(Ladder__ctx_type_2 &_ctx, fix16_t input, fix16_t cut, fix16_t res);

typedef Ladder__ctx_type_2 Ladder_noteOn_type;

void Ladder_noteOn_init(Ladder__ctx_type_2 &_output_);

void Ladder_noteOn(Ladder__ctx_type_2 &_ctx, int note, int velocity, int channel);

typedef Ladder__ctx_type_2 Ladder_noteOff_type;

void Ladder_noteOff_init(Ladder__ctx_type_2 &_output_);

void Ladder_noteOff(Ladder__ctx_type_2 &_ctx, int note, int channel);

typedef Ladder__ctx_type_2 Ladder_controlChange_type;

void Ladder_controlChange_init(Ladder__ctx_type_2 &_output_);

void Ladder_controlChange(Ladder__ctx_type_2 &_ctx, int control, int value, int channel);

typedef Ladder__ctx_type_2 Ladder_default_type;

void Ladder_default_init(Ladder__ctx_type_2 &_output_);

void Ladder_default(Ladder__ctx_type_2 &_ctx);



#endif // LADDER_H

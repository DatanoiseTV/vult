
local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i]=v; end
function this.get(a,i)          return a[i]; end
function this.makeArray(size,v) local a = ffi.new("double[?]",size); for i=0,size-1 do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
function this.Sin__ctx_type_0_init()
   local _ctx = {};
   _ctx.pre_x = 0.000000;
   return _ctx;

end

function this.Sin_change_init()
   return this.Sin__ctx_type_0_init();
end

function this.Sin_change(_ctx,x)
   local v = (_ctx.pre_x ~= x);
   _ctx.pre_x = x;
   return v;

end

function this.Sin__ctx_type_1_init()
   local _ctx = {};
   _ctx.y2 = 0.000000;
   _ctx.y1 = 0.000000;
   _ctx.w = 0.000000;
   _ctx.cos_w = 0.000000;
   _ctx._inst2 = this.Sin__ctx_type_0_init();
   this.Sin_sc_osc_start(_ctx);
   return _ctx;

end

function this.Sin_sc_osc_init()
   return this.Sin__ctx_type_1_init();
end

function this.Sin_sc_osc(_ctx,pitch)
   local g = 1.000000;
   if this.Sin_change(_ctx._inst2,pitch) then
      local pre_w = 0.0;
      pre_w = _ctx.w;
      _ctx.w = (0.001165 * this.exp((0.057762 * pitch)));
      g = (this.tan((_ctx.w * 0.500000)) / this.tan((pre_w * 0.500000)));
      _ctx.cos_w = this.cos(_ctx.w);

   end
   local y1_next = ((_ctx.cos_w * _ctx.y1) + ((_ctx.cos_w + 1.000000) * g * _ctx.y2));
   local y2_next = (((_ctx.cos_w + (-1.000000)) * _ctx.y1) + (_ctx.cos_w * g * _ctx.y2));
   _ctx.y1 = this.clip(y1_next,(-1.000000),1.000000);
   _ctx.y2 = this.clip(y2_next,(-1.000000),1.000000);
   return _ctx.y1;

end

function this.Sin_sc_osc_start_init()
   return this.Sin__ctx_type_1_init();
end

function this.Sin_sc_osc_start(_ctx)
   _ctx.y1 = 1.000000;
   _ctx.y2 = ((- _ctx.y1) * 0.500000);

end

function this.Sin__ctx_type_2_init()
   local _ctx = {};
   _ctx.pitch = 0.000000;
   _ctx._inst6 = this.Sin__ctx_type_1_init();
   this.Sin_default(_ctx);
   return _ctx;

end

function this.Sin_process_init()
   return this.Sin__ctx_type_2_init();
end

function this.Sin_process(_ctx,input)
   return this.Sin_sc_osc(_ctx._inst6,_ctx.pitch);

end

function this.Sin_noteOn_init()
   return this.Sin__ctx_type_2_init();
end

function this.Sin_noteOn(_ctx,note,velocity,channel)
   _ctx.pitch = this.real(note);

end

function this.Sin_noteOff_init()
   return this.Sin__ctx_type_2_init();
end

function this.Sin_noteOff(_ctx,note,channel)

end

function this.Sin_controlChange_init()
   return this.Sin__ctx_type_2_init();
end

function this.Sin_controlChange(_ctx,control,value,channel)

end

function this.Sin_default_init()
   return this.Sin__ctx_type_2_init();
end

function this.Sin_default(_ctx)
   _ctx.pitch = 69.000000;

end


function this.process(ctx,in0) return this.Sin_process(ctx,in0) end
function this.noteOn(ctx,in0,in1,in2) return this.Sin_noteOn(ctx,in0,in1,in2) end
function this.noteOff(ctx,in0,in1) return this.Sin_noteOff(ctx,in0,in1) end
function this.controlChange(ctx,in0,in1,in2) return this.Sin_controlChange(ctx,in0,in1,in2) end
function this.init() return this.Sin_process_init() end
function this.default(ctx) return this.Sin_default(ctx) end
this.config = { inputs = 2, outputs = 1, noteon_inputs = 4, noteoff_inputs = 3, controlchange_inputs = 4, is_active = true }
return this


local this = {}
local ffi = require("ffi")
function this.ternary(cond,then_,else_) if cond then return then_ else return else_ end end
function this.eps()             return 1e-18; end
function this.pi()              return 3.1415926535897932384; end
function this.random()          return math.random(); end
function this.irandom()         return math.floor(math.random() * 4294967296); end
function this.clip(x,low,high)  return (this.ternary(x<low,low,this.ternary(x>high,high,x))); end
function this.real(x)           return x; end
function this.int(x)            local int_part,_ = math.modf(x) return int_part; end
function this.sin(x)            return math.sin(x); end
function this.cos(x)            return math.cos(x); end
function this.abs(x)            return math.abs(x); end
function this.exp(x)            return math.exp(x); end
function this.floor(x)          return math.floor(x); end
function this.tan(x)            return math.tan(x); end
function this.tanh(x)           return math.tanh(x); end
function this.sqrt(x)           return x; end
function this.set(a,i,v)        a[i+1]=v; end
function this.get(a,i)          return a[i+1]; end
function this.makeArray(size,v) local a = {}; for i=1,size do a[i]=v end return a; end
function this.wrap_array(a)     return a; end
local Bitcrush_factor_c0 = {24.787522,24.787366,24.786758,24.785421,24.783098,24.779552,24.774563,24.767930,24.759467,24.749003,24.736384,24.721468,24.704127,24.684247,24.661725,24.636469,24.608398,24.577443,24.543542,24.506645,24.466708,24.423697,24.377586,24.328355,24.275991,24.220489,24.161848,24.100074,24.035178,23.967176,23.896090,23.821943,23.744765,23.664590,23.581453,23.495394,23.406457,23.314686,23.220129,23.122837,23.022863,22.920260,22.815085,22.707396,22.597252,22.484713,22.369840,22.252697,22.133345,22.011851,21.888276,21.762688,21.635151,21.505730,21.374491,21.241500,21.106823,20.970525,20.832672,20.693329,20.552560,20.410430,20.267003,20.122343,19.976512,19.829572,19.681586,19.532614,19.382716,19.231953,19.080382,18.928062,18.775049,18.621401,18.467171,18.312414,18.157184,18.001534,17.845514,17.689175,17.532567,17.375738,17.218737,17.061608,16.904399,16.747153,16.589915,16.432726,16.275628,16.118662,15.961866,15.805281,15.648942,15.492887,15.337151,15.181769,15.026773,14.872198,14.718074,14.564431,14.411301,14.258711,14.106690,13.955264,13.804460,13.654302,13.504816,13.356025,13.207950,13.060615,12.914040,12.768245,12.623250,12.479073,12.335732,12.193245,12.051626,11.910893,11.771061,11.632142,11.494151,11.357101,11.221003,11.085870,10.951712,10.818539,10.686362,10.555189,10.425029};
local Bitcrush_factor_c1 = {(-74.359191),(-74.319346),(-74.241444),(-74.127271),(-73.978548),(-73.796938),(-73.584043),(-73.341411),(-73.070535),(-72.772851),(-72.449748),(-72.102564),(-71.732587),(-71.341060),(-70.929179),(-70.498098),(-70.048927),(-69.582736),(-69.100554),(-68.603372),(-68.092144),(-67.567788),(-67.031185),(-66.483186),(-65.924605),(-65.356227),(-64.778807),(-64.193066),(-63.599702),(-62.999381),(-62.392745),(-61.780407),(-61.162958),(-60.540963),(-59.914964),(-59.285480),(-58.653009),(-58.018027),(-57.380989),(-56.742332),(-56.102472),(-55.461808),(-54.820720),(-54.179573),(-53.538712),(-52.898468),(-52.259157),(-51.621079),(-50.984521),(-50.349753),(-49.717035),(-49.086612),(-48.458718),(-47.833573),(-47.211387),(-46.592359),(-45.976677),(-45.364516),(-44.756045),(-44.151422),(-43.550793),(-42.954299),(-42.362071),(-41.774231),(-41.190893),(-40.612165),(-40.038145),(-39.468926),(-38.904594),(-38.345228),(-37.790901),(-37.241679),(-36.697623),(-36.158788),(-35.625226),(-35.096979),(-34.574090),(-34.056592),(-33.544517),(-33.037891),(-32.536736),(-32.041071),(-31.550911),(-31.066266),(-30.587144),(-30.113549),(-29.645482),(-29.182941),(-28.725921),(-28.274415),(-27.828412),(-27.387900),(-26.952864),(-26.523287),(-26.099148),(-25.680427),(-25.267100),(-24.859142),(-24.456525),(-24.059222),(-23.667203),(-23.280435),(-22.898886),(-22.522521),(-22.151305),(-21.785202),(-21.424174),(-21.068182),(-20.717186),(-20.371146),(-20.030021),(-19.693769),(-19.362348),(-19.035712),(-18.713820),(-18.396626),(-18.084086),(-17.776153),(-17.472783),(-17.173929),(-16.879545),(-16.589584),(-16.303999),(-16.022742),(-15.745768),(-15.473027),(-15.204473),(-14.940059),(-14.679735)};
local Bitcrush_factor_c2 = {110.245584,107.691748,105.197072,102.760184,100.379747,98.054453,95.783024,93.564212,91.396800,89.279595,87.211435,85.191185,83.217733,81.289996,79.406916,77.567456,75.770608,74.015384,72.300819,70.625973,68.989924,67.391774,65.830645,64.305680,62.816040,61.360908,59.939485,58.550988,57.194656,55.869743,54.575522,53.311281,52.076327,50.869980,49.691578,48.540474,47.416035,46.317644,45.244697,44.196604,43.172791,42.172695,41.195765,40.241466,39.309274,38.398675,37.509171,36.640272,35.791501,34.962392,34.152489,33.361347,32.588533,31.833620,31.096195,30.375852,29.672197,28.984841,28.313408,27.657528,27.016842,26.390998,25.779651,25.182466,24.599115,24.029277,23.472639,22.928896,22.397749,21.878906,21.372081,20.876998,20.393383,19.920970,19.459502,19.008723,18.568386,18.138250,17.718078,17.307639,16.906708,16.515064,16.132493,15.758785,15.393733,15.037137,14.688802,14.348537,14.016153,13.691469,13.374307,13.064491,12.761853,12.466225,12.177445,11.895355,11.619799,11.350627,11.087690,10.830844,10.579947,10.334863,10.095456,9.861595,9.633152,9.410000,9.192018,8.979085,8.771085,8.567903,8.369427,8.175550,7.986163,7.801164,7.620450,7.443923,7.271484,7.103041,6.938499,6.777769,6.620762,6.467392,6.317575,6.171229,6.028272,5.888628,5.752218,5.618968,5.488804};
function this.Bitcrush_factor(cv)
   local index = this.clip(this.int((127.000000 * cv)),0,127);
   return (Bitcrush_factor_c0[index+1] + (cv * (Bitcrush_factor_c1[index+1] + (Bitcrush_factor_c2[index+1] * cv))));

end

function this.Bitcrush_process(_ctx,i,cv)
   local out = i;
   if (cv == 0.000000) then
      out = i;

   else

      local b = 0.0;
      b = this.Bitcrush_factor(cv);
      local x = 0;
      x = this.int((i * b));
      out = (this.real(x) / b);

   end
   return out;

end

function this.Bitcrush_noteOn(_ctx,note,velocity,channel)

end

function this.Bitcrush_noteOff(_ctx,note,channel)

end

function this.Bitcrush_controlChange(_ctx,control,value,channel)

end

function this.Bitcrush_default(_ctx)

end


function this.process(i,cv) return this.Bitcrush_process(i,cv) end
function this.noteOn(note,velocity,channel) return this.Bitcrush_noteOn(note,velocity,channel) end
function this.noteOff(note,channel) return this.Bitcrush_noteOff(note,channel) end
function this.controlChange(control,value,channel) return this.Bitcrush_controlChange(control,value,channel) end
function this.init() return this.Bitcrush_process_init() end
function this.default(ctx) return this.Bitcrush_default(ctx) end
this.config = { inputs = 2, outputs = 1, noteon_inputs = 3, noteoff_inputs = 2, controlchange_inputs = 3, is_active = false }
return this

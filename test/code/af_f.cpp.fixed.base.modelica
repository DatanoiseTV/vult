
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "af_f.h"



extern "C" {

EXPORT void *af_f__constructor()
{
   Af_f_process_type *data = (Af_f_process_type *)malloc(sizeof(Af_f_process_type));
   Af_f_process_init(*data);
   Af_f_default(*data);
   return (void *)data;
}

EXPORT void af_f__destructor(void *object)
{
   Af_f_process_type *data = (Af_f_process_type *)object;
   free(data);
}

EXPORT double af_f__process(void *object, double in_0)
{
   Af_f_process_type *data = (Af_f_process_type *)object;
   fix16_t ret =  Af_f_process(*data,float_to_fix(in_0)); 
return fix_to_float(ret); 
}


EXPORT void af_f__noteOn(void *object, int note,int velocity,int channel){
   Af_f_process_type *data = (Af_f_process_type *)object;
   if(vel) Af_f_noteOn(*data,(int)note,(int)velocity,(int)channel);
   else Af_f_noteOff(*data,(int)note,(int)channel);
}



EXPORT void af_f__noteOff(void *object, int note,int channel) {
   Af_f_process_type *data = (Af_f_process_type *)object;
   Af_f_noteOff(*data,(int)note,(int)channel);
}



EXPORT void af_f__controlChange(void *object, int control,int value,int channel) {
   Af_f_process_type *data = (Af_f_process_type *)object;
   Af_f_controlChange(*data,(int)control,(int)value,(int)channel);
}


} // extern "C"

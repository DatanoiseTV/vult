
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef AFI_FI_H
#define AFI_FI_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct _tuple___real_int__ {
   float field_0;
   int field_1;
} _tuple___real_int__;

typedef struct Afi_fi__ctx_type_0 {
   int x;
} Afi_fi__ctx_type_0;

typedef Afi_fi__ctx_type_0 Afi_fi_process_type;

void Afi_fi__ctx_type_0_init(Afi_fi__ctx_type_0 &_output_);

void Afi_fi_process_init(Afi_fi__ctx_type_0 &_output_);

void Afi_fi_process(Afi_fi__ctx_type_0 &_ctx, float a, int b, _tuple___real_int__ &_output_);

typedef Afi_fi__ctx_type_0 Afi_fi_noteOn_type;

void Afi_fi_noteOn_init(Afi_fi__ctx_type_0 &_output_);

void Afi_fi_noteOn(Afi_fi__ctx_type_0 &_ctx, int note, int velocity, int channel);

typedef Afi_fi__ctx_type_0 Afi_fi_noteOff_type;

void Afi_fi_noteOff_init(Afi_fi__ctx_type_0 &_output_);

void Afi_fi_noteOff(Afi_fi__ctx_type_0 &_ctx, int note, int channel);

typedef Afi_fi__ctx_type_0 Afi_fi_controlChange_type;

void Afi_fi_controlChange_init(Afi_fi__ctx_type_0 &_output_);

void Afi_fi_controlChange(Afi_fi__ctx_type_0 &_ctx, int control, int value, int channel);

typedef Afi_fi__ctx_type_0 Afi_fi_default_type;

void Afi_fi_default_init(Afi_fi__ctx_type_0 &_output_);

void Afi_fi_default(Afi_fi__ctx_type_0 &_ctx);



#if defined(_MSC_VER)
    //  Microsoft VC++
    #define EXPORT __declspec(dllexport)
#else
    //  GCC
    #define EXPORT __attribute__((visibility("default")))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdlib.h>

EXPORT void *afi_fi__constructor();

EXPORT void afi_fi__destructor(void *object);

EXPORT void afi_fi__process(void *object, double in_0, int in_1, double &out_0, int &out_1);

EXPORT void afi_fi__noteOn(void *object, int note, int vel, int channel);

EXPORT void afi_fi__noteOff(void *object, int note, int channel);

EXPORT void afi_fi__controlChange(void *object, int control, int value, int channel);

#ifdef __cplusplus
}
#endif

#endif // AFI_FI_H

{
   type tuple(int, int, int) {
      val field_0 : int; 
      val field_1 : int; 
      val field_2 : int; 
   }

   fun foo() : tuple(int, int, int) /* scope_0 */
   {
      (foo_ret_0:int) = 0; 
      (foo_ret_1:int) = 1; 
      (foo_ret_2:int) = 2; 
      return (); 
   }

   and foo_ret_0() : int return foo_ret_0; 

   and foo_ret_1() : int return foo_ret_1; 

   and foo_ret_2() : int return foo_ret_2; 

   fun bar() : unit /* scope_0 */
   {
      val (x:int); 
      val (y:int); 
      val (z:int); 
      val (w:int); 
      _ = _inst197:foo(); 
      (x:int) = _inst197:foo_ret_0(); 
      (y:int) = _inst197:foo_ret_1(); 
      (z:int) = _inst197:foo_ret_2(); 
      (w:int) = 3; 
      val (a:int); 
      val (b:int); 
      val (c:int); 
      val (d:int); 
      (a:int) = 0; 
      (b:int) = 1; 
      (c:int) = 2; 
      (d:int) = 3; 
      val (r:int); 
      val (t:int); 
      (r:int) = 0; 
      (t:int) = 1; 
      val (_tmp_5_0:int); 
      (_tmp_5_0:int) = t; 
      val (_tmp_5_1:int); 
      (_tmp_5_1:int) = r; 
      val (_tmp_5_2:int); 
      (_tmp_5_2:int) = 0; 
      (r:int) = _tmp_5_0; 
      (t:int) = _tmp_5_1; 
      (_:int) = _tmp_5_2; 
      val (t1:int); 
      val (t2:int); 
      (t1:int) = 3; 
      (t2:int) = 6; 
   }

}